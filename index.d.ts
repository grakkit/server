/// <reference path="env.d.ts" />
import { types } from './types';
import { events } from './events';
import { obcCommandSender, obpPlugin } from '@grakkit/server-classes';
import * as base from '@grakkit/core';
export { array, chain, data, dev, fetch, file, format, future, load, record, reload, response, root, simplify, sync, task, transfer, unzip } from '@grakkit/core';
/** A valid event priority. */
export declare type priority = 'HIGH' | 'HIGHEST' | 'LOW' | 'LOWEST' | 'MONITOR' | 'NORMAL';
/** A set of listeners attached to an event. */
export declare type cascade = Set<((event: any) => void) | {
    script: (event: any) => void;
    priority: priority;
}>;
/** The main class of this plugin. */
export interface main extends obpPlugin {
    register(namespace: string, name: string, aliases: string[], permission: string, message: string, executor: (sender: obcCommandSender, name: string, args: string[]) => any, tabCompleter: (sender: obcCommandSender, name: string, args: string[]) => string[]): void;
}
/** A session container for this module. */
export declare const session: {
    data: typeof base.session.data;
    event: Map<keyof events, cascade>;
    poly: typeof base.session.poly;
    task: typeof base.session.task;
    type: Map<keyof types, any>;
};
/** Imports the specified type from java. */
export declare function type<X extends keyof types>(name: X): types[X];
/** Registers a custom command to the server. */
export declare function command(options: {
    name: string;
    message?: string;
    aliases?: string[];
    execute?: (sender: obcCommandSender, ...args: string[]) => void;
    namespace?: string;
    permission?: string;
    tabComplete?: (sender: obcCommandSender, ...args: string[]) => string[];
}): void;
/** Attaches one or more listeners to a server event. */
export declare function event<X extends keyof events>(name: X, ...listeners: (((event: InstanceType<events[X]>) => void) | {
    script: (event: InstanceType<events[X]>) => void;
    priority: priority;
})[]): void;
/** The plugin manager instance. */
export declare const manager: import("@grakkit/server-classes").obpPluginManager;
/** This plugin's instance. */
export declare const plugin: main;
/** The server instance. */
export declare const server: import("@grakkit/server-classes").obServer;
/** @deprecated */
export declare const core: {
    array: typeof base.array;
    chain: typeof base.chain;
    console: {
        execute(context: any, ...args: string[]): string;
        complete(context: any, ...args: string[]): string[];
    };
    data: typeof base.data;
    dev: {
        execute(context: any, ...args: string[]): string;
        complete(context: any, ...args: string[]): string[];
    };
    fetch: typeof base.fetch;
    file: typeof base.file;
    format: {
        error(error: any): string;
        output(object: any, condense?: boolean): string;
    };
    meta: {
        hook(script: Function): void;
        push(script: Function): void;
        root: base.record;
        sync: typeof base.sync;
    };
    reload: typeof base.reload;
    root: base.record;
    simplify: typeof base.simplify;
    session: {
        data: Map<string, any>;
        load: Map<string, any>;
        poly: {
            index: number;
            list: Map<number, base.future>;
        };
        task: {
            list: Set<base.future>;
            tick: number;
        };
        type: Map<"java.awt.desktop.AboutEvent" | "java.awt.desktop.AboutHandler" | "com.sun.jdi.AbsentInformationException" | "javax.swing.AbstractAction" | "javax.lang.model.util.AbstractAnnotationValueVisitor6" | "javax.lang.model.util.AbstractAnnotationValueVisitor7" | "javax.lang.model.util.AbstractAnnotationValueVisitor8" | "javax.lang.model.util.AbstractAnnotationValueVisitor9" | "javax.swing.border.AbstractBorder" | "javax.swing.AbstractButton" | "javax.swing.AbstractCellEditor" | "java.time.chrono.AbstractChronology" | "java.util.AbstractCollection" | "javax.swing.colorchooser.AbstractColorChooserPanel" | "javax.swing.text.AbstractDocument" | "javax.swing.text.AbstractDocument.AttributeContext" | "javax.swing.text.AbstractDocument.Content" | "javax.swing.text.AbstractDocument.ElementEdit" | "javax.lang.model.util.AbstractElementVisitor6" | "javax.lang.model.util.AbstractElementVisitor7" | "javax.lang.model.util.AbstractElementVisitor8" | "javax.lang.model.util.AbstractElementVisitor9" | "java.util.concurrent.AbstractExecutorService" | "java.nio.channels.spi.AbstractInterruptibleChannel" | "javax.swing.tree.AbstractLayoutCache" | "javax.swing.tree.AbstractLayoutCache.NodeDimensions" | "java.util.AbstractList" | "javax.swing.AbstractListModel" | "java.util.AbstractMap" | "java.util.AbstractMap.SimpleEntry" | "java.util.AbstractMap.SimpleImmutableEntry" | "java.lang.AbstractMethodError" | "java.awt.image.AbstractMultiResolutionImage" | "com.sun.nio.sctp.AbstractNotificationHandler" | "java.util.concurrent.locks.AbstractOwnableSynchronizer" | "java.util.prefs.AbstractPreferences" | "javax.annotation.processing.AbstractProcessor" | "java.util.AbstractQueue" | "java.util.concurrent.locks.AbstractQueuedLongSynchronizer" | "java.util.concurrent.locks.AbstractQueuedSynchronizer" | "javax.swing.plaf.nimbus.AbstractRegionPainter" | "javax.swing.plaf.nimbus.AbstractRegionPainter.PaintContext" | "javax.swing.plaf.nimbus.AbstractRegionPainter.PaintContext.CacheMode" | "jdk.dynalink.support.AbstractRelinkableCallSite" | "java.util.spi.AbstractResourceBundleProvider" | "javax.script.AbstractScriptEngine" | "java.nio.channels.spi.AbstractSelectableChannel" | "java.nio.channels.spi.AbstractSelectionKey" | "java.nio.channels.spi.AbstractSelector" | "java.util.AbstractSequentialList" | "java.util.AbstractSet" | "javax.swing.AbstractSpinnerModel" | "javax.swing.table.AbstractTableModel" | "javax.lang.model.util.AbstractTypeVisitor6" | "javax.lang.model.util.AbstractTypeVisitor7" | "javax.lang.model.util.AbstractTypeVisitor8" | "javax.lang.model.util.AbstractTypeVisitor9" | "javax.swing.undo.AbstractUndoableEdit" | "org.w3c.dom.views.AbstractView" | "javax.swing.text.AbstractWriter" | "java.nio.channels.AcceptPendingException" | "java.security.AccessControlContext" | "java.security.AccessControlException" | "java.security.AccessController" | "java.nio.file.AccessDeniedException" | "java.rmi.AccessException" | "com.sun.java.accessibility.util.AccessibilityEventMonitor" | "com.sun.java.accessibility.util.AccessibilityListenerList" | "javax.accessibility.AccessibilityProvider" | "com.sun.jdi.Accessible" | "javax.accessibility.Accessible" | "javax.accessibility.AccessibleAction" | "javax.accessibility.AccessibleAttributeSequence" | "javax.accessibility.AccessibleBundle" | "javax.accessibility.AccessibleComponent" | "javax.accessibility.AccessibleContext" | "javax.accessibility.AccessibleEditableText" | "javax.accessibility.AccessibleExtendedComponent" | "javax.accessibility.AccessibleExtendedTable" | "javax.accessibility.AccessibleExtendedText" | "javax.accessibility.AccessibleHyperlink" | "javax.accessibility.AccessibleHypertext" | "javax.accessibility.AccessibleIcon" | "javax.accessibility.AccessibleKeyBinding" | "java.lang.reflect.AccessibleObject" | "javax.accessibility.AccessibleRelation" | "javax.accessibility.AccessibleRelationSet" | "javax.accessibility.AccessibleRole" | "javax.accessibility.AccessibleSelection" | "javax.accessibility.AccessibleState" | "javax.accessibility.AccessibleStateSet" | "javax.accessibility.AccessibleStreamable" | "javax.accessibility.AccessibleTable" | "javax.accessibility.AccessibleTableModelChange" | "javax.accessibility.AccessibleText" | "javax.accessibility.AccessibleTextSequence" | "javax.accessibility.AccessibleValue" | "java.nio.file.AccessMode" | "com.sun.jdi.event.AccessWatchpointEvent" | "com.sun.jdi.request.AccessWatchpointRequest" | "javax.security.auth.login.AccountException" | "javax.security.auth.login.AccountExpiredException" | "javax.security.auth.login.AccountLockedException" | "javax.security.auth.login.AccountNotFoundException" | "java.nio.file.attribute.AclEntry" | "java.nio.file.attribute.AclEntry.Builder" | "java.nio.file.attribute.AclEntryFlag" | "java.nio.file.attribute.AclEntryPermission" | "java.nio.file.attribute.AclEntryType" | "java.nio.file.attribute.AclFileAttributeView" | "javax.swing.Action" | "java.awt.event.ActionEvent" | "java.awt.event.ActionListener" | "javax.swing.ActionMap" | "javax.swing.plaf.ActionMapUIResource" | "java.rmi.activation.Activatable" | "java.rmi.activation.ActivateFailedException" | "java.rmi.activation.ActivationDesc" | "java.rmi.activation.ActivationException" | "java.rmi.activation.ActivationGroup" | "java.rmi.activation.ActivationGroup_Stub" | "java.rmi.activation.ActivationGroupDesc" | "java.rmi.activation.ActivationGroupDesc.CommandEnvironment" | "java.rmi.activation.ActivationGroupID" | "java.rmi.activation.ActivationID" | "java.rmi.activation.ActivationInstantiator" | "java.rmi.activation.ActivationMonitor" | "java.rmi.activation.ActivationSystem" | "java.rmi.activation.Activator" | "java.awt.ActiveEvent" | "java.awt.Adjustable" | "java.awt.event.AdjustmentEvent" | "java.awt.event.AdjustmentListener" | "java.util.zip.Adler32" | "javax.crypto.AEADBadTagException" | "java.awt.geom.AffineTransform" | "java.awt.image.AffineTransformOp" | "com.sun.tools.attach.AgentInitializationException" | "com.sun.tools.attach.AgentLoadException" | "java.security.AlgorithmConstraints" | "crypto.javax.xml.crypto.AlgorithmMethod" | "java.security.AlgorithmParameterGenerator" | "java.security.AlgorithmParameterGeneratorSpi" | "java.security.AlgorithmParameters" | "java.security.spec.AlgorithmParameterSpec" | "java.security.AlgorithmParametersSpi" | "java.security.AllPermission" | "java.awt.AlphaComposite" | "java.nio.channels.AlreadyBoundException" | "java.rmi.AlreadyBoundException" | "java.nio.channels.AlreadyConnectedException" | "javax.swing.event.AncestorEvent" | "javax.swing.event.AncestorListener" | "java.lang.reflect.AnnotatedArrayType" | "javax.lang.model.AnnotatedConstruct" | "java.lang.reflect.AnnotatedElement" | "java.lang.reflect.AnnotatedParameterizedType" | "java.lang.reflect.AnnotatedType" | "com.sun.source.tree.AnnotatedTypeTree" | "java.lang.reflect.AnnotatedTypeVariable" | "java.lang.reflect.AnnotatedWildcardType" | "java.lang.annotation.Annotation" | "java.text.Annotation" | "jdk.jfr.AnnotationElement" | "java.lang.annotation.AnnotationFormatError" | "javax.lang.model.element.AnnotationMirror" | "com.sun.source.tree.AnnotationTree" | "java.lang.annotation.AnnotationTypeMismatchException" | "javax.lang.model.element.AnnotationValue" | "javax.lang.model.element.AnnotationValueVisitor" | "javax.security.auth.login.AppConfigurationEntry" | "javax.security.auth.login.AppConfigurationEntry.LoginModuleControlFlag" | "java.lang.Appendable" | "java.awt.desktop.AppEvent" | "java.awt.desktop.AppForegroundEvent" | "java.awt.desktop.AppForegroundListener" | "java.awt.desktop.AppHiddenEvent" | "java.awt.desktop.AppHiddenListener" | "java.awt.desktop.AppReopenedEvent" | "java.awt.desktop.AppReopenedListener" | "java.awt.geom.Arc2D" | "java.awt.geom.Arc2D.Double" | "java.awt.geom.Arc2D.Float" | "java.awt.geom.Area" | "java.awt.image.AreaAveragingScaleFilter" | "java.lang.ArithmeticException" | "java.lang.reflect.Array" | "java.sql.Array" | "com.sun.source.tree.ArrayAccessTree" | "java.util.concurrent.ArrayBlockingQueue" | "java.util.ArrayDeque" | "java.lang.ArrayIndexOutOfBoundsException" | "java.util.ArrayList" | "com.sun.jdi.ArrayReference" | "java.util.Arrays" | "java.lang.ArrayStoreException" | "com.sun.jdi.ArrayType" | "javax.lang.model.type.ArrayType" | "javax.management.openmbean.ArrayType" | "com.sun.source.tree.ArrayTypeTree" | "java.lang.AssertionError" | "com.sun.source.tree.AssertTree" | "com.sun.source.tree.AssignmentTree" | "com.sun.nio.sctp.Association" | "com.sun.nio.sctp.AssociationChangeNotification" | "com.sun.nio.sctp.AssociationChangeNotification.AssocChangeEvent" | "javax.swing.text.AsyncBoxView" | "java.nio.channels.AsynchronousByteChannel" | "java.nio.channels.AsynchronousChannel" | "java.nio.channels.AsynchronousChannelGroup" | "java.nio.channels.spi.AsynchronousChannelProvider" | "java.nio.channels.AsynchronousCloseException" | "java.nio.channels.AsynchronousFileChannel" | "java.nio.channels.AsynchronousServerSocketChannel" | "java.nio.channels.AsynchronousSocketChannel" | "java.util.concurrent.atomic.AtomicBoolean" | "java.util.concurrent.atomic.AtomicInteger" | "java.util.concurrent.atomic.AtomicIntegerArray" | "java.util.concurrent.atomic.AtomicIntegerFieldUpdater" | "java.util.concurrent.atomic.AtomicLong" | "java.util.concurrent.atomic.AtomicLongArray" | "java.util.concurrent.atomic.AtomicLongFieldUpdater" | "java.util.concurrent.atomic.AtomicMarkableReference" | "java.nio.file.AtomicMoveNotSupportedException" | "java.util.concurrent.atomic.AtomicReference" | "java.util.concurrent.atomic.AtomicReferenceArray" | "java.util.concurrent.atomic.AtomicReferenceFieldUpdater" | "java.util.concurrent.atomic.AtomicStampedReference" | "javax.smartcardio.ATR" | "com.sun.jdi.connect.AttachingConnector" | "com.sun.tools.attach.AttachNotSupportedException" | "com.sun.tools.attach.AttachOperationFailedException" | "com.sun.tools.attach.AttachPermission" | "com.sun.tools.attach.spi.AttachProvider" | "org.w3c.dom.Attr" | "javax.management.Attribute" | "javax.naming.directory.Attribute" | "javax.print.attribute.Attribute" | "javax.xml.stream.events.Attribute" | "javax.management.AttributeChangeNotification" | "javax.management.AttributeChangeNotificationFilter" | "java.text.AttributedCharacterIterator" | "java.text.AttributedCharacterIterator.Attribute" | "java.text.AttributedString" | "javax.print.AttributeException" | "javax.naming.directory.AttributeInUseException" | "javax.management.AttributeList" | "javax.swing.text.html.parser.AttributeList" | "javax.naming.directory.AttributeModificationException" | "javax.management.AttributeNotFoundException" | "java.util.jar.Attributes" | "javax.naming.directory.Attributes" | "org.xml.sax.Attributes" | "java.util.jar.Attributes.Name" | "org.xml.sax.ext.Attributes2" | "org.xml.sax.ext.Attributes2Impl" | "javax.print.attribute.AttributeSet" | "javax.swing.text.AttributeSet" | "javax.swing.text.AttributeSet.CharacterAttribute" | "javax.swing.text.AttributeSet.ColorAttribute" | "javax.swing.text.AttributeSet.FontAttribute" | "javax.swing.text.AttributeSet.ParagraphAttribute" | "javax.print.attribute.AttributeSetUtilities" | "org.xml.sax.helpers.AttributesImpl" | "com.sun.source.doctree.AttributeTree" | "com.sun.source.doctree.AttributeTree.ValueKind" | "javax.management.AttributeValueExp" | "java.nio.file.attribute.AttributeView" | "javax.sound.sampled.AudioFileFormat" | "javax.sound.sampled.AudioFileFormat.Type" | "javax.sound.sampled.spi.AudioFileReader" | "javax.sound.sampled.spi.AudioFileWriter" | "javax.sound.sampled.AudioFormat" | "javax.sound.sampled.AudioFormat.Encoding" | "javax.sound.sampled.AudioInputStream" | "javax.sound.sampled.AudioPermission" | "javax.sound.sampled.AudioSystem" | "javax.naming.AuthenticationException" | "sasl.javax.security.sasl.AuthenticationException" | "javax.naming.AuthenticationNotSupportedException" | "com.sun.net.httpserver.Authenticator" | "java.net.Authenticator" | "com.sun.net.httpserver.Authenticator.Failure" | "java.net.Authenticator.RequestorType" | "com.sun.net.httpserver.Authenticator.Result" | "com.sun.net.httpserver.Authenticator.Retry" | "com.sun.net.httpserver.Authenticator.Success" | "jgss.com.sun.security.jgss.AuthorizationDataEntry" | "sasl.javax.security.sasl.AuthorizeCallback" | "com.sun.source.doctree.AuthorTree" | "javax.security.auth.AuthPermission" | "java.security.AuthProvider" | "java.lang.AutoCloseable" | "java.awt.dnd.Autoscroll" | "java.awt.AWTError" | "java.awt.AWTEvent" | "java.awt.event.AWTEventListener" | "java.awt.event.AWTEventListenerProxy" | "com.sun.java.accessibility.util.AWTEventMonitor" | "java.awt.AWTEventMulticaster" | "java.awt.AWTException" | "java.awt.AWTKeyStroke" | "java.awt.AWTPermission" | "java.util.prefs.BackingStoreException" | "javax.management.BadAttributeValueExpException" | "javax.management.BadBinaryOpValueExpException" | "javax.swing.text.BadLocationException" | "javax.crypto.BadPaddingException" | "javax.management.BadStringOperationException" | "java.awt.image.BandCombineOp" | "java.awt.image.BandedSampleModel" | "java.util.Base64" | "java.util.Base64.Decoder" | "java.util.Base64.Encoder" | "javax.imageio.plugins.tiff.BaselineTIFFTagSet" | "java.awt.image.BaseMultiResolutionImage" | "rowset.javax.sql.rowset.BaseRowSet" | "java.util.stream.BaseStream" | "javax.swing.plaf.basic.BasicArrowButton" | "javax.naming.directory.BasicAttribute" | "javax.naming.directory.BasicAttributes" | "com.sun.net.httpserver.BasicAuthenticator" | "javax.swing.plaf.basic.BasicBorders" | "javax.swing.plaf.basic.BasicBorders.ButtonBorder" | "javax.swing.plaf.basic.BasicBorders.FieldBorder" | "javax.swing.plaf.basic.BasicBorders.MarginBorder" | "javax.swing.plaf.basic.BasicBorders.MenuBarBorder" | "javax.swing.plaf.basic.BasicBorders.RadioButtonBorder" | "javax.swing.plaf.basic.BasicBorders.RolloverButtonBorder" | "javax.swing.plaf.basic.BasicBorders.SplitPaneBorder" | "javax.swing.plaf.basic.BasicBorders.ToggleButtonBorder" | "javax.swing.plaf.basic.BasicButtonListener" | "javax.swing.plaf.basic.BasicButtonUI" | "javax.swing.plaf.basic.BasicCheckBoxMenuItemUI" | "javax.swing.plaf.basic.BasicCheckBoxUI" | "javax.swing.plaf.basic.BasicColorChooserUI" | "javax.swing.plaf.basic.BasicComboBoxEditor" | "javax.swing.plaf.basic.BasicComboBoxEditor.UIResource" | "javax.swing.plaf.basic.BasicComboBoxRenderer" | "javax.swing.plaf.basic.BasicComboBoxRenderer.UIResource" | "javax.swing.plaf.basic.BasicComboBoxUI" | "javax.swing.plaf.basic.BasicComboPopup" | "javax.naming.ldap.BasicControl" | "javax.swing.plaf.basic.BasicDesktopIconUI" | "javax.swing.plaf.basic.BasicDesktopPaneUI" | "javax.swing.plaf.basic.BasicDirectoryModel" | "javax.swing.plaf.basic.BasicEditorPaneUI" | "java.nio.file.attribute.BasicFileAttributes" | "java.nio.file.attribute.BasicFileAttributeView" | "javax.swing.plaf.basic.BasicFileChooserUI" | "javax.swing.plaf.basic.BasicFormattedTextFieldUI" | "javax.swing.plaf.basic.BasicGraphicsUtils" | "javax.swing.plaf.basic.BasicHTML" | "javax.swing.plaf.basic.BasicIconFactory" | "javax.swing.plaf.basic.BasicInternalFrameTitlePane" | "javax.swing.plaf.basic.BasicInternalFrameUI" | "javax.swing.plaf.basic.BasicLabelUI" | "javax.swing.plaf.basic.BasicListUI" | "javax.swing.plaf.basic.BasicLookAndFeel" | "javax.swing.plaf.basic.BasicMenuBarUI" | "javax.swing.plaf.basic.BasicMenuItemUI" | "javax.swing.plaf.basic.BasicMenuUI" | "javax.swing.plaf.basic.BasicOptionPaneUI" | "javax.swing.plaf.basic.BasicOptionPaneUI.ButtonAreaLayout" | "javax.swing.plaf.basic.BasicPanelUI" | "javax.swing.plaf.basic.BasicPasswordFieldUI" | "java.security.BasicPermission" | "javax.swing.plaf.basic.BasicPopupMenuSeparatorUI" | "javax.swing.plaf.basic.BasicPopupMenuUI" | "javax.swing.plaf.basic.BasicProgressBarUI" | "javax.swing.plaf.basic.BasicRadioButtonMenuItemUI" | "javax.swing.plaf.basic.BasicRadioButtonUI" | "javax.swing.plaf.basic.BasicRootPaneUI" | "javax.swing.plaf.basic.BasicScrollBarUI" | "javax.swing.plaf.basic.BasicScrollPaneUI" | "javax.swing.plaf.basic.BasicSeparatorUI" | "javax.swing.plaf.basic.BasicSliderUI" | "javax.swing.plaf.basic.BasicSpinnerUI" | "javax.swing.plaf.basic.BasicSplitPaneDivider" | "javax.swing.plaf.basic.BasicSplitPaneUI" | "java.awt.BasicStroke" | "javax.swing.plaf.basic.BasicTabbedPaneUI" | "javax.swing.plaf.basic.BasicTableHeaderUI" | "javax.swing.plaf.basic.BasicTableUI" | "javax.swing.plaf.basic.BasicTextAreaUI" | "javax.swing.plaf.basic.BasicTextFieldUI" | "javax.swing.plaf.basic.BasicTextPaneUI" | "javax.swing.plaf.basic.BasicTextUI" | "javax.swing.plaf.basic.BasicTextUI.BasicCaret" | "javax.swing.plaf.basic.BasicTextUI.BasicHighlighter" | "javax.swing.plaf.basic.BasicToggleButtonUI" | "javax.swing.plaf.basic.BasicToolBarSeparatorUI" | "javax.swing.plaf.basic.BasicToolBarUI" | "javax.swing.plaf.basic.BasicToolTipUI" | "javax.swing.plaf.basic.BasicTreeUI" | "javax.swing.plaf.basic.BasicViewportUI" | "java.sql.BatchUpdateException" | "java.beans.beancontext.BeanContext" | "java.beans.beancontext.BeanContextChild" | "java.beans.beancontext.BeanContextChildComponentProxy" | "java.beans.beancontext.BeanContextChildSupport" | "java.beans.beancontext.BeanContextContainerProxy" | "java.beans.beancontext.BeanContextEvent" | "java.beans.beancontext.BeanContextMembershipEvent" | "java.beans.beancontext.BeanContextMembershipListener" | "java.beans.beancontext.BeanContextProxy" | "java.beans.beancontext.BeanContextServiceAvailableEvent" | "java.beans.beancontext.BeanContextServiceProvider" | "java.beans.beancontext.BeanContextServiceProviderBeanInfo" | "java.beans.beancontext.BeanContextServiceRevokedEvent" | "java.beans.beancontext.BeanContextServiceRevokedListener" | "java.beans.beancontext.BeanContextServices" | "java.beans.beancontext.BeanContextServicesListener" | "java.beans.beancontext.BeanContextServicesSupport" | "java.beans.beancontext.BeanContextServicesSupport.BCSSServiceProvider" | "java.beans.beancontext.BeanContextSupport" | "java.beans.beancontext.BeanContextSupport.BCSIterator" | "java.beans.BeanDescriptor" | "java.beans.BeanInfo" | "java.beans.Beans" | "jdk.dynalink.beans.BeansLinker" | "javax.swing.border.BevelBorder" | "java.util.function.BiConsumer" | "java.text.Bidi" | "java.util.function.BiFunction" | "java.math.BigDecimal" | "java.math.BigInteger" | "java.util.function.BinaryOperator" | "javax.naming.BinaryRefAddr" | "com.sun.source.tree.BinaryTree" | "java.net.BindException" | "javax.naming.Binding" | "javax.script.Bindings" | "java.util.function.BiPredicate" | "java.util.BitSet" | "java.sql.Blob" | "java.util.concurrent.BlockingDeque" | "java.util.concurrent.BlockingQueue" | "com.sun.source.doctree.BlockTagTree" | "com.sun.source.tree.BlockTree" | "javax.swing.text.html.BlockView" | "javax.imageio.plugins.bmp.BMPImageWriteParam" | "java.awt.print.Book" | "java.lang.Boolean" | "javax.sound.sampled.BooleanControl" | "javax.sound.sampled.BooleanControl.Type" | "java.util.function.BooleanSupplier" | "com.sun.jdi.BooleanType" | "com.sun.jdi.BooleanValue" | "com.sun.jdi.Bootstrap" | "java.lang.BootstrapMethodError" | "javax.swing.border.Border" | "javax.swing.BorderFactory" | "java.awt.BorderLayout" | "javax.swing.plaf.BorderUIResource" | "javax.swing.plaf.BorderUIResource.BevelBorderUIResource" | "javax.swing.plaf.BorderUIResource.CompoundBorderUIResource" | "javax.swing.plaf.BorderUIResource.EmptyBorderUIResource" | "javax.swing.plaf.BorderUIResource.EtchedBorderUIResource" | "javax.swing.plaf.BorderUIResource.LineBorderUIResource" | "javax.swing.plaf.BorderUIResource.MatteBorderUIResource" | "javax.swing.plaf.BorderUIResource.TitledBorderUIResource" | "javax.swing.BoundedRangeModel" | "javax.swing.Box" | "javax.swing.Box.Filler" | "javax.swing.BoxLayout" | "javax.swing.text.BoxView" | "java.text.BreakIterator" | "java.text.spi.BreakIteratorProvider" | "com.sun.jdi.event.BreakpointEvent" | "com.sun.jdi.request.BreakpointRequest" | "com.sun.source.tree.BreakTree" | "java.util.concurrent.BrokenBarrierException" | "java.nio.Buffer" | "java.awt.BufferCapabilities" | "java.awt.BufferCapabilities.FlipContents" | "java.awt.image.BufferedImage" | "java.awt.image.BufferedImageFilter" | "java.awt.image.BufferedImageOp" | "java.io.BufferedInputStream" | "java.io.BufferedOutputStream" | "java.io.BufferedReader" | "java.io.BufferedWriter" | "java.nio.BufferOverflowException" | "java.lang.management.BufferPoolMXBean" | "java.awt.image.BufferStrategy" | "java.nio.BufferUnderflowException" | "java.awt.Button" | "javax.swing.ButtonGroup" | "javax.swing.ButtonModel" | "javax.swing.plaf.ButtonUI" | "java.lang.Byte" | "java.io.ByteArrayInputStream" | "java.io.ByteArrayOutputStream" | "java.nio.ByteBuffer" | "java.nio.channels.ByteChannel" | "java.awt.image.ByteLookupTable" | "java.nio.ByteOrder" | "com.sun.jdi.ByteType" | "com.sun.jdi.ByteValue" | "crypto.javax.xml.crypto.dsig.spec.C14NMethodParameterSpec" | "rowset.javax.sql.rowset.CachedRowSet" | "java.net.CacheRequest" | "java.net.CacheResponse" | "java.util.Calendar" | "java.util.Calendar.Builder" | "java.util.spi.CalendarDataProvider" | "java.util.spi.CalendarNameProvider" | "java.util.concurrent.Callable" | "java.sql.CallableStatement" | "javax.security.auth.callback.Callback" | "javax.security.auth.callback.CallbackHandler" | "java.lang.invoke.CallSite" | "jdk.dynalink.CallSiteDescriptor" | "javax.print.CancelablePrintJob" | "java.util.concurrent.CancellationException" | "java.nio.channels.CancelledKeyException" | "javax.naming.CannotProceedException" | "javax.swing.undo.CannotRedoException" | "javax.swing.undo.CannotUndoException" | "crypto.javax.xml.crypto.dsig.CanonicalizationMethod" | "java.awt.Canvas" | "javax.smartcardio.Card" | "javax.smartcardio.CardChannel" | "javax.smartcardio.CardException" | "java.awt.CardLayout" | "javax.smartcardio.CardNotPresentException" | "javax.smartcardio.CardPermission" | "javax.smartcardio.CardTerminal" | "javax.smartcardio.CardTerminals" | "javax.smartcardio.CardTerminals.State" | "javax.swing.text.Caret" | "javax.swing.event.CaretEvent" | "javax.swing.event.CaretListener" | "com.sun.source.tree.CaseTree" | "javax.xml.catalog.Catalog" | "javax.xml.catalog.CatalogException" | "javax.xml.catalog.CatalogFeatures" | "javax.xml.catalog.CatalogFeatures.Builder" | "javax.xml.catalog.CatalogFeatures.Feature" | "javax.xml.catalog.CatalogManager" | "javax.xml.catalog.CatalogResolver" | "com.sun.source.tree.CatchTree" | "org.w3c.dom.CDATASection" | "javax.swing.CellEditor" | "javax.swing.event.CellEditorListener" | "javax.swing.CellRendererPane" | "java.security.cert.Certificate" | "java.security.cert.Certificate.CertificateRep" | "java.security.cert.CertificateEncodingException" | "java.security.cert.CertificateException" | "java.security.cert.CertificateExpiredException" | "java.security.cert.CertificateFactory" | "java.security.cert.CertificateFactorySpi" | "java.security.cert.CertificateNotYetValidException" | "java.security.cert.CertificateParsingException" | "java.security.cert.CertificateRevokedException" | "java.security.cert.CertPath" | "java.security.cert.CertPath.CertPathRep" | "java.security.cert.CertPathBuilder" | "java.security.cert.CertPathBuilderException" | "java.security.cert.CertPathBuilderResult" | "java.security.cert.CertPathBuilderSpi" | "java.security.cert.CertPathChecker" | "java.security.cert.CertPathParameters" | "javax.net.ssl.CertPathTrustManagerParameters" | "java.security.cert.CertPathValidator" | "java.security.cert.CertPathValidatorException" | "java.security.cert.CertPathValidatorException.BasicReason" | "java.security.cert.CertPathValidatorException.Reason" | "java.security.cert.CertPathValidatorResult" | "java.security.cert.CertPathValidatorSpi" | "java.security.cert.CertSelector" | "java.security.cert.CertStore" | "java.security.cert.CertStoreException" | "java.security.cert.CertStoreParameters" | "java.security.cert.CertStoreSpi" | "javax.crypto.spec.ChaCha20ParameterSpec" | "jdk.dynalink.support.ChainedCallSite" | "javax.swing.text.ChangedCharSetException" | "javax.swing.event.ChangeEvent" | "javax.swing.event.ChangeListener" | "java.nio.channels.Channel" | "jgss.org.ietf.jgss.ChannelBinding" | "java.nio.channels.Channels" | "jdk.nio.Channels" | "jdk.nio.Channels.SelectableChannelCloser" | "java.lang.Character" | "java.lang.Character.Subset" | "java.lang.Character.UnicodeBlock" | "java.lang.Character.UnicodeScript" | "java.nio.charset.CharacterCodingException" | "org.w3c.dom.CharacterData" | "java.text.CharacterIterator" | "javax.xml.stream.events.Characters" | "java.io.CharArrayReader" | "java.io.CharArrayWriter" | "java.nio.CharBuffer" | "java.io.CharConversionException" | "java.lang.CharSequence" | "java.nio.charset.Charset" | "java.nio.charset.CharsetDecoder" | "java.nio.charset.CharsetEncoder" | "java.nio.charset.spi.CharsetProvider" | "com.sun.jdi.CharType" | "com.sun.jdi.CharValue" | "java.awt.Checkbox" | "java.awt.CheckboxGroup" | "java.awt.CheckboxMenuItem" | "java.util.zip.CheckedInputStream" | "java.util.zip.CheckedOutputStream" | "java.util.zip.Checksum" | "java.awt.Choice" | "javax.security.auth.callback.ChoiceCallback" | "java.text.ChoiceFormat" | "javax.print.attribute.standard.Chromaticity" | "java.time.temporal.ChronoField" | "java.time.chrono.ChronoLocalDate" | "java.time.chrono.ChronoLocalDateTime" | "java.time.chrono.Chronology" | "java.time.chrono.ChronoPeriod" | "java.time.temporal.ChronoUnit" | "java.time.chrono.ChronoZonedDateTime" | "javax.crypto.Cipher" | "javax.crypto.CipherInputStream" | "javax.crypto.CipherOutputStream" | "javax.crypto.CipherSpi" | "java.lang.Class" | "java.lang.ClassCastException" | "java.lang.ClassCircularityError" | "java.lang.instrument.ClassDefinition" | "java.lang.instrument.ClassFileTransformer" | "java.lang.ClassFormatError" | "java.lang.ClassLoader" | "com.sun.jdi.ClassLoaderReference" | "javax.management.loading.ClassLoaderRepository" | "java.lang.management.ClassLoadingMXBean" | "java.lang.ClassNotFoundException" | "com.sun.jdi.ClassNotLoadedException" | "com.sun.jdi.ClassNotPreparedException" | "com.sun.jdi.ClassObjectReference" | "com.sun.jdi.event.ClassPrepareEvent" | "com.sun.jdi.request.ClassPrepareRequest" | "com.sun.source.tree.ClassTree" | "com.sun.jdi.ClassType" | "com.sun.jdi.event.ClassUnloadEvent" | "com.sun.jdi.request.ClassUnloadRequest" | "java.lang.ClassValue" | "java.lang.ref.Cleaner" | "java.lang.ref.Cleaner.Cleanable" | "java.sql.ClientInfoStatus" | "javax.sound.sampled.Clip" | "java.awt.datatransfer.Clipboard" | "java.awt.datatransfer.ClipboardOwner" | "java.sql.Clob" | "java.time.Clock" | "java.lang.Cloneable" | "java.lang.CloneNotSupportedException" | "java.io.Closeable" | "java.nio.channels.ClosedByInterruptException" | "java.nio.channels.ClosedChannelException" | "com.sun.jdi.connect.spi.ClosedConnectionException" | "java.nio.file.ClosedDirectoryStreamException" | "java.nio.file.ClosedFileSystemException" | "java.nio.channels.ClosedSelectorException" | "java.nio.file.ClosedWatchServiceException" | "java.awt.color.CMMException" | "java.nio.charset.CoderMalfunctionError" | "java.nio.charset.CoderResult" | "java.security.CodeSigner" | "java.security.CodeSource" | "java.nio.charset.CodingErrorAction" | "java.text.CollationElementIterator" | "java.text.CollationKey" | "java.text.Collator" | "java.text.spi.CollatorProvider" | "java.util.Collection" | "java.security.cert.CollectionCertStoreParameters" | "java.util.Collections" | "java.util.stream.Collector" | "java.util.stream.Collector.Characteristics" | "java.util.stream.Collectors" | "java.awt.Color" | "javax.swing.colorchooser.ColorChooserComponentFactory" | "javax.swing.plaf.ColorChooserUI" | "java.awt.image.ColorConvertOp" | "java.awt.image.ColorModel" | "javax.swing.colorchooser.ColorSelectionModel" | "java.awt.color.ColorSpace" | "javax.print.attribute.standard.ColorSupported" | "javax.swing.plaf.synth.ColorType" | "javax.swing.plaf.ColorUIResource" | "javax.swing.ComboBoxEditor" | "javax.swing.ComboBoxModel" | "javax.swing.plaf.ComboBoxUI" | "javax.swing.plaf.basic.ComboPopup" | "javax.smartcardio.CommandAPDU" | "javax.xml.stream.events.Comment" | "org.w3c.dom.Comment" | "com.sun.source.doctree.CommentTree" | "javax.sql.CommonDataSource" | "javax.naming.CommunicationException" | "java.lang.Comparable" | "java.util.Comparator" | "javax.script.Compilable" | "java.lang.management.CompilationMXBean" | "com.sun.source.tree.CompilationUnitTree" | "javax.script.CompiledScript" | "java.util.concurrent.CompletableFuture" | "java.util.concurrent.CompletableFuture.AsynchronousCompletionTask" | "javax.annotation.processing.Completion" | "java.util.concurrent.CompletionException" | "java.nio.channels.CompletionHandler" | "javax.annotation.processing.Completions" | "java.util.concurrent.CompletionService" | "java.util.concurrent.CompletionStage" | "java.awt.Component" | "java.awt.Component.BaselineResizeBehavior" | "java.awt.event.ComponentAdapter" | "java.awt.image.ComponentColorModel" | "java.awt.event.ComponentEvent" | "javax.swing.ComponentInputMap" | "javax.swing.plaf.ComponentInputMapUIResource" | "java.awt.event.ComponentListener" | "java.awt.ComponentOrientation" | "java.awt.image.ComponentSampleModel" | "javax.swing.plaf.ComponentUI" | "javax.swing.text.ComponentView" | "java.awt.Composite" | "java.awt.CompositeContext" | "javax.management.openmbean.CompositeData" | "javax.management.openmbean.CompositeDataInvocationHandler" | "javax.management.openmbean.CompositeDataSupport" | "javax.management.openmbean.CompositeDataView" | "jdk.dynalink.linker.support.CompositeGuardingDynamicLinker" | "javax.naming.CompositeName" | "javax.management.openmbean.CompositeType" | "jdk.dynalink.linker.support.CompositeTypeBasedGuardingDynamicLinker" | "javax.swing.text.CompositeView" | "com.sun.source.tree.CompoundAssignmentTree" | "javax.swing.border.CompoundBorder" | "javax.sound.sampled.CompoundControl" | "javax.sound.sampled.CompoundControl.Type" | "javax.swing.undo.CompoundEdit" | "javax.naming.CompoundName" | "javax.print.attribute.standard.Compression" | "java.util.concurrent.ConcurrentHashMap" | "java.util.concurrent.ConcurrentHashMap.KeySetView" | "java.util.concurrent.ConcurrentLinkedDeque" | "java.util.concurrent.ConcurrentLinkedQueue" | "java.util.concurrent.ConcurrentMap" | "java.util.ConcurrentModificationException" | "java.util.concurrent.ConcurrentNavigableMap" | "java.util.concurrent.ConcurrentSkipListMap" | "java.util.concurrent.ConcurrentSkipListSet" | "java.util.concurrent.locks.Condition" | "com.sun.source.tree.ConditionalExpressionTree" | "auth.com.sun.security.auth.login.ConfigFile" | "java.lang.module.Configuration" | "javax.security.auth.login.Configuration" | "jdk.jfr.Configuration" | "javax.security.auth.login.Configuration.Parameters" | "javax.naming.ConfigurationException" | "jfr.jdk.management.jfr.ConfigurationInfo" | "javax.security.auth.login.ConfigurationSpi" | "javax.security.auth.callback.ConfirmationCallback" | "java.net.ConnectException" | "java.rmi.ConnectException" | "java.rmi.ConnectIOException" | "com.sun.jdi.connect.spi.Connection" | "java.sql.Connection" | "java.sql.ConnectionBuilder" | "javax.sql.ConnectionEvent" | "javax.sql.ConnectionEventListener" | "java.nio.channels.ConnectionPendingException" | "javax.sql.ConnectionPoolDataSource" | "com.sun.jdi.connect.Connector" | "com.sun.jdi.connect.Connector.Argument" | "com.sun.jdi.connect.Connector.BooleanArgument" | "com.sun.jdi.connect.Connector.IntegerArgument" | "com.sun.jdi.connect.Connector.SelectedArgument" | "com.sun.jdi.connect.Connector.StringArgument" | "java.io.Console" | "java.util.logging.ConsoleHandler" | "java.lang.invoke.ConstantBootstraps" | "java.lang.invoke.ConstantCallSite" | "java.lang.reflect.Constructor" | "java.util.function.Consumer" | "java.awt.Container" | "java.awt.event.ContainerAdapter" | "java.awt.event.ContainerEvent" | "java.awt.event.ContainerListener" | "java.awt.ContainerOrderFocusTraversalPolicy" | "java.net.ContentHandler" | "org.xml.sax.ContentHandler" | "java.net.ContentHandlerFactory" | "javax.swing.text.html.parser.ContentModel" | "javax.naming.Context" | "javax.naming.ContextNotEmptyException" | "java.awt.image.renderable.ContextualRenderedImageFactory" | "com.sun.source.tree.ContinueTree" | "javax.naming.ldap.Control" | "javax.sound.sampled.Control" | "javax.sound.sampled.Control.Type" | "javax.naming.ldap.ControlFactory" | "javax.sound.midi.ControllerEventListener" | "jdk.dynalink.linker.ConversionComparator" | "jdk.dynalink.linker.ConversionComparator.Comparison" | "java.awt.image.ConvolveOp" | "java.net.CookieHandler" | "java.net.CookieManager" | "java.net.CookiePolicy" | "java.net.CookieStore" | "javax.print.attribute.standard.Copies" | "javax.print.attribute.standard.CopiesSupported" | "java.util.concurrent.CopyOnWriteArrayList" | "java.util.concurrent.CopyOnWriteArraySet" | "java.nio.file.CopyOption" | "java.util.concurrent.CountDownLatch" | "java.util.concurrent.CountedCompleter" | "dom.org.w3c.dom.css.Counter" | "javax.management.monitor.CounterMonitor" | "javax.management.monitor.CounterMonitorMBean" | "java.util.zip.CRC32" | "java.util.zip.CRC32C" | "javax.security.auth.login.CredentialException" | "javax.security.auth.login.CredentialExpiredException" | "javax.security.auth.login.CredentialNotFoundException" | "java.security.cert.CRL" | "java.security.cert.CRLException" | "java.security.cert.CRLReason" | "java.security.cert.CRLSelector" | "java.awt.image.CropImageFilter" | "java.security.CryptoPrimitive" | "javax.swing.text.html.CSS" | "javax.swing.text.html.CSS.Attribute" | "dom.org.w3c.dom.css.CSS2Properties" | "dom.org.w3c.dom.css.CSSCharsetRule" | "dom.org.w3c.dom.css.CSSFontFaceRule" | "dom.org.w3c.dom.css.CSSImportRule" | "dom.org.w3c.dom.css.CSSMediaRule" | "dom.org.w3c.dom.css.CSSPageRule" | "dom.org.w3c.dom.css.CSSPrimitiveValue" | "dom.org.w3c.dom.css.CSSRule" | "dom.org.w3c.dom.css.CSSRuleList" | "dom.org.w3c.dom.css.CSSStyleDeclaration" | "dom.org.w3c.dom.css.CSSStyleRule" | "dom.org.w3c.dom.css.CSSStyleSheet" | "dom.org.w3c.dom.css.CSSUnknownRule" | "dom.org.w3c.dom.css.CSSValue" | "dom.org.w3c.dom.css.CSSValueList" | "java.awt.geom.CubicCurve2D" | "java.awt.geom.CubicCurve2D.Double" | "java.awt.geom.CubicCurve2D.Float" | "java.util.Currency" | "java.util.spi.CurrencyNameProvider" | "java.awt.Cursor" | "java.beans.Customizer" | "java.util.concurrent.CyclicBarrier" | "crypto.javax.xml.crypto.Data" | "java.sql.DatabaseMetaData" | "java.awt.image.DataBuffer" | "java.awt.image.DataBufferByte" | "java.awt.image.DataBufferDouble" | "java.awt.image.DataBufferFloat" | "java.awt.image.DataBufferInt" | "java.awt.image.DataBufferShort" | "java.awt.image.DataBufferUShort" | "java.awt.datatransfer.DataFlavor" | "java.util.zip.DataFormatException" | "java.nio.channels.DatagramChannel" | "java.net.DatagramPacket" | "java.net.DatagramSocket" | "java.net.DatagramSocketImpl" | "java.net.DatagramSocketImplFactory" | "java.io.DataInput" | "java.io.DataInputStream" | "javax.sound.sampled.DataLine" | "javax.sound.sampled.DataLine.Info" | "java.io.DataOutput" | "java.io.DataOutputStream" | "javax.sql.DataSource" | "java.sql.DataTruncation" | "javax.xml.datatype.DatatypeConfigurationException" | "javax.xml.datatype.DatatypeConstants" | "javax.xml.datatype.DatatypeConstants.Field" | "javax.xml.datatype.DatatypeFactory" | "java.sql.Date" | "java.util.Date" | "java.text.DateFormat" | "java.text.DateFormat.Field" | "java.text.spi.DateFormatProvider" | "java.text.DateFormatSymbols" | "java.text.spi.DateFormatSymbolsProvider" | "javax.swing.text.DateFormatter" | "javax.print.attribute.standard.DateTimeAtCompleted" | "javax.print.attribute.standard.DateTimeAtCreation" | "javax.print.attribute.standard.DateTimeAtProcessing" | "java.time.DateTimeException" | "java.time.format.DateTimeFormatter" | "java.time.format.DateTimeFormatterBuilder" | "java.time.format.DateTimeParseException" | "javax.print.attribute.DateTimeSyntax" | "java.time.DayOfWeek" | "javax.swing.DebugGraphics" | "java.text.DecimalFormat" | "java.text.DecimalFormatSymbols" | "java.text.spi.DecimalFormatSymbolsProvider" | "java.time.format.DecimalStyle" | "jdk.jshell.DeclarationSnippet" | "javax.lang.model.type.DeclaredType" | "org.xml.sax.ext.DeclHandler" | "javax.swing.DefaultBoundedRangeModel" | "javax.swing.DefaultButtonModel" | "javax.swing.text.DefaultCaret" | "javax.swing.DefaultCellEditor" | "javax.swing.colorchooser.DefaultColorSelectionModel" | "javax.swing.DefaultComboBoxModel" | "javax.swing.DefaultDesktopManager" | "javax.swing.text.DefaultEditorKit" | "javax.swing.text.DefaultEditorKit.BeepAction" | "javax.swing.text.DefaultEditorKit.CopyAction" | "javax.swing.text.DefaultEditorKit.CutAction" | "javax.swing.text.DefaultEditorKit.DefaultKeyTypedAction" | "javax.swing.text.DefaultEditorKit.InsertBreakAction" | "javax.swing.text.DefaultEditorKit.InsertContentAction" | "javax.swing.text.DefaultEditorKit.InsertTabAction" | "javax.swing.text.DefaultEditorKit.PasteAction" | "javax.swing.DefaultFocusManager" | "java.awt.DefaultFocusTraversalPolicy" | "javax.swing.text.DefaultFormatter" | "javax.swing.text.DefaultFormatterFactory" | "org.xml.sax.helpers.DefaultHandler" | "org.xml.sax.ext.DefaultHandler2" | "javax.swing.text.DefaultHighlighter" | "javax.swing.text.DefaultHighlighter.DefaultHighlightPainter" | "jdk.dynalink.linker.support.DefaultInternalObjectFilter" | "java.awt.DefaultKeyboardFocusManager" | "javax.swing.DefaultListCellRenderer" | "javax.swing.DefaultListCellRenderer.UIResource" | "javax.swing.DefaultListModel" | "javax.swing.DefaultListSelectionModel" | "javax.swing.plaf.basic.DefaultMenuLayout" | "javax.swing.plaf.metal.DefaultMetalTheme" | "javax.swing.tree.DefaultMutableTreeNode" | "java.beans.DefaultPersistenceDelegate" | "javax.swing.DefaultRowSorter" | "javax.swing.DefaultRowSorter.ModelWrapper" | "javax.swing.DefaultSingleSelectionModel" | "javax.swing.text.DefaultStyledDocument" | "javax.swing.text.DefaultStyledDocument.AttributeUndoableEdit" | "javax.swing.text.DefaultStyledDocument.ElementSpec" | "javax.swing.table.DefaultTableCellRenderer" | "javax.swing.table.DefaultTableCellRenderer.UIResource" | "javax.swing.table.DefaultTableColumnModel" | "javax.swing.table.DefaultTableModel" | "javax.swing.tree.DefaultTreeCellEditor" | "javax.swing.tree.DefaultTreeCellRenderer" | "javax.swing.tree.DefaultTreeModel" | "javax.swing.tree.DefaultTreeSelectionModel" | "java.util.zip.Deflater" | "java.util.zip.DeflaterInputStream" | "java.util.zip.DeflaterOutputStream" | "java.util.concurrent.Delayed" | "java.util.concurrent.DelayQueue" | "jgss.javax.security.auth.kerberos.DelegationPermission" | "com.sun.source.doctree.DeprecatedTree" | "java.util.Deque" | "javax.management.Descriptor" | "javax.management.DescriptorAccess" | "javax.management.DescriptorRead" | "javax.management.modelmbean.DescriptorSupport" | "javax.crypto.spec.DESedeKeySpec" | "java.beans.DesignMode" | "javax.crypto.spec.DESKeySpec" | "java.awt.Desktop" | "java.awt.Desktop.Action" | "javax.swing.plaf.DesktopIconUI" | "javax.swing.DesktopManager" | "javax.swing.plaf.DesktopPaneUI" | "javax.print.attribute.standard.Destination" | "javax.security.auth.Destroyable" | "javax.security.auth.DestroyFailedException" | "java.rmi.dgc.DGC" | "javax.crypto.spec.DHGenParameterSpec" | "javax.crypto.interfaces.DHKey" | "javax.crypto.spec.DHParameterSpec" | "javax.crypto.interfaces.DHPrivateKey" | "javax.crypto.spec.DHPrivateKeySpec" | "javax.crypto.interfaces.DHPublicKey" | "javax.crypto.spec.DHPublicKeySpec" | "jdk.jshell.Diag" | "javax.tools.Diagnostic" | "javax.tools.Diagnostic.Kind" | "javax.tools.DiagnosticCollector" | "com.sun.management.DiagnosticCommandMBean" | "javax.tools.DiagnosticListener" | "java.awt.Dialog" | "java.awt.Dialog.ModalExclusionType" | "java.awt.Dialog.ModalityType" | "javax.print.attribute.standard.DialogOwner" | "javax.print.attribute.standard.DialogTypeSelection" | "java.util.Dictionary" | "java.security.DigestException" | "java.security.DigestInputStream" | "crypto.javax.xml.crypto.dsig.DigestMethod" | "crypto.javax.xml.crypto.dsig.spec.DigestMethodParameterSpec" | "java.security.DigestOutputStream" | "java.awt.Dimension" | "java.awt.geom.Dimension2D" | "javax.swing.plaf.DimensionUIResource" | "javax.naming.directory.DirContext" | "java.awt.image.DirectColorModel" | "jdk.jshell.execution.DirectExecutionControl" | "com.sun.source.tree.DirectiveTree" | "java.nio.file.DirectoryIteratorException" | "javax.naming.spi.DirectoryManager" | "java.nio.file.DirectoryNotEmptyException" | "java.nio.file.DirectoryStream" | "java.nio.file.DirectoryStream.Filter" | "javax.naming.spi.DirObjectFactory" | "javax.naming.spi.DirStateFactory" | "javax.naming.spi.DirStateFactory.Result" | "java.awt.DisplayMode" | "java.awt.dnd.DnDConstants" | "javax.print.Doc" | "javax.print.attribute.DocAttribute" | "javax.print.attribute.DocAttributeSet" | "com.sun.source.doctree.DocCommentTree" | "javax.print.DocFlavor" | "javax.print.DocFlavor.BYTE_ARRAY" | "javax.print.DocFlavor.CHAR_ARRAY" | "javax.print.DocFlavor.INPUT_STREAM" | "javax.print.DocFlavor.READER" | "javax.print.DocFlavor.SERVICE_FORMATTED" | "javax.print.DocFlavor.STRING" | "javax.print.DocFlavor.URL" | "jdk.javadoc.doclet.Doclet" | "jdk.javadoc.doclet.Doclet.Option" | "jdk.javadoc.doclet.Doclet.Option.Kind" | "jdk.javadoc.doclet.DocletEnvironment" | "jdk.javadoc.doclet.DocletEnvironment.ModuleMode" | "javax.print.DocPrintJob" | "com.sun.source.doctree.DocRootTree" | "com.sun.source.util.DocSourcePositions" | "com.sun.source.doctree.DocTree" | "com.sun.source.doctree.DocTree.Kind" | "com.sun.source.util.DocTreeFactory" | "com.sun.source.util.DocTreePath" | "com.sun.source.util.DocTreePathScanner" | "com.sun.source.util.DocTrees" | "com.sun.source.util.DocTreeScanner" | "com.sun.source.doctree.DocTreeVisitor" | "com.sun.source.doctree.DocTypeTree" | "javax.swing.text.Document" | "org.w3c.dom.Document" | "javax.tools.DocumentationTool" | "javax.tools.DocumentationTool.DocumentationTask" | "javax.tools.DocumentationTool.Location" | "javax.xml.parsers.DocumentBuilder" | "javax.xml.parsers.DocumentBuilderFactory" | "dom.org.w3c.dom.css.DocumentCSS" | "javax.swing.event.DocumentEvent" | "org.w3c.dom.events.DocumentEvent" | "javax.swing.event.DocumentEvent.ElementChange" | "javax.swing.event.DocumentEvent.EventType" | "javax.swing.text.DocumentFilter" | "javax.swing.text.DocumentFilter.FilterBypass" | "org.w3c.dom.DocumentFragment" | "javax.swing.event.DocumentListener" | "javax.print.attribute.standard.DocumentName" | "javax.swing.text.html.parser.DocumentParser" | "org.w3c.dom.ranges.DocumentRange" | "dom.org.w3c.dom.stylesheets.DocumentStyle" | "org.w3c.dom.traversal.DocumentTraversal" | "org.w3c.dom.DocumentType" | "org.w3c.dom.views.DocumentView" | "java.security.DomainCombiner" | "java.security.DomainLoadStoreParameter" | "org.w3c.dom.DOMConfiguration" | "crypto.javax.xml.crypto.dom.DOMCryptoContext" | "org.w3c.dom.DOMError" | "org.w3c.dom.DOMErrorHandler" | "org.w3c.dom.DOMException" | "org.w3c.dom.DOMImplementation" | "dom.org.w3c.dom.css.DOMImplementationCSS" | "org.w3c.dom.DOMImplementationList" | "org.w3c.dom.ls.DOMImplementationLS" | "org.w3c.dom.bootstrap.DOMImplementationRegistry" | "org.w3c.dom.DOMImplementationSource" | "javax.xml.transform.dom.DOMLocator" | "org.w3c.dom.DOMLocator" | "javax.xml.transform.dom.DOMResult" | "crypto.javax.xml.crypto.dsig.dom.DOMSignContext" | "javax.xml.transform.dom.DOMSource" | "org.w3c.dom.DOMStringList" | "crypto.javax.xml.crypto.dom.DOMStructure" | "crypto.javax.xml.crypto.dom.DOMURIReference" | "crypto.javax.xml.crypto.dsig.dom.DOMValidateContext" | "java.nio.file.attribute.DosFileAttributes" | "java.nio.file.attribute.DosFileAttributeView" | "java.lang.Double" | "java.util.concurrent.atomic.DoubleAccumulator" | "java.util.concurrent.atomic.DoubleAdder" | "java.util.function.DoubleBinaryOperator" | "java.nio.DoubleBuffer" | "java.util.function.DoubleConsumer" | "java.util.function.DoubleFunction" | "java.util.function.DoublePredicate" | "java.util.stream.DoubleStream" | "java.util.stream.DoubleStream.Builder" | "java.util.DoubleSummaryStatistics" | "java.util.function.DoubleSupplier" | "java.util.function.DoubleToIntFunction" | "java.util.function.DoubleToLongFunction" | "com.sun.jdi.DoubleType" | "java.util.function.DoubleUnaryOperator" | "com.sun.jdi.DoubleValue" | "com.sun.source.tree.DoWhileLoopTree" | "java.awt.dnd.DragGestureEvent" | "java.awt.dnd.DragGestureListener" | "java.awt.dnd.DragGestureRecognizer" | "java.awt.dnd.DragSource" | "java.awt.dnd.DragSourceAdapter" | "java.awt.dnd.DragSourceContext" | "java.awt.dnd.DragSourceDragEvent" | "java.awt.dnd.DragSourceDropEvent" | "java.awt.dnd.DragSourceEvent" | "java.awt.dnd.DragSourceListener" | "java.awt.dnd.DragSourceMotionListener" | "java.security.DrbgParameters" | "java.security.DrbgParameters.Capability" | "java.security.DrbgParameters.Instantiation" | "java.security.DrbgParameters.NextBytes" | "java.security.DrbgParameters.Reseed" | "java.sql.Driver" | "java.sql.DriverAction" | "java.sql.DriverManager" | "java.sql.DriverPropertyInfo" | "javax.swing.DropMode" | "java.awt.dnd.DropTarget" | "java.awt.dnd.DropTarget.DropTargetAutoScroller" | "java.awt.dnd.DropTargetAdapter" | "java.awt.dnd.DropTargetContext" | "java.awt.dnd.DropTargetDragEvent" | "java.awt.dnd.DropTargetDropEvent" | "java.awt.dnd.DropTargetEvent" | "java.awt.dnd.DropTargetListener" | "java.security.spec.DSAGenParameterSpec" | "java.security.interfaces.DSAKey" | "java.security.interfaces.DSAKeyPairGenerator" | "java.security.spec.DSAParameterSpec" | "java.security.interfaces.DSAParams" | "java.security.interfaces.DSAPrivateKey" | "java.security.spec.DSAPrivateKeySpec" | "java.security.interfaces.DSAPublicKey" | "java.security.spec.DSAPublicKeySpec" | "javax.swing.text.html.parser.DTD" | "javax.xml.stream.events.DTD" | "javax.swing.text.html.parser.DTDConstants" | "org.xml.sax.DTDHandler" | "java.util.DuplicateFormatFlagsException" | "com.sun.jdi.request.DuplicateRequestException" | "java.time.Duration" | "javax.xml.datatype.Duration" | "jdk.dynalink.DynamicLinker" | "jdk.dynalink.DynamicLinkerFactory" | "javax.management.DynamicMBean" | "java.security.spec.ECField" | "java.security.spec.ECFieldF2m" | "java.security.spec.ECFieldFp" | "java.security.spec.ECGenParameterSpec" | "java.security.interfaces.ECKey" | "java.security.spec.ECParameterSpec" | "java.security.spec.ECPoint" | "java.security.interfaces.ECPrivateKey" | "java.security.spec.ECPrivateKeySpec" | "java.security.interfaces.ECPublicKey" | "java.security.spec.ECPublicKeySpec" | "javax.swing.text.EditorKit" | "javax.lang.model.element.Element" | "javax.swing.text.Element" | "javax.swing.text.html.parser.Element" | "org.w3c.dom.Element" | "dom.org.w3c.dom.css.ElementCSSInlineStyle" | "javax.lang.model.util.ElementFilter" | "javax.swing.text.ElementIterator" | "javax.lang.model.element.ElementKind" | "javax.lang.model.util.ElementKindVisitor6" | "javax.lang.model.util.ElementKindVisitor7" | "javax.lang.model.util.ElementKindVisitor8" | "javax.lang.model.util.ElementKindVisitor9" | "javax.lang.model.util.Elements" | "javax.lang.model.util.Elements.Origin" | "javax.lang.model.util.ElementScanner6" | "javax.lang.model.util.ElementScanner7" | "javax.lang.model.util.ElementScanner8" | "javax.lang.model.util.ElementScanner9" | "org.w3c.dom.ElementTraversal" | "java.lang.annotation.ElementType" | "javax.lang.model.element.ElementVisitor" | "java.awt.geom.Ellipse2D" | "java.awt.geom.Ellipse2D.Double" | "java.awt.geom.Ellipse2D.Float" | "java.security.spec.EllipticCurve" | "javax.swing.border.EmptyBorder" | "java.util.EmptyStackException" | "com.sun.source.tree.EmptyStatementTree" | "java.security.spec.EncodedKeySpec" | "java.beans.Encoder" | "javax.crypto.EncryptedPrivateKeyInfo" | "jgss.javax.security.auth.kerberos.EncryptionKey" | "javax.xml.stream.events.EndDocument" | "javax.xml.stream.events.EndElement" | "com.sun.source.doctree.EndElementTree" | "com.sun.source.tree.EnhancedForLoopTree" | "javax.swing.text.html.parser.Entity" | "org.w3c.dom.Entity" | "javax.xml.stream.events.EntityDeclaration" | "javax.xml.stream.events.EntityReference" | "org.w3c.dom.EntityReference" | "org.xml.sax.EntityResolver" | "org.xml.sax.ext.EntityResolver2" | "com.sun.source.doctree.EntityTree" | "java.lang.Enum" | "java.lang.EnumConstantNotPresentException" | "javax.sound.sampled.EnumControl" | "javax.sound.sampled.EnumControl.Type" | "java.util.Enumeration" | "java.util.EnumMap" | "java.util.EnumSet" | "javax.print.attribute.EnumSyntax" | "java.io.EOFException" | "java.time.chrono.Era" | "jdk.jshell.ErroneousSnippet" | "com.sun.source.doctree.ErroneousTree" | "com.sun.source.tree.ErroneousTree" | "java.lang.Error" | "org.xml.sax.ErrorHandler" | "javax.xml.transform.ErrorListener" | "java.util.logging.ErrorManager" | "javax.lang.model.type.ErrorType" | "javax.swing.border.EtchedBorder" | "jdk.jshell.EvalException" | "com.sun.jdi.event.Event" | "jdk.jfr.Event" | "org.w3c.dom.events.Event" | "javax.naming.event.EventContext" | "javax.naming.event.EventDirContext" | "org.w3c.dom.events.EventException" | "jdk.jfr.EventFactory" | "javax.xml.stream.EventFilter" | "java.beans.EventHandler" | "com.sun.java.accessibility.util.EventID" | "com.sun.jdi.event.EventIterator" | "java.util.EventListener" | "org.w3c.dom.events.EventListener" | "javax.swing.event.EventListenerList" | "java.util.EventListenerProxy" | "java.util.EventObject" | "com.sun.jdi.event.EventQueue" | "java.awt.EventQueue" | "com.sun.java.accessibility.util.EventQueueMonitor" | "javax.xml.stream.util.EventReaderDelegate" | "com.sun.jdi.request.EventRequest" | "com.sun.jdi.request.EventRequestManager" | "com.sun.jdi.event.EventSet" | "java.beans.EventSetDescriptor" | "jdk.jfr.EventSettings" | "org.w3c.dom.events.EventTarget" | "jdk.jfr.EventType" | "jfr.jdk.management.jfr.EventTypeInfo" | "crypto.javax.xml.crypto.dsig.spec.ExcC14NParameterSpec" | "java.lang.Exception" | "com.sun.jdi.event.ExceptionEvent" | "java.lang.ExceptionInInitializerError" | "java.beans.ExceptionListener" | "com.sun.jdi.request.ExceptionRequest" | "java.util.concurrent.Exchanger" | "java.lang.reflect.Executable" | "javax.lang.model.element.ExecutableElement" | "javax.lang.model.type.ExecutableType" | "jdk.jshell.spi.ExecutionControl" | "jdk.jshell.spi.ExecutionControl.ClassBytecodes" | "jdk.jshell.spi.ExecutionControl.ClassInstallException" | "jdk.jshell.spi.ExecutionControl.EngineTerminationException" | "jdk.jshell.spi.ExecutionControl.ExecutionControlException" | "jdk.jshell.spi.ExecutionControl.InternalException" | "jdk.jshell.spi.ExecutionControl.NotImplementedException" | "jdk.jshell.spi.ExecutionControl.ResolutionException" | "jdk.jshell.spi.ExecutionControl.RunException" | "jdk.jshell.spi.ExecutionControl.StoppedException" | "jdk.jshell.spi.ExecutionControl.UserException" | "jdk.jshell.spi.ExecutionControlProvider" | "jdk.jshell.spi.ExecutionEnv" | "java.util.concurrent.ExecutionException" | "java.util.concurrent.Executor" | "java.util.concurrent.ExecutorCompletionService" | "java.util.concurrent.Executors" | "java.util.concurrent.ExecutorService" | "javax.crypto.ExemptionMechanism" | "javax.crypto.ExemptionMechanismException" | "javax.crypto.ExemptionMechanismSpi" | "javax.imageio.plugins.tiff.ExifGPSTagSet" | "javax.imageio.plugins.tiff.ExifInteroperabilityTagSet" | "javax.imageio.plugins.tiff.ExifParentTIFFTagSet" | "javax.imageio.plugins.tiff.ExifTIFFTagSet" | "javax.swing.tree.ExpandVetoException" | "java.rmi.server.ExportException" | "com.sun.source.tree.ExportsTree" | "java.beans.Expression" | "jdk.jshell.ExpressionSnippet" | "com.sun.source.tree.ExpressionStatementTree" | "com.sun.source.tree.ExpressionTree" | "jgss.com.sun.security.jgss.ExtendedGSSContext" | "jgss.com.sun.security.jgss.ExtendedGSSCredential" | "javax.naming.ldap.ExtendedRequest" | "javax.naming.ldap.ExtendedResponse" | "jdk.net.ExtendedSocketOptions" | "javax.net.ssl.ExtendedSSLSession" | "java.security.cert.Extension" | "java.io.Externalizable" | "javax.xml.parsers.FactoryConfigurationError" | "javax.xml.stream.FactoryConfigurationError" | "javax.security.auth.login.FailedLoginException" | "jdk.jshell.execution.FailOverExecutionControlProvider" | "javax.imageio.plugins.tiff.FaxTIFFTagSet" | "java.beans.FeatureDescriptor" | "javax.print.attribute.standard.Fidelity" | "com.sun.jdi.Field" | "java.lang.reflect.Field" | "java.text.FieldPosition" | "javax.swing.text.FieldView" | "java.io.File" | "java.nio.file.FileAlreadyExistsException" | "java.nio.file.attribute.FileAttribute" | "java.nio.file.attribute.FileAttributeView" | "javax.imageio.stream.FileCacheImageInputStream" | "javax.imageio.stream.FileCacheImageOutputStream" | "java.nio.channels.FileChannel" | "java.nio.channels.FileChannel.MapMode" | "javax.swing.plaf.FileChooserUI" | "java.io.FileDescriptor" | "java.awt.FileDialog" | "java.io.FileFilter" | "javax.swing.filechooser.FileFilter" | "java.util.logging.FileHandler" | "javax.imageio.stream.FileImageInputStream" | "javax.imageio.stream.FileImageOutputStream" | "java.io.FileInputStream" | "java.nio.channels.FileLock" | "java.nio.channels.FileLockInterruptionException" | "javax.swing.filechooser.FileNameExtensionFilter" | "java.io.FilenameFilter" | "java.net.FileNameMap" | "java.io.FileNotFoundException" | "javax.tools.FileObject" | "java.io.FileOutputStream" | "java.nio.file.attribute.FileOwnerAttributeView" | "java.io.FilePermission" | "javax.annotation.processing.Filer" | "java.io.FileReader" | "javax.annotation.processing.FilerException" | "java.nio.file.Files" | "java.awt.desktop.FilesEvent" | "java.nio.file.FileStore" | "java.nio.file.attribute.FileStoreAttributeView" | "java.nio.file.FileSystem" | "java.nio.file.FileSystemAlreadyExistsException" | "java.nio.file.FileSystemException" | "java.nio.file.FileSystemLoopException" | "java.nio.file.FileSystemNotFoundException" | "java.nio.file.spi.FileSystemProvider" | "java.nio.file.FileSystems" | "javax.swing.filechooser.FileSystemView" | "java.nio.file.attribute.FileTime" | "java.nio.file.spi.FileTypeDetector" | "javax.swing.filechooser.FileView" | "java.nio.file.FileVisitOption" | "java.nio.file.FileVisitor" | "java.nio.file.FileVisitResult" | "java.io.FileWriter" | "com.sun.net.httpserver.Filter" | "java.util.logging.Filter" | "com.sun.net.httpserver.Filter.Chain" | "java.awt.image.FilteredImageSource" | "rowset.javax.sql.rowset.FilteredRowSet" | "java.io.FilterInputStream" | "java.io.FilterOutputStream" | "java.io.FilterReader" | "java.io.FilterWriter" | "java.lang.module.FindException" | "javax.print.attribute.standard.Finishings" | "javax.swing.tree.FixedHeightLayoutCache" | "java.awt.geom.FlatteningPathIterator" | "java.awt.datatransfer.FlavorEvent" | "javax.print.FlavorException" | "java.awt.datatransfer.FlavorListener" | "java.awt.datatransfer.FlavorMap" | "java.awt.datatransfer.FlavorTable" | "jdk.jfr.FlightRecorder" | "jdk.jfr.FlightRecorderListener" | "jfr.jdk.management.jfr.FlightRecorderMXBean" | "jdk.jfr.FlightRecorderPermission" | "java.lang.Float" | "java.nio.FloatBuffer" | "javax.sound.sampled.FloatControl" | "javax.sound.sampled.FloatControl.Type" | "com.sun.jdi.FloatType" | "com.sun.jdi.FloatValue" | "java.util.concurrent.Flow" | "java.util.concurrent.Flow.Processor" | "java.util.concurrent.Flow.Publisher" | "java.util.concurrent.Flow.Subscriber" | "java.util.concurrent.Flow.Subscription" | "java.awt.FlowLayout" | "javax.swing.text.FlowView" | "javax.swing.text.FlowView.FlowStrategy" | "java.io.Flushable" | "java.awt.event.FocusAdapter" | "java.awt.event.FocusEvent" | "java.awt.event.FocusEvent.Cause" | "java.awt.event.FocusListener" | "javax.swing.FocusManager" | "java.awt.FocusTraversalPolicy" | "java.awt.Font" | "java.awt.FontFormatException" | "java.awt.FontMetrics" | "java.awt.font.FontRenderContext" | "javax.swing.plaf.FontUIResource" | "java.util.concurrent.ForkJoinPool" | "java.util.concurrent.ForkJoinPool.ForkJoinWorkerThreadFactory" | "java.util.concurrent.ForkJoinPool.ManagedBlocker" | "java.util.concurrent.ForkJoinTask" | "java.util.concurrent.ForkJoinWorkerThread" | "com.sun.source.tree.ForLoopTree" | "java.text.Format" | "java.text.Format.Field" | "javax.sound.sampled.spi.FormatConversionProvider" | "java.util.FormatFlagsConversionMismatchException" | "java.time.format.FormatStyle" | "java.util.Formattable" | "java.util.FormattableFlags" | "java.util.Formatter" | "java.util.logging.Formatter" | "java.util.Formatter.BigDecimalLayoutForm" | "java.util.FormatterClosedException" | "javax.swing.text.html.FormSubmitEvent" | "javax.swing.text.html.FormSubmitEvent.MethodType" | "javax.swing.text.html.FormView" | "javax.tools.ForwardingFileObject" | "javax.tools.ForwardingJavaFileManager" | "javax.tools.ForwardingJavaFileObject" | "java.awt.Frame" | "java.util.function.Function" | "java.util.concurrent.Future" | "java.util.concurrent.FutureTask" | "javax.swing.text.GapContent" | "com.sun.management.GarbageCollectionNotificationInfo" | "com.sun.management.GarbageCollectorMXBean" | "java.lang.management.GarbageCollectorMXBean" | "java.nio.channels.GatheringByteChannel" | "javax.management.monitor.GaugeMonitor" | "javax.management.monitor.GaugeMonitorMBean" | "com.sun.management.GcInfo" | "javax.crypto.spec.GCMParameterSpec" | "java.awt.geom.GeneralPath" | "java.security.GeneralSecurityException" | "java.lang.reflect.GenericArrayType" | "java.lang.reflect.GenericDeclaration" | "java.lang.reflect.GenericSignatureFormatError" | "javax.imageio.plugins.tiff.GeoTIFFTagSet" | "java.awt.font.GlyphJustificationInfo" | "java.awt.font.GlyphMetrics" | "java.awt.font.GlyphVector" | "javax.swing.text.GlyphView" | "javax.swing.text.GlyphView.GlyphPainter" | "java.awt.GradientPaint" | "java.awt.font.GraphicAttribute" | "java.awt.Graphics" | "java.awt.Graphics2D" | "java.awt.GraphicsConfigTemplate" | "java.awt.GraphicsConfiguration" | "java.awt.GraphicsDevice" | "java.awt.GraphicsDevice.WindowTranslucency" | "java.awt.GraphicsEnvironment" | "javax.swing.GrayFilter" | "java.util.GregorianCalendar" | "java.awt.GridBagConstraints" | "java.awt.GridBagLayout" | "java.awt.GridBagLayoutInfo" | "java.awt.GridLayout" | "javax.swing.GroupLayout" | "javax.swing.GroupLayout.Alignment" | "java.nio.file.attribute.GroupPrincipal" | "jgss.org.ietf.jgss.GSSContext" | "jgss.org.ietf.jgss.GSSCredential" | "jgss.org.ietf.jgss.GSSException" | "jgss.org.ietf.jgss.GSSManager" | "jgss.org.ietf.jgss.GSSName" | "jgss.com.sun.security.jgss.GSSUtil" | "java.security.Guard" | "jdk.dynalink.linker.GuardedInvocation" | "jdk.dynalink.linker.GuardedInvocationTransformer" | "java.security.GuardedObject" | "jdk.dynalink.linker.GuardingDynamicLinker" | "jdk.dynalink.linker.GuardingDynamicLinkerExporter" | "jdk.dynalink.linker.GuardingTypeConverterFactory" | "jdk.dynalink.linker.support.Guards" | "com.sun.java.accessibility.util.GUIInitializedListener" | "java.util.zip.GZIPInputStream" | "java.util.zip.GZIPOutputStream" | "java.util.logging.Handler" | "com.sun.nio.sctp.HandlerResult" | "javax.net.ssl.HandshakeCompletedEvent" | "javax.net.ssl.HandshakeCompletedListener" | "javax.naming.ldap.HasControls" | "javax.print.attribute.HashAttributeSet" | "javax.print.attribute.HashDocAttributeSet" | "java.util.HashMap" | "javax.print.attribute.HashPrintJobAttributeSet" | "javax.print.attribute.HashPrintRequestAttributeSet" | "javax.print.attribute.HashPrintServiceAttributeSet" | "java.util.HashSet" | "java.util.Hashtable" | "com.sun.net.httpserver.Headers" | "java.awt.HeadlessException" | "com.sun.source.doctree.HiddenTree" | "java.awt.event.HierarchyBoundsAdapter" | "java.awt.event.HierarchyBoundsListener" | "java.awt.event.HierarchyEvent" | "java.awt.event.HierarchyListener" | "javax.swing.text.Highlighter" | "javax.swing.text.Highlighter.Highlight" | "javax.swing.text.Highlighter.HighlightPainter" | "java.time.chrono.HijrahChronology" | "java.time.chrono.HijrahDate" | "java.time.chrono.HijrahEra" | "crypto.javax.xml.crypto.dsig.spec.HMACParameterSpec" | "javax.net.ssl.HostnameVerifier" | "com.sun.management.HotSpotDiagnosticMXBean" | "javax.swing.text.html.HTML" | "javax.swing.text.html.HTML.Attribute" | "javax.swing.text.html.HTML.Tag" | "javax.swing.text.html.HTML.UnknownTag" | "dom.org.w3c.dom.html.HTMLAnchorElement" | "dom.org.w3c.dom.html.HTMLAppletElement" | "dom.org.w3c.dom.html.HTMLAreaElement" | "dom.org.w3c.dom.html.HTMLBaseElement" | "dom.org.w3c.dom.html.HTMLBaseFontElement" | "dom.org.w3c.dom.html.HTMLBodyElement" | "dom.org.w3c.dom.html.HTMLBRElement" | "dom.org.w3c.dom.html.HTMLButtonElement" | "dom.org.w3c.dom.html.HTMLCollection" | "dom.org.w3c.dom.html.HTMLDirectoryElement" | "dom.org.w3c.dom.html.HTMLDivElement" | "dom.org.w3c.dom.html.HTMLDListElement" | "javax.swing.text.html.HTMLDocument" | "dom.org.w3c.dom.html.HTMLDocument" | "javax.swing.text.html.HTMLDocument.Iterator" | "dom.org.w3c.dom.html.HTMLDOMImplementation" | "javax.swing.text.html.HTMLEditorKit" | "javax.swing.text.html.HTMLEditorKit.HTMLFactory" | "javax.swing.text.html.HTMLEditorKit.HTMLTextAction" | "javax.swing.text.html.HTMLEditorKit.InsertHTMLTextAction" | "javax.swing.text.html.HTMLEditorKit.LinkController" | "javax.swing.text.html.HTMLEditorKit.Parser" | "javax.swing.text.html.HTMLEditorKit.ParserCallback" | "dom.org.w3c.dom.html.HTMLElement" | "dom.org.w3c.dom.html.HTMLFieldSetElement" | "dom.org.w3c.dom.html.HTMLFontElement" | "dom.org.w3c.dom.html.HTMLFormElement" | "dom.org.w3c.dom.html.HTMLFrameElement" | "javax.swing.text.html.HTMLFrameHyperlinkEvent" | "dom.org.w3c.dom.html.HTMLFrameSetElement" | "dom.org.w3c.dom.html.HTMLHeadElement" | "dom.org.w3c.dom.html.HTMLHeadingElement" | "dom.org.w3c.dom.html.HTMLHRElement" | "dom.org.w3c.dom.html.HTMLHtmlElement" | "dom.org.w3c.dom.html.HTMLIFrameElement" | "dom.org.w3c.dom.html.HTMLImageElement" | "dom.org.w3c.dom.html.HTMLInputElement" | "dom.org.w3c.dom.html.HTMLIsIndexElement" | "dom.org.w3c.dom.html.HTMLLabelElement" | "dom.org.w3c.dom.html.HTMLLegendElement" | "dom.org.w3c.dom.html.HTMLLIElement" | "dom.org.w3c.dom.html.HTMLLinkElement" | "dom.org.w3c.dom.html.HTMLMapElement" | "dom.org.w3c.dom.html.HTMLMenuElement" | "dom.org.w3c.dom.html.HTMLMetaElement" | "dom.org.w3c.dom.html.HTMLModElement" | "dom.org.w3c.dom.html.HTMLObjectElement" | "dom.org.w3c.dom.html.HTMLOListElement" | "dom.org.w3c.dom.html.HTMLOptGroupElement" | "dom.org.w3c.dom.html.HTMLOptionElement" | "dom.org.w3c.dom.html.HTMLParagraphElement" | "dom.org.w3c.dom.html.HTMLParamElement" | "dom.org.w3c.dom.html.HTMLPreElement" | "dom.org.w3c.dom.html.HTMLQuoteElement" | "dom.org.w3c.dom.html.HTMLScriptElement" | "dom.org.w3c.dom.html.HTMLSelectElement" | "dom.org.w3c.dom.html.HTMLStyleElement" | "dom.org.w3c.dom.html.HTMLTableCaptionElement" | "dom.org.w3c.dom.html.HTMLTableCellElement" | "dom.org.w3c.dom.html.HTMLTableColElement" | "dom.org.w3c.dom.html.HTMLTableElement" | "dom.org.w3c.dom.html.HTMLTableRowElement" | "dom.org.w3c.dom.html.HTMLTableSectionElement" | "dom.org.w3c.dom.html.HTMLTextAreaElement" | "dom.org.w3c.dom.html.HTMLTitleElement" | "dom.org.w3c.dom.html.HTMLUListElement" | "javax.swing.text.html.HTMLWriter" | "http.java.net.http.HttpClient" | "http.java.net.http.HttpClient.Builder" | "http.java.net.http.HttpClient.Redirect" | "http.java.net.http.HttpClient.Version" | "http.java.net.http.HttpConnectTimeoutException" | "com.sun.net.httpserver.HttpContext" | "java.net.HttpCookie" | "com.sun.net.httpserver.HttpExchange" | "com.sun.net.httpserver.HttpHandler" | "http.java.net.http.HttpHeaders" | "com.sun.net.httpserver.HttpPrincipal" | "http.java.net.http.HttpRequest" | "http.java.net.http.HttpRequest.BodyPublisher" | "http.java.net.http.HttpRequest.BodyPublishers" | "http.java.net.http.HttpRequest.Builder" | "http.java.net.http.HttpResponse" | "http.java.net.http.HttpResponse.BodyHandler" | "http.java.net.http.HttpResponse.BodyHandlers" | "http.java.net.http.HttpResponse.BodySubscriber" | "http.java.net.http.HttpResponse.BodySubscribers" | "http.java.net.http.HttpResponse.PushPromiseHandler" | "http.java.net.http.HttpResponse.ResponseInfo" | "java.net.HttpRetryException" | "com.sun.net.httpserver.HttpsConfigurator" | "com.sun.net.httpserver.HttpServer" | "com.sun.net.httpserver.spi.HttpServerProvider" | "com.sun.net.httpserver.HttpsExchange" | "com.sun.net.httpserver.HttpsParameters" | "com.sun.net.httpserver.HttpsServer" | "javax.net.ssl.HttpsURLConnection" | "http.java.net.http.HttpTimeoutException" | "java.net.HttpURLConnection" | "javax.swing.event.HyperlinkEvent" | "javax.swing.event.HyperlinkEvent.EventType" | "javax.swing.event.HyperlinkListener" | "java.awt.color.ICC_ColorSpace" | "java.awt.color.ICC_Profile" | "java.awt.color.ICC_ProfileGray" | "java.awt.color.ICC_ProfileRGB" | "javax.swing.Icon" | "javax.swing.plaf.IconUIResource" | "javax.swing.text.IconView" | "com.sun.source.doctree.IdentifierTree" | "com.sun.source.tree.IdentifierTree" | "java.util.IdentityHashMap" | "java.net.IDN" | "com.sun.source.tree.IfTree" | "javax.imageio.stream.IIOByteBuffer" | "javax.imageio.IIOException" | "javax.imageio.IIOImage" | "javax.imageio.metadata.IIOInvalidTreeException" | "javax.imageio.metadata.IIOMetadata" | "javax.imageio.metadata.IIOMetadataController" | "javax.imageio.metadata.IIOMetadataFormat" | "javax.imageio.metadata.IIOMetadataFormatImpl" | "javax.imageio.metadata.IIOMetadataNode" | "javax.imageio.IIOParam" | "javax.imageio.IIOParamController" | "javax.imageio.event.IIOReadProgressListener" | "javax.imageio.event.IIOReadUpdateListener" | "javax.imageio.event.IIOReadWarningListener" | "javax.imageio.spi.IIORegistry" | "javax.imageio.spi.IIOServiceProvider" | "javax.imageio.event.IIOWriteProgressListener" | "javax.imageio.event.IIOWriteWarningListener" | "java.lang.IllegalAccessError" | "java.lang.IllegalAccessException" | "java.lang.IllegalArgumentException" | "java.nio.channels.IllegalBlockingModeException" | "javax.crypto.IllegalBlockSizeException" | "java.lang.IllegalCallerException" | "java.nio.channels.IllegalChannelGroupException" | "java.nio.charset.IllegalCharsetNameException" | "java.lang.instrument.IllegalClassFormatException" | "java.awt.IllegalComponentStateException" | "com.sun.jdi.connect.IllegalConnectorArgumentsException" | "java.util.IllegalFormatCodePointException" | "java.util.IllegalFormatConversionException" | "java.util.IllegalFormatException" | "java.util.IllegalFormatFlagsException" | "java.util.IllegalFormatPrecisionException" | "java.util.IllegalFormatWidthException" | "java.lang.IllegalMonitorStateException" | "java.awt.geom.IllegalPathStateException" | "com.sun.nio.sctp.IllegalReceiveException" | "java.nio.channels.IllegalSelectorException" | "java.lang.IllegalStateException" | "java.lang.IllegalThreadStateException" | "com.sun.nio.sctp.IllegalUnbindException" | "java.util.IllformedLocaleException" | "java.awt.Image" | "java.awt.ImageCapabilities" | "java.awt.image.ImageConsumer" | "java.awt.image.ImageFilter" | "java.awt.font.ImageGraphicAttribute" | "javax.swing.ImageIcon" | "javax.imageio.stream.ImageInputStream" | "javax.imageio.stream.ImageInputStreamImpl" | "javax.imageio.spi.ImageInputStreamSpi" | "javax.imageio.ImageIO" | "java.awt.image.ImageObserver" | "javax.imageio.stream.ImageOutputStream" | "javax.imageio.stream.ImageOutputStreamImpl" | "javax.imageio.spi.ImageOutputStreamSpi" | "java.awt.image.ImageProducer" | "javax.imageio.ImageReader" | "javax.imageio.spi.ImageReaderSpi" | "javax.imageio.spi.ImageReaderWriterSpi" | "javax.imageio.ImageReadParam" | "javax.imageio.ImageTranscoder" | "javax.imageio.spi.ImageTranscoderSpi" | "javax.imageio.ImageTypeSpecifier" | "javax.swing.text.html.ImageView" | "javax.imageio.ImageWriteParam" | "javax.imageio.ImageWriter" | "javax.imageio.spi.ImageWriterSpi" | "java.awt.image.ImagingOpException" | "javax.management.ImmutableDescriptor" | "jdk.jshell.ImportSnippet" | "com.sun.source.tree.ImportTree" | "java.lang.reflect.InaccessibleObjectException" | "java.lang.IncompatibleClassChangeError" | "com.sun.jdi.IncompatibleThreadStateException" | "java.lang.annotation.IncompleteAnnotationException" | "com.sun.jdi.InconsistentDebugInfoException" | "java.awt.image.IndexColorModel" | "java.beans.IndexedPropertyChangeEvent" | "java.beans.IndexedPropertyDescriptor" | "java.lang.IndexOutOfBoundsException" | "com.sun.source.doctree.IndexTree" | "java.net.Inet4Address" | "java.net.Inet6Address" | "java.net.InetAddress" | "java.net.InetSocketAddress" | "java.util.zip.Inflater" | "java.util.zip.InflaterInputStream" | "java.util.zip.InflaterOutputStream" | "java.lang.InheritableThreadLocal" | "com.sun.source.doctree.InheritDocTree" | "javax.naming.InitialContext" | "javax.naming.spi.InitialContextFactory" | "javax.naming.spi.InitialContextFactoryBuilder" | "javax.naming.directory.InitialDirContext" | "javax.naming.ldap.InitialLdapContext" | "com.sun.source.doctree.InlineTagTree" | "javax.swing.text.html.InlineView" | "java.awt.im.InputContext" | "java.awt.event.InputEvent" | "javax.swing.InputMap" | "javax.swing.plaf.InputMapUIResource" | "java.awt.im.spi.InputMethod" | "java.awt.im.spi.InputMethodContext" | "java.awt.im.spi.InputMethodDescriptor" | "java.awt.event.InputMethodEvent" | "java.awt.im.InputMethodHighlight" | "java.awt.event.InputMethodListener" | "java.awt.im.InputMethodRequests" | "java.util.InputMismatchException" | "org.xml.sax.InputSource" | "java.io.InputStream" | "java.io.InputStreamReader" | "java.awt.im.InputSubset" | "javax.swing.InputVerifier" | "jgss.com.sun.security.jgss.InquireSecContextPermission" | "jgss.com.sun.security.jgss.InquireType" | "java.awt.Insets" | "javax.swing.plaf.InsetsUIResource" | "javax.management.InstanceAlreadyExistsException" | "javax.management.InstanceNotFoundException" | "com.sun.source.tree.InstanceOfTree" | "java.time.Instant" | "java.lang.InstantiationError" | "java.lang.InstantiationException" | "javax.sound.midi.Instrument" | "java.lang.instrument.Instrumentation" | "javax.naming.InsufficientResourcesException" | "java.util.function.IntBinaryOperator" | "java.nio.IntBuffer" | "java.util.function.IntConsumer" | "java.lang.Integer" | "javax.print.attribute.IntegerSyntax" | "com.sun.jdi.IntegerType" | "com.sun.jdi.IntegerValue" | "java.net.InterfaceAddress" | "com.sun.jdi.InterfaceType" | "java.lang.InternalError" | "com.sun.jdi.InternalException" | "javax.swing.event.InternalFrameAdapter" | "javax.swing.event.InternalFrameEvent" | "javax.swing.InternalFrameFocusTraversalPolicy" | "javax.swing.event.InternalFrameListener" | "javax.swing.plaf.InternalFrameUI" | "javax.swing.text.InternationalFormatter" | "java.nio.channels.InterruptedByTimeoutException" | "java.lang.InterruptedException" | "java.io.InterruptedIOException" | "javax.naming.InterruptedNamingException" | "java.nio.channels.InterruptibleChannel" | "javax.lang.model.type.IntersectionType" | "com.sun.source.tree.IntersectionTypeTree" | "java.util.function.IntFunction" | "java.util.function.IntPredicate" | "java.beans.IntrospectionException" | "javax.management.IntrospectionException" | "java.beans.Introspector" | "java.util.stream.IntStream" | "java.util.stream.IntStream.Builder" | "java.util.IntSummaryStatistics" | "java.util.function.IntSupplier" | "java.util.function.IntToDoubleFunction" | "java.util.function.IntToLongFunction" | "java.util.function.IntUnaryOperator" | "java.security.InvalidAlgorithmParameterException" | "javax.management.InvalidApplicationException" | "javax.naming.directory.InvalidAttributeIdentifierException" | "javax.naming.directory.InvalidAttributesException" | "javax.management.InvalidAttributeValueException" | "javax.naming.directory.InvalidAttributeValueException" | "java.io.InvalidClassException" | "java.awt.dnd.InvalidDnDOperationException" | "java.security.InvalidKeyException" | "javax.management.openmbean.InvalidKeyException" | "java.security.spec.InvalidKeySpecException" | "java.nio.InvalidMarkException" | "javax.sound.midi.InvalidMidiDataException" | "java.lang.module.InvalidModuleDescriptorException" | "com.sun.jdi.InvalidModuleException" | "javax.naming.InvalidNameException" | "java.io.InvalidObjectException" | "javax.management.openmbean.InvalidOpenTypeException" | "java.security.InvalidParameterException" | "java.security.spec.InvalidParameterSpecException" | "java.nio.file.InvalidPathException" | "java.util.prefs.InvalidPreferencesFormatException" | "java.util.InvalidPropertiesFormatException" | "javax.management.relation.InvalidRelationIdException" | "javax.management.relation.InvalidRelationServiceException" | "javax.management.relation.InvalidRelationTypeException" | "com.sun.jdi.request.InvalidRequestStateException" | "javax.management.relation.InvalidRoleInfoException" | "javax.management.relation.InvalidRoleValueException" | "javax.naming.directory.InvalidSearchControlsException" | "javax.naming.directory.InvalidSearchFilterException" | "com.sun.jdi.InvalidStackFrameException" | "com.sun.nio.sctp.InvalidStreamException" | "javax.management.modelmbean.InvalidTargetObjectTypeException" | "com.sun.jdi.InvalidTypeException" | "javax.script.Invocable" | "java.awt.event.InvocationEvent" | "com.sun.jdi.InvocationException" | "java.lang.reflect.InvocationHandler" | "java.lang.reflect.InvocationTargetException" | "java.io.IOError" | "java.io.IOException" | "java.time.chrono.IsoChronology" | "java.time.chrono.IsoEra" | "java.time.temporal.IsoFields" | "java.awt.event.ItemEvent" | "java.awt.event.ItemListener" | "java.awt.ItemSelectable" | "java.lang.Iterable" | "java.util.Iterator" | "javax.crypto.spec.IvParameterSpec" | "java.time.chrono.JapaneseChronology" | "java.time.chrono.JapaneseDate" | "java.time.chrono.JapaneseEra" | "java.util.jar.JarEntry" | "java.util.jar.JarException" | "java.util.jar.JarFile" | "java.util.jar.JarInputStream" | "java.util.jar.JarOutputStream" | "jdk.security.jarsigner.JarSigner" | "jdk.security.jarsigner.JarSigner.Builder" | "jdk.security.jarsigner.JarSignerException" | "java.net.JarURLConnection" | "javax.tools.JavaCompiler" | "javax.tools.JavaCompiler.CompilationTask" | "com.sun.source.util.JavacTask" | "javax.tools.JavaFileManager" | "javax.tools.JavaFileManager.Location" | "javax.tools.JavaFileObject" | "javax.tools.JavaFileObject.Kind" | "jdk.jshell.tool.JavaShellToolBuilder" | "javax.swing.JButton" | "javax.swing.JCheckBox" | "javax.swing.JCheckBoxMenuItem" | "javax.swing.JColorChooser" | "javax.swing.JComboBox" | "javax.swing.JComboBox.KeySelectionManager" | "javax.swing.JComponent" | "com.sun.tools.jconsole.JConsoleContext" | "com.sun.tools.jconsole.JConsoleContext.ConnectionState" | "com.sun.tools.jconsole.JConsolePlugin" | "rowset.javax.sql.rowset.JdbcRowSet" | "java.sql.JDBCType" | "javax.swing.JDesktopPane" | "javax.swing.JDialog" | "jdk.jshell.execution.JdiDefaultExecutionControl" | "jdk.jshell.execution.JdiExecutionControl" | "jdk.jshell.execution.JdiExecutionControlProvider" | "jdk.jshell.execution.JdiInitiator" | "com.sun.jdi.JDIPermission" | "javax.swing.JEditorPane" | "javax.swing.JFileChooser" | "javax.swing.JFormattedTextField" | "javax.swing.JFormattedTextField.AbstractFormatter" | "javax.swing.JFormattedTextField.AbstractFormatterFactory" | "javax.swing.JFrame" | "javax.swing.JInternalFrame" | "javax.swing.JInternalFrame.JDesktopIcon" | "javax.swing.JLabel" | "javax.swing.JLayer" | "javax.swing.JLayeredPane" | "javax.swing.JList" | "javax.swing.JList.DropLocation" | "javax.swing.JMenu" | "javax.swing.JMenuBar" | "javax.swing.JMenuItem" | "javax.management.JMException" | "javax.management.JMRuntimeException" | "javax.management.JMX" | "javax.management.remote.JMXAddressable" | "javax.management.remote.JMXAuthenticator" | "javax.management.remote.JMXConnectionNotification" | "javax.management.remote.JMXConnector" | "javax.management.remote.JMXConnectorFactory" | "javax.management.remote.JMXConnectorProvider" | "javax.management.remote.JMXConnectorServer" | "javax.management.remote.JMXConnectorServerFactory" | "javax.management.remote.JMXConnectorServerMBean" | "javax.management.remote.JMXConnectorServerProvider" | "javax.management.remote.JMXPrincipal" | "javax.management.remote.JMXProviderException" | "javax.management.remote.JMXServerErrorException" | "javax.management.remote.JMXServiceURL" | "auth.com.sun.security.auth.module.JndiLoginModule" | "java.awt.JobAttributes" | "java.awt.JobAttributes.DefaultSelectionType" | "java.awt.JobAttributes.DestinationType" | "java.awt.JobAttributes.DialogType" | "java.awt.JobAttributes.MultipleDocumentHandlingType" | "java.awt.JobAttributes.SidesType" | "javax.print.attribute.standard.JobHoldUntil" | "javax.print.attribute.standard.JobImpressions" | "javax.print.attribute.standard.JobImpressionsCompleted" | "javax.print.attribute.standard.JobImpressionsSupported" | "javax.print.attribute.standard.JobKOctets" | "javax.print.attribute.standard.JobKOctetsProcessed" | "javax.print.attribute.standard.JobKOctetsSupported" | "javax.print.attribute.standard.JobMediaSheets" | "javax.print.attribute.standard.JobMediaSheetsCompleted" | "javax.print.attribute.standard.JobMediaSheetsSupported" | "javax.print.attribute.standard.JobMessageFromOperator" | "javax.print.attribute.standard.JobName" | "javax.print.attribute.standard.JobOriginatingUserName" | "javax.print.attribute.standard.JobPriority" | "javax.print.attribute.standard.JobPrioritySupported" | "javax.print.attribute.standard.JobSheets" | "javax.print.attribute.standard.JobState" | "javax.print.attribute.standard.JobStateReason" | "javax.print.attribute.standard.JobStateReasons" | "rowset.javax.sql.rowset.Joinable" | "rowset.javax.sql.rowset.JoinRowSet" | "javax.swing.JOptionPane" | "javax.swing.JPanel" | "javax.swing.JPasswordField" | "javax.imageio.plugins.jpeg.JPEGHuffmanTable" | "javax.imageio.plugins.jpeg.JPEGImageReadParam" | "javax.imageio.plugins.jpeg.JPEGImageWriteParam" | "javax.imageio.plugins.jpeg.JPEGQTable" | "javax.swing.JPopupMenu" | "javax.swing.JPopupMenu.Separator" | "javax.swing.JProgressBar" | "javax.swing.JRadioButton" | "javax.swing.JRadioButtonMenuItem" | "javax.swing.JRootPane" | "javax.swing.JScrollBar" | "javax.swing.JScrollPane" | "javax.swing.JSeparator" | "netscape.javascript.JSException" | "jdk.jshell.JShell" | "jdk.jshell.JShell.Builder" | "jdk.jshell.JShellException" | "javax.swing.JSlider" | "netscape.javascript.JSObject" | "javax.swing.JSpinner" | "javax.swing.JSpinner.DateEditor" | "javax.swing.JSpinner.DefaultEditor" | "javax.swing.JSpinner.ListEditor" | "javax.swing.JSpinner.NumberEditor" | "javax.swing.JSplitPane" | "javax.swing.JTabbedPane" | "javax.swing.JTable" | "javax.swing.JTable.DropLocation" | "javax.swing.JTable.PrintMode" | "javax.swing.table.JTableHeader" | "javax.swing.JTextArea" | "javax.swing.text.JTextComponent" | "javax.swing.text.JTextComponent.DropLocation" | "javax.swing.text.JTextComponent.KeyBinding" | "javax.swing.JTextField" | "javax.swing.JTextPane" | "javax.swing.JToggleButton" | "javax.swing.JToggleButton.ToggleButtonModel" | "javax.swing.JToolBar" | "javax.swing.JToolBar.Separator" | "javax.swing.JToolTip" | "javax.swing.JTree" | "javax.swing.JTree.DropLocation" | "javax.swing.JTree.DynamicUtilTreeNode" | "javax.swing.JTree.EmptySelectionModel" | "java.time.temporal.JulianFields" | "javax.swing.JViewport" | "javax.swing.JWindow" | "jgss.javax.security.auth.kerberos.KerberosCredMessage" | "jgss.javax.security.auth.kerberos.KerberosKey" | "jgss.javax.security.auth.kerberos.KerberosPrincipal" | "jgss.javax.security.auth.kerberos.KerberosTicket" | "java.awt.image.Kernel" | "java.security.Key" | "java.awt.event.KeyAdapter" | "javax.crypto.KeyAgreement" | "javax.crypto.KeyAgreementSpi" | "javax.management.openmbean.KeyAlreadyExistsException" | "java.awt.KeyboardFocusManager" | "java.awt.event.KeyEvent" | "java.awt.KeyEventDispatcher" | "java.awt.KeyEventPostProcessor" | "java.security.KeyException" | "java.security.KeyFactory" | "java.security.KeyFactorySpi" | "javax.crypto.KeyGenerator" | "javax.crypto.KeyGeneratorSpi" | "crypto.javax.xml.crypto.dsig.keyinfo.KeyInfo" | "crypto.javax.xml.crypto.dsig.keyinfo.KeyInfoFactory" | "java.awt.event.KeyListener" | "java.security.KeyManagementException" | "javax.net.ssl.KeyManager" | "javax.net.ssl.KeyManagerFactory" | "javax.net.ssl.KeyManagerFactorySpi" | "javax.swing.text.Keymap" | "crypto.javax.xml.crypto.dsig.keyinfo.KeyName" | "java.security.KeyPair" | "java.security.KeyPairGenerator" | "java.security.KeyPairGeneratorSpi" | "java.security.KeyRep" | "java.security.KeyRep.Type" | "crypto.javax.xml.crypto.KeySelector" | "crypto.javax.xml.crypto.KeySelector.Purpose" | "crypto.javax.xml.crypto.KeySelectorException" | "crypto.javax.xml.crypto.KeySelectorResult" | "java.security.spec.KeySpec" | "java.security.KeyStore" | "java.security.KeyStore.Builder" | "java.security.KeyStore.CallbackHandlerProtection" | "java.security.KeyStore.Entry" | "java.security.KeyStore.Entry.Attribute" | "java.security.KeyStore.LoadStoreParameter" | "java.security.KeyStore.PasswordProtection" | "java.security.KeyStore.PrivateKeyEntry" | "java.security.KeyStore.ProtectionParameter" | "java.security.KeyStore.SecretKeyEntry" | "java.security.KeyStore.TrustedCertificateEntry" | "javax.net.ssl.KeyStoreBuilderParameters" | "java.security.KeyStoreException" | "auth.com.sun.security.auth.module.KeyStoreLoginModule" | "java.security.KeyStoreSpi" | "javax.swing.KeyStroke" | "jgss.javax.security.auth.kerberos.KeyTab" | "crypto.javax.xml.crypto.dsig.keyinfo.KeyValue" | "auth.com.sun.security.auth.module.Krb5LoginModule" | "java.awt.Label" | "com.sun.source.tree.LabeledStatementTree" | "javax.swing.plaf.LabelUI" | "javax.swing.text.LabelView" | "java.lang.invoke.LambdaConversionException" | "com.sun.source.tree.LambdaExpressionTree" | "com.sun.source.tree.LambdaExpressionTree.BodyKind" | "java.lang.invoke.LambdaMetafactory" | "javax.security.auth.callback.LanguageCallback" | "com.sun.jdi.connect.LaunchingConnector" | "javax.swing.text.LayeredHighlighter" | "javax.swing.text.LayeredHighlighter.LayerPainter" | "java.lang.LayerInstantiationException" | "javax.swing.plaf.LayerUI" | "javax.swing.LayoutFocusTraversalPolicy" | "java.awt.LayoutManager" | "java.awt.LayoutManager2" | "java.awt.font.LayoutPath" | "javax.swing.text.LayoutQueue" | "javax.swing.LayoutStyle" | "javax.swing.LayoutStyle.ComponentPlacement" | "java.security.cert.LDAPCertStoreParameters" | "javax.naming.ldap.LdapContext" | "auth.com.sun.security.auth.module.LdapLoginModule" | "javax.naming.ldap.LdapName" | "auth.com.sun.security.auth.LdapPrincipal" | "javax.naming.ldap.LdapReferralException" | "java.rmi.dgc.Lease" | "java.util.logging.Level" | "org.xml.sax.ext.LexicalHandler" | "javax.naming.LimitExceededException" | "javax.sound.sampled.Line" | "javax.sound.sampled.Line.Info" | "java.awt.geom.Line2D" | "java.awt.geom.Line2D.Double" | "java.awt.geom.Line2D.Float" | "java.awt.LinearGradientPaint" | "javax.swing.border.LineBorder" | "java.awt.font.LineBreakMeasurer" | "javax.sound.sampled.LineEvent" | "javax.sound.sampled.LineEvent.Type" | "javax.sound.sampled.LineListener" | "com.sun.source.tree.LineMap" | "java.awt.font.LineMetrics" | "java.io.LineNumberReader" | "javax.sound.sampled.LineUnavailableException" | "java.lang.LinkageError" | "java.util.concurrent.LinkedBlockingDeque" | "java.util.concurrent.LinkedBlockingQueue" | "java.util.LinkedHashMap" | "java.util.LinkedHashSet" | "java.util.LinkedList" | "java.util.concurrent.LinkedTransferQueue" | "jdk.dynalink.linker.LinkerServices" | "javax.naming.LinkException" | "javax.naming.LinkLoopException" | "java.nio.file.LinkOption" | "java.nio.file.LinkPermission" | "javax.naming.LinkRef" | "jdk.dynalink.linker.LinkRequest" | "dom.org.w3c.dom.stylesheets.LinkStyle" | "com.sun.source.doctree.LinkTree" | "java.awt.List" | "java.util.List" | "javax.swing.ListCellRenderer" | "javax.swing.event.ListDataEvent" | "javax.swing.event.ListDataListener" | "javax.management.ListenerNotFoundException" | "com.sun.jdi.connect.ListeningConnector" | "java.util.ListIterator" | "javax.swing.ListModel" | "java.util.ListResourceBundle" | "javax.swing.event.ListSelectionEvent" | "javax.swing.event.ListSelectionListener" | "javax.swing.ListSelectionModel" | "javax.swing.plaf.ListUI" | "javax.swing.text.html.ListView" | "com.sun.source.doctree.LiteralTree" | "com.sun.source.tree.LiteralTree" | "jdk.jshell.execution.LoaderDelegate" | "java.time.LocalDate" | "java.time.LocalDateTime" | "java.util.Locale" | "java.util.Locale.Builder" | "java.util.Locale.Category" | "java.util.Locale.FilteringMode" | "java.util.Locale.IsoCountryCode" | "java.util.Locale.LanguageRange" | "java.util.spi.LocaleNameProvider" | "java.util.spi.LocaleServiceProvider" | "jdk.jshell.execution.LocalExecutionControl" | "jdk.jshell.execution.LocalExecutionControlProvider" | "java.time.LocalTime" | "com.sun.jdi.LocalVariable" | "com.sun.jdi.Locatable" | "com.sun.jdi.event.LocatableEvent" | "java.rmi.registry.LocateRegistry" | "com.sun.jdi.Location" | "javax.xml.stream.Location" | "org.xml.sax.Locator" | "org.xml.sax.ext.Locator2" | "org.xml.sax.ext.Locator2Impl" | "org.xml.sax.helpers.LocatorImpl" | "java.util.concurrent.locks.Lock" | "java.lang.management.LockInfo" | "java.util.concurrent.locks.LockSupport" | "java.util.logging.Logger" | "java.util.logging.LoggingPermission" | "javax.security.auth.login.LoginContext" | "javax.security.auth.login.LoginException" | "javax.security.auth.spi.LoginModule" | "java.util.logging.LogManager" | "java.util.logging.LogRecord" | "java.lang.Long" | "java.util.concurrent.atomic.LongAccumulator" | "java.util.concurrent.atomic.LongAdder" | "java.util.function.LongBinaryOperator" | "java.nio.LongBuffer" | "java.util.function.LongConsumer" | "java.util.function.LongFunction" | "java.util.function.LongPredicate" | "java.util.stream.LongStream" | "java.util.stream.LongStream.Builder" | "java.util.LongSummaryStatistics" | "java.util.function.LongSupplier" | "java.util.function.LongToDoubleFunction" | "java.util.function.LongToIntFunction" | "com.sun.jdi.LongType" | "java.util.function.LongUnaryOperator" | "com.sun.jdi.LongValue" | "javax.swing.LookAndFeel" | "jdk.dynalink.linker.support.Lookup" | "java.awt.image.LookupOp" | "java.awt.image.LookupTable" | "org.w3c.dom.ls.LSException" | "org.w3c.dom.ls.LSInput" | "org.w3c.dom.ls.LSLoadEvent" | "org.w3c.dom.ls.LSOutput" | "org.w3c.dom.ls.LSParser" | "org.w3c.dom.ls.LSParserFilter" | "org.w3c.dom.ls.LSProgressEvent" | "org.w3c.dom.ls.LSResourceResolver" | "org.w3c.dom.ls.LSSerializer" | "org.w3c.dom.ls.LSSerializerFilter" | "javax.crypto.Mac" | "javax.crypto.MacSpi" | "com.sun.tools.javac.Main" | "java.nio.charset.MalformedInputException" | "javax.naming.MalformedLinkException" | "javax.management.MalformedObjectNameException" | "java.lang.reflect.MalformedParameterizedTypeException" | "java.lang.reflect.MalformedParametersException" | "java.net.MalformedURLException" | "java.lang.management.ManagementFactory" | "java.lang.management.ManagementPermission" | "javax.naming.ldap.ManageReferralControl" | "javax.net.ssl.ManagerFactoryParameters" | "java.util.jar.Manifest" | "crypto.javax.xml.crypto.dsig.Manifest" | "java.util.Map" | "java.util.Map.Entry" | "java.nio.MappedByteBuffer" | "java.rmi.MarshalException" | "crypto.javax.xml.crypto.MarshalException" | "java.rmi.MarshalledObject" | "javax.swing.text.MaskFormatter" | "java.util.regex.Matcher" | "java.util.regex.MatchResult" | "java.lang.Math" | "java.math.MathContext" | "javax.swing.border.MatteBorder" | "javax.management.MBeanAttributeInfo" | "javax.management.MBeanConstructorInfo" | "javax.management.MBeanException" | "javax.management.MBeanFeatureInfo" | "javax.management.MBeanInfo" | "javax.management.MBeanNotificationInfo" | "javax.management.MBeanOperationInfo" | "javax.management.MBeanParameterInfo" | "javax.management.MBeanPermission" | "javax.management.MBeanRegistration" | "javax.management.MBeanRegistrationException" | "javax.management.MBeanServer" | "javax.management.MBeanServerBuilder" | "javax.management.MBeanServerConnection" | "javax.management.MBeanServerDelegate" | "javax.management.MBeanServerDelegateMBean" | "javax.management.MBeanServerFactory" | "javax.management.remote.MBeanServerForwarder" | "javax.management.MBeanServerInvocationHandler" | "javax.management.MBeanServerNotification" | "javax.management.relation.MBeanServerNotificationFilter" | "javax.management.MBeanServerPermission" | "javax.management.MBeanTrustPermission" | "javax.print.attribute.standard.Media" | "dom.org.w3c.dom.stylesheets.MediaList" | "javax.print.attribute.standard.MediaName" | "javax.print.attribute.standard.MediaPrintableArea" | "javax.print.attribute.standard.MediaSize" | "javax.print.attribute.standard.MediaSize.Engineering" | "javax.print.attribute.standard.MediaSize.ISO" | "javax.print.attribute.standard.MediaSize.JIS" | "javax.print.attribute.standard.MediaSize.NA" | "javax.print.attribute.standard.MediaSize.Other" | "javax.print.attribute.standard.MediaSizeName" | "java.awt.MediaTracker" | "javax.print.attribute.standard.MediaTray" | "java.lang.reflect.Member" | "com.sun.source.tree.MemberReferenceTree" | "com.sun.source.tree.MemberReferenceTree.ReferenceMode" | "com.sun.source.tree.MemberSelectTree" | "java.nio.channels.MembershipKey" | "javax.imageio.stream.MemoryCacheImageInputStream" | "javax.imageio.stream.MemoryCacheImageOutputStream" | "java.util.logging.MemoryHandler" | "java.awt.image.MemoryImageSource" | "java.lang.management.MemoryManagerMXBean" | "java.lang.management.MemoryMXBean" | "java.lang.management.MemoryNotificationInfo" | "java.lang.management.MemoryPoolMXBean" | "java.lang.management.MemoryType" | "java.lang.management.MemoryUsage" | "java.awt.Menu" | "java.awt.MenuBar" | "javax.swing.plaf.MenuBarUI" | "java.awt.MenuComponent" | "java.awt.MenuContainer" | "javax.swing.event.MenuDragMouseEvent" | "javax.swing.event.MenuDragMouseListener" | "javax.swing.MenuElement" | "javax.swing.event.MenuEvent" | "java.awt.MenuItem" | "javax.swing.plaf.MenuItemUI" | "javax.swing.event.MenuKeyEvent" | "javax.swing.event.MenuKeyListener" | "javax.swing.event.MenuListener" | "javax.swing.MenuSelectionManager" | "java.awt.MenuShortcut" | "java.security.MessageDigest" | "java.security.MessageDigestSpi" | "java.text.MessageFormat" | "java.text.MessageFormat.Field" | "com.sun.nio.sctp.MessageInfo" | "jgss.org.ietf.jgss.MessageProp" | "javax.annotation.processing.Messager" | "javax.sound.midi.MetaEventListener" | "javax.swing.plaf.metal.MetalBorders" | "javax.swing.plaf.metal.MetalBorders.ButtonBorder" | "javax.swing.plaf.metal.MetalBorders.Flush3DBorder" | "javax.swing.plaf.metal.MetalBorders.InternalFrameBorder" | "javax.swing.plaf.metal.MetalBorders.MenuBarBorder" | "javax.swing.plaf.metal.MetalBorders.MenuItemBorder" | "javax.swing.plaf.metal.MetalBorders.OptionDialogBorder" | "javax.swing.plaf.metal.MetalBorders.PaletteBorder" | "javax.swing.plaf.metal.MetalBorders.PopupMenuBorder" | "javax.swing.plaf.metal.MetalBorders.RolloverButtonBorder" | "javax.swing.plaf.metal.MetalBorders.ScrollPaneBorder" | "javax.swing.plaf.metal.MetalBorders.TableHeaderBorder" | "javax.swing.plaf.metal.MetalBorders.TextFieldBorder" | "javax.swing.plaf.metal.MetalBorders.ToggleButtonBorder" | "javax.swing.plaf.metal.MetalBorders.ToolBarBorder" | "javax.swing.plaf.metal.MetalButtonUI" | "javax.swing.plaf.metal.MetalCheckBoxIcon" | "javax.swing.plaf.metal.MetalCheckBoxUI" | "javax.swing.plaf.metal.MetalComboBoxButton" | "javax.swing.plaf.metal.MetalComboBoxEditor" | "javax.swing.plaf.metal.MetalComboBoxEditor.UIResource" | "javax.swing.plaf.metal.MetalComboBoxIcon" | "javax.swing.plaf.metal.MetalComboBoxUI" | "javax.swing.plaf.metal.MetalDesktopIconUI" | "javax.swing.plaf.metal.MetalFileChooserUI" | "javax.swing.plaf.metal.MetalIconFactory" | "javax.swing.plaf.metal.MetalIconFactory.FileIcon16" | "javax.swing.plaf.metal.MetalIconFactory.FolderIcon16" | "javax.swing.plaf.metal.MetalIconFactory.PaletteCloseIcon" | "javax.swing.plaf.metal.MetalIconFactory.TreeControlIcon" | "javax.swing.plaf.metal.MetalIconFactory.TreeFolderIcon" | "javax.swing.plaf.metal.MetalIconFactory.TreeLeafIcon" | "javax.swing.plaf.metal.MetalInternalFrameTitlePane" | "javax.swing.plaf.metal.MetalInternalFrameUI" | "javax.swing.plaf.metal.MetalLabelUI" | "javax.swing.plaf.metal.MetalLookAndFeel" | "javax.swing.plaf.metal.MetalMenuBarUI" | "javax.swing.plaf.metal.MetalPopupMenuSeparatorUI" | "javax.swing.plaf.metal.MetalProgressBarUI" | "javax.swing.plaf.metal.MetalRadioButtonUI" | "javax.swing.plaf.metal.MetalRootPaneUI" | "javax.swing.plaf.metal.MetalScrollBarUI" | "javax.swing.plaf.metal.MetalScrollButton" | "javax.swing.plaf.metal.MetalScrollPaneUI" | "javax.swing.plaf.metal.MetalSeparatorUI" | "javax.swing.plaf.metal.MetalSliderUI" | "javax.swing.plaf.metal.MetalSplitPaneUI" | "javax.swing.plaf.metal.MetalTabbedPaneUI" | "javax.swing.plaf.metal.MetalTextFieldUI" | "javax.swing.plaf.metal.MetalTheme" | "javax.swing.plaf.metal.MetalToggleButtonUI" | "javax.swing.plaf.metal.MetalToolBarUI" | "javax.swing.plaf.metal.MetalToolTipUI" | "javax.swing.plaf.metal.MetalTreeUI" | "javax.sound.midi.MetaMessage" | "com.sun.jdi.Method" | "java.lang.reflect.Method" | "java.beans.MethodDescriptor" | "com.sun.jdi.event.MethodEntryEvent" | "com.sun.jdi.request.MethodEntryRequest" | "com.sun.jdi.event.MethodExitEvent" | "com.sun.jdi.request.MethodExitRequest" | "java.lang.invoke.MethodHandle" | "java.lang.invoke.MethodHandleInfo" | "java.lang.invoke.MethodHandleProxies" | "java.lang.invoke.MethodHandles" | "java.lang.invoke.MethodHandles.Lookup" | "jdk.dynalink.linker.MethodHandleTransformer" | "com.sun.source.tree.MethodInvocationTree" | "jdk.jshell.MethodSnippet" | "com.sun.source.tree.MethodTree" | "java.lang.invoke.MethodType" | "jdk.dynalink.linker.MethodTypeConversionStrategy" | "java.security.spec.MGF1ParameterSpec" | "javax.sound.midi.MidiChannel" | "javax.sound.midi.MidiDevice" | "javax.sound.midi.MidiDevice.Info" | "javax.sound.midi.spi.MidiDeviceProvider" | "javax.sound.midi.MidiDeviceReceiver" | "javax.sound.midi.MidiDeviceTransmitter" | "javax.sound.midi.MidiEvent" | "javax.sound.midi.MidiFileFormat" | "javax.sound.midi.spi.MidiFileReader" | "javax.sound.midi.spi.MidiFileWriter" | "javax.sound.midi.MidiMessage" | "javax.sound.midi.MidiSystem" | "javax.sound.midi.MidiUnavailableException" | "java.awt.datatransfer.MimeTypeParseException" | "java.time.chrono.MinguoChronology" | "java.time.chrono.MinguoDate" | "java.time.chrono.MinguoEra" | "javax.swing.text.html.MinimalHTMLWriter" | "com.sun.jdi.Mirror" | "javax.lang.model.type.MirroredTypeException" | "javax.lang.model.type.MirroredTypesException" | "java.util.MissingFormatArgumentException" | "java.util.MissingFormatWidthException" | "jdk.dynalink.beans.MissingMemberHandlerFactory" | "java.util.MissingResourceException" | "javax.sound.sampled.Mixer" | "javax.sound.sampled.Mixer.Info" | "javax.sound.sampled.spi.MixerProvider" | "javax.management.loading.MLet" | "javax.management.loading.MLetContent" | "javax.management.loading.MLetMBean" | "javax.management.modelmbean.ModelMBean" | "javax.management.modelmbean.ModelMBeanAttributeInfo" | "javax.management.modelmbean.ModelMBeanConstructorInfo" | "javax.management.modelmbean.ModelMBeanInfo" | "javax.management.modelmbean.ModelMBeanInfoSupport" | "javax.management.modelmbean.ModelMBeanNotificationBroadcaster" | "javax.management.modelmbean.ModelMBeanNotificationInfo" | "javax.management.modelmbean.ModelMBeanOperationInfo" | "javax.naming.directory.ModificationItem" | "com.sun.jdi.event.ModificationWatchpointEvent" | "com.sun.jdi.request.ModificationWatchpointRequest" | "java.lang.reflect.Modifier" | "javax.lang.model.element.Modifier" | "com.sun.source.tree.ModifiersTree" | "java.lang.Module" | "java.lang.module.ModuleDescriptor" | "java.lang.module.ModuleDescriptor.Builder" | "java.lang.module.ModuleDescriptor.Exports" | "java.lang.module.ModuleDescriptor.Exports.Modifier" | "java.lang.module.ModuleDescriptor.Modifier" | "java.lang.module.ModuleDescriptor.Opens" | "java.lang.module.ModuleDescriptor.Opens.Modifier" | "java.lang.module.ModuleDescriptor.Provides" | "java.lang.module.ModuleDescriptor.Requires" | "java.lang.module.ModuleDescriptor.Requires.Modifier" | "java.lang.module.ModuleDescriptor.Version" | "javax.lang.model.element.ModuleElement" | "javax.lang.model.element.ModuleElement.Directive" | "javax.lang.model.element.ModuleElement.DirectiveKind" | "javax.lang.model.element.ModuleElement.DirectiveVisitor" | "javax.lang.model.element.ModuleElement.ExportsDirective" | "javax.lang.model.element.ModuleElement.OpensDirective" | "javax.lang.model.element.ModuleElement.ProvidesDirective" | "javax.lang.model.element.ModuleElement.RequiresDirective" | "javax.lang.model.element.ModuleElement.UsesDirective" | "java.lang.module.ModuleFinder" | "java.lang.ModuleLayer" | "java.lang.ModuleLayer.Controller" | "java.lang.module.ModuleReader" | "com.sun.jdi.ModuleReference" | "java.lang.module.ModuleReference" | "com.sun.source.tree.ModuleTree" | "com.sun.source.tree.ModuleTree.ModuleKind" | "javax.management.monitor.Monitor" | "com.sun.jdi.event.MonitorContendedEnteredEvent" | "com.sun.jdi.request.MonitorContendedEnteredRequest" | "com.sun.jdi.event.MonitorContendedEnterEvent" | "com.sun.jdi.request.MonitorContendedEnterRequest" | "com.sun.jdi.MonitorInfo" | "java.lang.management.MonitorInfo" | "javax.management.monitor.MonitorMBean" | "javax.management.monitor.MonitorNotification" | "javax.management.monitor.MonitorSettingException" | "com.sun.jdi.event.MonitorWaitedEvent" | "com.sun.jdi.request.MonitorWaitedRequest" | "com.sun.jdi.event.MonitorWaitEvent" | "com.sun.jdi.request.MonitorWaitRequest" | "java.time.Month" | "java.time.MonthDay" | "java.awt.event.MouseAdapter" | "java.awt.dnd.MouseDragGestureRecognizer" | "java.awt.event.MouseEvent" | "org.w3c.dom.events.MouseEvent" | "java.awt.MouseInfo" | "javax.swing.event.MouseInputAdapter" | "javax.swing.event.MouseInputListener" | "java.awt.event.MouseListener" | "java.awt.event.MouseMotionAdapter" | "java.awt.event.MouseMotionListener" | "java.awt.event.MouseWheelEvent" | "java.awt.event.MouseWheelListener" | "javax.swing.plaf.multi.MultiButtonUI" | "java.nio.channels.MulticastChannel" | "java.net.MulticastSocket" | "javax.swing.plaf.multi.MultiColorChooserUI" | "javax.swing.plaf.multi.MultiComboBoxUI" | "javax.swing.plaf.multi.MultiDesktopIconUI" | "javax.swing.plaf.multi.MultiDesktopPaneUI" | "javax.print.MultiDoc" | "javax.print.MultiDocPrintJob" | "javax.print.MultiDocPrintService" | "javax.swing.plaf.multi.MultiFileChooserUI" | "javax.swing.plaf.multi.MultiInternalFrameUI" | "javax.swing.plaf.multi.MultiLabelUI" | "javax.swing.plaf.multi.MultiListUI" | "javax.swing.plaf.multi.MultiLookAndFeel" | "javax.swing.plaf.multi.MultiMenuBarUI" | "javax.swing.plaf.multi.MultiMenuItemUI" | "javax.swing.plaf.multi.MultiOptionPaneUI" | "javax.swing.plaf.multi.MultiPanelUI" | "java.awt.image.MultiPixelPackedSampleModel" | "javax.print.attribute.standard.MultipleDocumentHandling" | "java.awt.MultipleGradientPaint" | "java.awt.MultipleGradientPaint.ColorSpaceType" | "java.awt.MultipleGradientPaint.CycleMethod" | "java.awt.font.MultipleMaster" | "javax.swing.plaf.multi.MultiPopupMenuUI" | "javax.swing.plaf.multi.MultiProgressBarUI" | "java.awt.image.MultiResolutionImage" | "javax.swing.plaf.multi.MultiRootPaneUI" | "javax.swing.plaf.multi.MultiScrollBarUI" | "javax.swing.plaf.multi.MultiScrollPaneUI" | "javax.swing.plaf.multi.MultiSeparatorUI" | "javax.swing.plaf.multi.MultiSliderUI" | "javax.swing.plaf.multi.MultiSpinnerUI" | "javax.swing.plaf.multi.MultiSplitPaneUI" | "javax.swing.plaf.multi.MultiTabbedPaneUI" | "javax.swing.plaf.multi.MultiTableHeaderUI" | "javax.swing.plaf.multi.MultiTableUI" | "javax.swing.plaf.multi.MultiTextUI" | "javax.swing.plaf.multi.MultiToolBarUI" | "javax.swing.plaf.multi.MultiToolTipUI" | "javax.swing.plaf.multi.MultiTreeUI" | "javax.swing.plaf.multi.MultiViewportUI" | "javax.swing.text.MutableAttributeSet" | "java.lang.invoke.MutableCallSite" | "javax.swing.MutableComboBoxModel" | "javax.swing.tree.MutableTreeNode" | "org.w3c.dom.events.MutationEvent" | "javax.lang.model.element.Name" | "javax.naming.Name" | "javax.naming.NameAlreadyBoundException" | "javax.security.auth.callback.NameCallback" | "javax.naming.NameClassPair" | "org.w3c.dom.NamedNodeMap" | "jdk.dynalink.NamedOperation" | "java.security.spec.NamedParameterSpec" | "org.w3c.dom.NameList" | "javax.naming.NameNotFoundException" | "javax.naming.NameParser" | "javax.xml.stream.events.Namespace" | "jdk.dynalink.Namespace" | "javax.naming.event.NamespaceChangeListener" | "javax.xml.namespace.NamespaceContext" | "jdk.dynalink.NamespaceOperation" | "org.xml.sax.helpers.NamespaceSupport" | "java.rmi.Naming" | "javax.naming.NamingEnumeration" | "javax.naming.event.NamingEvent" | "javax.naming.NamingException" | "javax.naming.event.NamingExceptionEvent" | "javax.naming.event.NamingListener" | "javax.naming.spi.NamingManager" | "javax.naming.NamingSecurityException" | "com.sun.jdi.NativeMethodException" | "java.util.NavigableMap" | "java.util.NavigableSet" | "javax.swing.text.NavigationFilter" | "javax.swing.text.NavigationFilter.FilterBypass" | "java.sql.NClob" | "java.lang.NegativeArraySizeException" | "javax.lang.model.element.NestingKind" | "java.net.NetPermission" | "java.nio.channels.NetworkChannel" | "java.net.NetworkInterface" | "jdk.net.NetworkPermission" | "com.sun.source.tree.NewArrayTree" | "com.sun.source.tree.NewClassTree" | "javax.swing.plaf.nimbus.NimbusLookAndFeel" | "javax.swing.plaf.nimbus.NimbusStyle" | "java.lang.NoClassDefFoundError" | "java.nio.channels.NoConnectionPendingException" | "org.w3c.dom.Node" | "java.util.prefs.NodeChangeEvent" | "java.util.prefs.NodeChangeListener" | "org.w3c.dom.traversal.NodeFilter" | "org.w3c.dom.traversal.NodeIterator" | "org.w3c.dom.NodeList" | "crypto.javax.xml.crypto.NodeSetData" | "javax.naming.NoInitialContextException" | "java.awt.geom.NoninvertibleTransformException" | "java.nio.channels.NonReadableChannelException" | "java.nio.channels.NonWritableChannelException" | "javax.naming.NoPermissionException" | "java.text.Normalizer" | "java.text.Normalizer.Form" | "java.net.NoRouteToHostException" | "java.security.NoSuchAlgorithmException" | "javax.naming.directory.NoSuchAttributeException" | "jdk.dynalink.NoSuchDynamicMethodException" | "java.util.NoSuchElementException" | "java.lang.NoSuchFieldError" | "java.lang.NoSuchFieldException" | "java.nio.file.NoSuchFileException" | "crypto.javax.xml.crypto.NoSuchMechanismException" | "java.lang.NoSuchMethodError" | "java.lang.NoSuchMethodException" | "java.rmi.NoSuchObjectException" | "javax.crypto.NoSuchPaddingException" | "java.security.NoSuchProviderException" | "java.io.NotActiveException" | "org.w3c.dom.Notation" | "javax.xml.stream.events.NotationDeclaration" | "java.rmi.NotBoundException" | "javax.management.NotCompliantMBeanException" | "javax.naming.NotContextException" | "java.nio.file.NotDirectoryException" | "com.sun.nio.sctp.Notification" | "javax.management.Notification" | "javax.management.NotificationBroadcaster" | "javax.management.NotificationBroadcasterSupport" | "javax.management.NotificationEmitter" | "javax.management.NotificationFilter" | "javax.management.NotificationFilterSupport" | "com.sun.nio.sctp.NotificationHandler" | "javax.management.NotificationListener" | "javax.management.remote.NotificationResult" | "java.nio.file.NotLinkException" | "java.io.NotSerializableException" | "java.nio.channels.NotYetBoundException" | "java.nio.channels.NotYetConnectedException" | "javax.lang.model.type.NoType" | "auth.com.sun.security.auth.NTDomainPrincipal" | "auth.com.sun.security.auth.module.NTLoginModule" | "auth.com.sun.security.auth.NTNumericCredential" | "auth.com.sun.security.auth.NTSid" | "auth.com.sun.security.auth.NTSidDomainPrincipal" | "auth.com.sun.security.auth.NTSidGroupPrincipal" | "auth.com.sun.security.auth.NTSidPrimaryGroupPrincipal" | "auth.com.sun.security.auth.NTSidUserPrincipal" | "auth.com.sun.security.auth.module.NTSystem" | "auth.com.sun.security.auth.NTUserPrincipal" | "javax.crypto.NullCipher" | "java.lang.NullPointerException" | "javax.lang.model.type.NullType" | "java.lang.Number" | "java.text.NumberFormat" | "java.text.NumberFormat.Field" | "java.lang.NumberFormatException" | "java.text.spi.NumberFormatProvider" | "javax.swing.text.NumberFormatter" | "javax.print.attribute.standard.NumberOfDocuments" | "javax.print.attribute.standard.NumberOfInterveningJobs" | "javax.print.attribute.standard.NumberUp" | "javax.print.attribute.standard.NumberUpSupported" | "java.awt.font.NumericShaper" | "java.awt.font.NumericShaper.Range" | "javax.crypto.spec.OAEPParameterSpec" | "java.util.function.ObjDoubleConsumer" | "java.lang.Object" | "javax.naming.event.ObjectChangeListener" | "com.sun.jdi.ObjectCollectedException" | "javax.naming.spi.ObjectFactory" | "javax.naming.spi.ObjectFactoryBuilder" | "java.io.ObjectInput" | "java.io.ObjectInputFilter" | "java.io.ObjectInputFilter.Config" | "java.io.ObjectInputFilter.FilterInfo" | "java.io.ObjectInputFilter.Status" | "java.io.ObjectInputStream" | "java.io.ObjectInputStream.GetField" | "java.io.ObjectInputValidation" | "javax.management.ObjectInstance" | "javax.management.ObjectName" | "java.io.ObjectOutput" | "java.io.ObjectOutputStream" | "java.io.ObjectOutputStream.PutField" | "com.sun.jdi.ObjectReference" | "java.util.Objects" | "java.io.ObjectStreamClass" | "java.io.ObjectStreamConstants" | "java.io.ObjectStreamException" | "java.io.ObjectStreamField" | "javax.swing.text.html.ObjectView" | "java.rmi.server.ObjID" | "java.util.function.ObjIntConsumer" | "java.util.function.ObjLongConsumer" | "javax.swing.plaf.metal.OceanTheme" | "crypto.javax.xml.crypto.OctetStreamData" | "java.time.OffsetDateTime" | "java.time.OffsetTime" | "jgss.org.ietf.jgss.Oid" | "javax.management.openmbean.OpenDataException" | "java.awt.desktop.OpenFilesEvent" | "java.awt.desktop.OpenFilesHandler" | "javax.management.openmbean.OpenMBeanAttributeInfo" | "javax.management.openmbean.OpenMBeanAttributeInfoSupport" | "javax.management.openmbean.OpenMBeanConstructorInfo" | "javax.management.openmbean.OpenMBeanConstructorInfoSupport" | "javax.management.openmbean.OpenMBeanInfo" | "javax.management.openmbean.OpenMBeanInfoSupport" | "javax.management.openmbean.OpenMBeanOperationInfo" | "javax.management.openmbean.OpenMBeanOperationInfoSupport" | "javax.management.openmbean.OpenMBeanParameterInfo" | "javax.management.openmbean.OpenMBeanParameterInfoSupport" | "java.nio.file.OpenOption" | "com.sun.source.tree.OpensTree" | "java.awt.font.OpenType" | "javax.management.openmbean.OpenType" | "java.awt.desktop.OpenURIEvent" | "java.awt.desktop.OpenURIHandler" | "com.sun.management.OperatingSystemMXBean" | "java.lang.management.OperatingSystemMXBean" | "jdk.dynalink.Operation" | "javax.naming.OperationNotSupportedException" | "javax.management.OperationsException" | "javax.swing.text.html.Option" | "java.util.Optional" | "java.io.OptionalDataException" | "java.util.OptionalDouble" | "java.util.OptionalInt" | "java.util.OptionalLong" | "javax.tools.OptionChecker" | "javax.swing.plaf.OptionPaneUI" | "javax.print.attribute.standard.OrientationRequested" | "java.lang.OutOfMemoryError" | "javax.print.attribute.standard.OutputDeviceAssigned" | "javax.xml.transform.OutputKeys" | "java.io.OutputStream" | "java.io.OutputStreamWriter" | "java.nio.channels.OverlappingFileLockException" | "javax.swing.OverlayLayout" | "java.lang.Package" | "javax.lang.model.element.PackageElement" | "com.sun.source.tree.PackageTree" | "java.awt.image.PackedColorModel" | "java.awt.print.Pageable" | "java.awt.PageAttributes" | "java.awt.PageAttributes.ColorType" | "java.awt.PageAttributes.MediaType" | "java.awt.PageAttributes.OrientationRequestedType" | "java.awt.PageAttributes.OriginType" | "java.awt.PageAttributes.PrintQualityType" | "javax.naming.ldap.PagedResultsControl" | "javax.naming.ldap.PagedResultsResponseControl" | "java.awt.print.PageFormat" | "javax.print.attribute.standard.PageRanges" | "javax.print.attribute.standard.PagesPerMinute" | "javax.print.attribute.standard.PagesPerMinuteColor" | "java.awt.Paint" | "java.awt.PaintContext" | "javax.swing.Painter" | "java.awt.event.PaintEvent" | "java.awt.Panel" | "javax.swing.plaf.PanelUI" | "java.awt.print.Paper" | "javax.swing.text.html.ParagraphView" | "javax.swing.text.ParagraphView" | "java.lang.reflect.Parameter" | "java.awt.image.renderable.ParameterBlock" | "java.beans.ParameterDescriptor" | "javax.lang.model.element.Parameterizable" | "java.lang.reflect.ParameterizedType" | "com.sun.source.tree.ParameterizedTypeTree" | "java.sql.ParameterMetaData" | "com.sun.source.doctree.ParamTree" | "com.sun.source.tree.ParenthesizedTree" | "java.text.ParseException" | "java.text.ParsePosition" | "javax.swing.text.html.parser.Parser" | "org.xml.sax.helpers.ParserAdapter" | "javax.xml.parsers.ParserConfigurationException" | "javax.swing.text.html.parser.ParserDelegator" | "javax.naming.PartialResultException" | "java.net.PasswordAuthentication" | "javax.security.auth.callback.PasswordCallback" | "javax.swing.text.PasswordView" | "javax.sound.midi.Patch" | "java.nio.file.Path" | "java.awt.geom.Path2D" | "java.awt.geom.Path2D.Double" | "java.awt.geom.Path2D.Float" | "java.awt.geom.PathIterator" | "java.nio.file.PathMatcher" | "java.nio.file.Paths" | "com.sun.jdi.PathSearchingVirtualMachine" | "java.util.regex.Pattern" | "java.util.regex.PatternSyntaxException" | "javax.crypto.interfaces.PBEKey" | "javax.crypto.spec.PBEKeySpec" | "javax.crypto.spec.PBEParameterSpec" | "javax.print.attribute.standard.PDLOverrideSupported" | "com.sun.nio.sctp.PeerAddressChangeNotification" | "com.sun.nio.sctp.PeerAddressChangeNotification.AddressChangeEvent" | "java.time.Period" | "java.security.Permission" | "java.security.PermissionCollection" | "java.security.Permissions" | "java.beans.PersistenceDelegate" | "javax.management.PersistentMBean" | "jdk.jshell.PersistentSnippet" | "crypto.javax.xml.crypto.dsig.keyinfo.PGPData" | "java.lang.ref.PhantomReference" | "java.util.concurrent.Phaser" | "java.nio.channels.Pipe" | "java.nio.channels.Pipe.SinkChannel" | "java.nio.channels.Pipe.SourceChannel" | "java.io.PipedInputStream" | "java.io.PipedOutputStream" | "java.io.PipedReader" | "java.io.PipedWriter" | "java.awt.image.PixelGrabber" | "java.awt.image.PixelInterleavedSampleModel" | "java.security.PKCS12Attribute" | "java.security.spec.PKCS8EncodedKeySpec" | "java.security.cert.PKIXBuilderParameters" | "java.security.cert.PKIXCertPathBuilderResult" | "java.security.cert.PKIXCertPathChecker" | "java.security.cert.PKIXCertPathValidatorResult" | "java.security.cert.PKIXParameters" | "java.security.cert.PKIXReason" | "java.security.cert.PKIXRevocationChecker" | "java.security.cert.PKIXRevocationChecker.Option" | "javax.swing.text.PlainDocument" | "javax.swing.text.PlainView" | "java.lang.management.PlatformLoggingMXBean" | "java.lang.management.PlatformManagedObject" | "com.sun.source.util.Plugin" | "java.awt.Point" | "java.awt.geom.Point2D" | "java.awt.geom.Point2D.Double" | "java.awt.geom.Point2D.Float" | "java.awt.PointerInfo" | "java.security.Policy" | "java.security.Policy.Parameters" | "java.security.cert.PolicyNode" | "java.security.cert.PolicyQualifierInfo" | "java.security.PolicySpi" | "java.awt.Polygon" | "javax.sql.PooledConnection" | "javax.sql.PooledConnectionBuilder" | "javax.swing.Popup" | "javax.swing.PopupFactory" | "java.awt.PopupMenu" | "javax.swing.event.PopupMenuEvent" | "javax.swing.event.PopupMenuListener" | "javax.swing.plaf.PopupMenuUI" | "javax.sound.sampled.Port" | "javax.sound.sampled.Port.Info" | "java.net.PortUnreachableException" | "javax.swing.text.Position" | "javax.swing.text.Position.Bias" | "java.nio.file.attribute.PosixFileAttributes" | "java.nio.file.attribute.PosixFileAttributeView" | "java.nio.file.attribute.PosixFilePermission" | "java.nio.file.attribute.PosixFilePermissions" | "java.util.function.Predicate" | "rowset.javax.sql.rowset.Predicate" | "java.util.prefs.PreferenceChangeEvent" | "java.util.prefs.PreferenceChangeListener" | "java.util.prefs.Preferences" | "java.awt.desktop.PreferencesEvent" | "java.util.prefs.PreferencesFactory" | "java.awt.desktop.PreferencesHandler" | "java.sql.PreparedStatement" | "javax.print.attribute.standard.PresentationDirection" | "java.util.PrimitiveIterator" | "java.util.PrimitiveIterator.OfDouble" | "java.util.PrimitiveIterator.OfInt" | "java.util.PrimitiveIterator.OfLong" | "com.sun.jdi.PrimitiveType" | "javax.lang.model.type.PrimitiveType" | "com.sun.source.tree.PrimitiveTypeTree" | "com.sun.jdi.PrimitiveValue" | "java.security.Principal" | "auth.com.sun.security.auth.PrincipalComparator" | "java.awt.print.Printable" | "java.awt.print.PrinterAbortException" | "java.awt.print.PrinterException" | "java.awt.print.PrinterGraphics" | "javax.print.attribute.standard.PrinterInfo" | "java.awt.print.PrinterIOException" | "javax.print.attribute.standard.PrinterIsAcceptingJobs" | "java.awt.print.PrinterJob" | "javax.print.attribute.standard.PrinterLocation" | "javax.print.attribute.standard.PrinterMakeAndModel" | "javax.print.attribute.standard.PrinterMessageFromOperator" | "javax.print.attribute.standard.PrinterMoreInfo" | "javax.print.attribute.standard.PrinterMoreInfoManufacturer" | "javax.print.attribute.standard.PrinterName" | "javax.print.attribute.standard.PrinterResolution" | "javax.print.attribute.standard.PrinterState" | "javax.print.attribute.standard.PrinterStateReason" | "javax.print.attribute.standard.PrinterStateReasons" | "javax.print.attribute.standard.PrinterURI" | "javax.print.event.PrintEvent" | "javax.print.PrintException" | "java.awt.desktop.PrintFilesEvent" | "java.awt.desktop.PrintFilesHandler" | "java.awt.PrintGraphics" | "java.awt.PrintJob" | "javax.print.event.PrintJobAdapter" | "javax.print.attribute.PrintJobAttribute" | "javax.print.event.PrintJobAttributeEvent" | "javax.print.event.PrintJobAttributeListener" | "javax.print.attribute.PrintJobAttributeSet" | "javax.print.event.PrintJobEvent" | "javax.print.event.PrintJobListener" | "javax.print.attribute.standard.PrintQuality" | "javax.print.attribute.PrintRequestAttribute" | "javax.print.attribute.PrintRequestAttributeSet" | "javax.print.PrintService" | "javax.print.attribute.PrintServiceAttribute" | "javax.print.event.PrintServiceAttributeEvent" | "javax.print.event.PrintServiceAttributeListener" | "javax.print.attribute.PrintServiceAttributeSet" | "javax.print.PrintServiceLookup" | "java.io.PrintStream" | "java.io.PrintWriter" | "java.util.concurrent.PriorityBlockingQueue" | "java.util.PriorityQueue" | "javax.management.loading.PrivateClassLoader" | "javax.security.auth.PrivateCredentialPermission" | "java.security.PrivateKey" | "javax.management.loading.PrivateMLet" | "java.security.PrivilegedAction" | "java.security.PrivilegedActionException" | "java.security.PrivilegedExceptionAction" | "java.lang.Process" | "java.lang.ProcessBuilder" | "java.lang.ProcessBuilder.Redirect" | "java.lang.ProcessBuilder.Redirect.Type" | "java.lang.ProcessHandle" | "java.lang.ProcessHandle.Info" | "javax.annotation.processing.ProcessingEnvironment" | "javax.xml.stream.events.ProcessingInstruction" | "org.w3c.dom.ProcessingInstruction" | "javax.annotation.processing.Processor" | "java.awt.color.ProfileDataException" | "javax.swing.plaf.ProgressBarUI" | "javax.swing.ProgressMonitor" | "javax.swing.ProgressMonitorInputStream" | "java.util.Properties" | "java.beans.PropertyChangeEvent" | "java.beans.PropertyChangeListener" | "java.beans.PropertyChangeListenerProxy" | "java.beans.PropertyChangeSupport" | "java.beans.PropertyDescriptor" | "java.beans.PropertyEditor" | "java.beans.PropertyEditorManager" | "java.beans.PropertyEditorSupport" | "java.util.PropertyPermission" | "java.util.PropertyResourceBundle" | "java.beans.PropertyVetoException" | "java.security.ProtectionDomain" | "java.net.ProtocolException" | "java.net.ProtocolFamily" | "java.security.Provider" | "java.security.Provider.Service" | "java.security.ProviderException" | "java.nio.file.ProviderMismatchException" | "java.nio.file.ProviderNotFoundException" | "com.sun.source.doctree.ProvidesTree" | "com.sun.source.tree.ProvidesTree" | "java.lang.reflect.Proxy" | "java.net.Proxy" | "java.net.Proxy.Type" | "java.net.ProxySelector" | "java.sql.PseudoColumnUsage" | "javax.crypto.spec.PSource" | "javax.crypto.spec.PSource.PSpecified" | "java.security.spec.PSSParameterSpec" | "java.security.PublicKey" | "java.io.PushbackInputStream" | "java.io.PushbackReader" | "javax.xml.namespace.QName" | "java.awt.geom.QuadCurve2D" | "java.awt.geom.QuadCurve2D.Double" | "java.awt.geom.QuadCurve2D.Float" | "javax.lang.model.element.QualifiedNameable" | "javax.management.Query" | "javax.management.QueryEval" | "javax.management.QueryExp" | "java.util.Queue" | "javax.print.attribute.standard.QueuedJobCount" | "java.awt.desktop.QuitEvent" | "java.awt.desktop.QuitHandler" | "java.awt.desktop.QuitResponse" | "java.awt.desktop.QuitStrategy" | "java.awt.RadialGradientPaint" | "java.util.Random" | "java.util.RandomAccess" | "java.io.RandomAccessFile" | "org.w3c.dom.ranges.Range" | "org.w3c.dom.ranges.RangeException" | "java.awt.image.Raster" | "java.awt.image.RasterFormatException" | "java.awt.image.RasterOp" | "javax.crypto.spec.RC2ParameterSpec" | "javax.crypto.spec.RC5ParameterSpec" | "javax.naming.ldap.Rdn" | "java.lang.Readable" | "java.nio.channels.ReadableByteChannel" | "java.io.Reader" | "java.nio.ReadOnlyBufferException" | "java.nio.file.ReadOnlyFileSystemException" | "java.nio.channels.ReadPendingException" | "java.util.concurrent.locks.ReadWriteLock" | "sasl.javax.security.sasl.RealmCallback" | "sasl.javax.security.sasl.RealmChoiceCallback" | "javax.sound.midi.Receiver" | "jdk.jfr.consumer.RecordedClass" | "jdk.jfr.consumer.RecordedClassLoader" | "jdk.jfr.consumer.RecordedEvent" | "jdk.jfr.consumer.RecordedFrame" | "jdk.jfr.consumer.RecordedMethod" | "jdk.jfr.consumer.RecordedObject" | "jdk.jfr.consumer.RecordedStackTrace" | "jdk.jfr.consumer.RecordedThread" | "jdk.jfr.consumer.RecordedThreadGroup" | "jdk.jfr.Recording" | "jdk.jfr.consumer.RecordingFile" | "jfr.jdk.management.jfr.RecordingInfo" | "jdk.jfr.RecordingState" | "dom.org.w3c.dom.css.Rect" | "java.awt.Rectangle" | "java.awt.geom.Rectangle2D" | "java.awt.geom.Rectangle2D.Double" | "java.awt.geom.Rectangle2D.Float" | "java.awt.geom.RectangularShape" | "java.util.concurrent.RecursiveAction" | "java.util.concurrent.RecursiveTask" | "java.util.concurrent.locks.ReentrantLock" | "java.util.concurrent.locks.ReentrantReadWriteLock" | "java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock" | "java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock" | "java.sql.Ref" | "javax.naming.RefAddr" | "java.lang.ref.Reference" | "javax.naming.Reference" | "crypto.javax.xml.crypto.dsig.Reference" | "javax.naming.Referenceable" | "java.lang.ref.ReferenceQueue" | "com.sun.source.doctree.ReferenceTree" | "com.sun.jdi.ReferenceType" | "javax.lang.model.type.ReferenceType" | "javax.print.attribute.standard.ReferenceUriSchemesSupported" | "javax.naming.ReferralException" | "javax.management.ReflectionException" | "java.lang.ReflectiveOperationException" | "java.lang.reflect.ReflectPermission" | "javax.security.auth.Refreshable" | "javax.security.auth.RefreshFailedException" | "javax.swing.plaf.synth.Region" | "javax.imageio.spi.RegisterableService" | "java.rmi.registry.Registry" | "java.util.concurrent.RejectedExecutionException" | "java.util.concurrent.RejectedExecutionHandler" | "javax.management.relation.Relation" | "javax.management.relation.RelationException" | "javax.management.relation.RelationNotFoundException" | "javax.management.relation.RelationNotification" | "javax.management.relation.RelationService" | "javax.management.relation.RelationServiceMBean" | "javax.management.relation.RelationServiceNotRegisteredException" | "javax.management.relation.RelationSupport" | "javax.management.relation.RelationSupportMBean" | "javax.management.relation.RelationType" | "javax.management.relation.RelationTypeNotFoundException" | "javax.management.relation.RelationTypeSupport" | "jdk.dynalink.RelinkableCallSite" | "java.rmi.Remote" | "java.rmi.RemoteException" | "jdk.jshell.execution.RemoteExecutionControl" | "java.rmi.server.RemoteObject" | "java.rmi.server.RemoteObjectInvocationHandler" | "java.rmi.server.RemoteRef" | "java.rmi.server.RemoteServer" | "java.awt.image.renderable.RenderableImage" | "java.awt.image.renderable.RenderableImageOp" | "java.awt.image.renderable.RenderableImageProducer" | "java.awt.image.renderable.RenderContext" | "java.awt.image.RenderedImage" | "java.awt.image.renderable.RenderedImageFactory" | "javax.swing.Renderer" | "java.awt.RenderingHints" | "java.awt.RenderingHints.Key" | "javax.swing.RepaintManager" | "java.awt.image.ReplicateScaleFilter" | "jdk.javadoc.doclet.Reporter" | "javax.print.attribute.standard.RequestingUserName" | "javax.management.modelmbean.RequiredModelMBean" | "com.sun.source.tree.RequiresTree" | "java.awt.image.RescaleOp" | "java.lang.module.ResolutionException" | "javax.print.attribute.ResolutionSyntax" | "java.lang.module.ResolvedModule" | "javax.naming.spi.Resolver" | "javax.naming.spi.ResolveResult" | "java.time.format.ResolverStyle" | "java.util.ResourceBundle" | "java.util.ResourceBundle.Control" | "java.util.spi.ResourceBundleControlProvider" | "java.util.spi.ResourceBundleProvider" | "javax.smartcardio.ResponseAPDU" | "java.net.ResponseCache" | "javax.xml.transform.Result" | "java.sql.ResultSet" | "java.sql.ResultSetMetaData" | "java.lang.annotation.RetentionPolicy" | "crypto.javax.xml.crypto.dsig.keyinfo.RetrievalMethod" | "com.sun.source.doctree.ReturnTree" | "com.sun.source.tree.ReturnTree" | "javax.sound.sampled.ReverbType" | "dom.org.w3c.dom.css.RGBColor" | "java.awt.image.RGBImageFilter" | "java.rmi.server.RMIClassLoader" | "java.rmi.server.RMIClassLoaderSpi" | "java.rmi.server.RMIClientSocketFactory" | "rmi.javax.management.remote.rmi.RMIConnection" | "rmi.javax.management.remote.rmi.RMIConnectionImpl" | "rmi.javax.management.remote.rmi.RMIConnectionImpl_Stub" | "rmi.javax.management.remote.rmi.RMIConnector" | "rmi.javax.management.remote.rmi.RMIConnectorServer" | "java.rmi.server.RMIFailureHandler" | "rmi.javax.management.remote.rmi.RMIJRMPServerImpl" | "rmi.javax.management.remote.rmi.RMIServer" | "rmi.javax.management.remote.rmi.RMIServerImpl" | "rmi.javax.management.remote.rmi.RMIServerImpl_Stub" | "java.rmi.server.RMIServerSocketFactory" | "java.rmi.server.RMISocketFactory" | "java.awt.Robot" | "javax.management.relation.Role" | "javax.management.relation.RoleInfo" | "javax.management.relation.RoleInfoNotFoundException" | "javax.management.relation.RoleList" | "javax.management.relation.RoleNotFoundException" | "javax.management.relation.RoleResult" | "javax.management.relation.RoleStatus" | "javax.management.relation.RoleUnresolved" | "javax.management.relation.RoleUnresolvedList" | "javax.swing.RootPaneContainer" | "javax.swing.plaf.RootPaneUI" | "javax.annotation.processing.RoundEnvironment" | "java.math.RoundingMode" | "java.awt.geom.RoundRectangle2D" | "java.awt.geom.RoundRectangle2D.Double" | "java.awt.geom.RoundRectangle2D.Float" | "javax.swing.RowFilter" | "javax.swing.RowFilter.ComparisonType" | "javax.swing.RowFilter.Entry" | "java.sql.RowId" | "java.sql.RowIdLifetime" | "javax.swing.tree.RowMapper" | "javax.sql.RowSet" | "javax.sql.RowSetEvent" | "rowset.javax.sql.rowset.RowSetFactory" | "javax.sql.RowSetInternal" | "javax.sql.RowSetListener" | "javax.sql.RowSetMetaData" | "rowset.javax.sql.rowset.RowSetMetaDataImpl" | "rowset.javax.sql.rowset.RowSetProvider" | "javax.sql.RowSetReader" | "rowset.javax.sql.rowset.RowSetWarning" | "javax.sql.RowSetWriter" | "javax.swing.RowSorter" | "javax.swing.RowSorter.SortKey" | "javax.swing.event.RowSorterEvent" | "javax.swing.event.RowSorterEvent.Type" | "javax.swing.event.RowSorterListener" | "java.security.interfaces.RSAKey" | "java.security.spec.RSAKeyGenParameterSpec" | "java.security.interfaces.RSAMultiPrimePrivateCrtKey" | "java.security.spec.RSAMultiPrimePrivateCrtKeySpec" | "java.security.spec.RSAOtherPrimeInfo" | "java.security.interfaces.RSAPrivateCrtKey" | "java.security.spec.RSAPrivateCrtKeySpec" | "java.security.interfaces.RSAPrivateKey" | "java.security.spec.RSAPrivateKeySpec" | "java.security.interfaces.RSAPublicKey" | "java.security.spec.RSAPublicKeySpec" | "javax.swing.text.rtf.RTFEditorKit" | "java.text.RuleBasedCollator" | "java.lang.Runnable" | "java.util.concurrent.RunnableFuture" | "java.util.concurrent.RunnableScheduledFuture" | "java.lang.Runtime" | "java.lang.Runtime.Version" | "javax.management.RuntimeErrorException" | "java.lang.RuntimeException" | "javax.management.RuntimeMBeanException" | "java.lang.management.RuntimeMXBean" | "javax.management.RuntimeOperationsException" | "java.lang.RuntimePermission" | "java.awt.image.SampleModel" | "sasl.javax.security.sasl.Sasl" | "sasl.javax.security.sasl.SaslClient" | "sasl.javax.security.sasl.SaslClientFactory" | "sasl.javax.security.sasl.SaslException" | "sasl.javax.security.sasl.SaslServer" | "sasl.javax.security.sasl.SaslServerFactory" | "java.sql.Savepoint" | "org.xml.sax.SAXException" | "org.xml.sax.SAXNotRecognizedException" | "org.xml.sax.SAXNotSupportedException" | "org.xml.sax.SAXParseException" | "javax.xml.parsers.SAXParser" | "javax.xml.parsers.SAXParserFactory" | "javax.xml.transform.sax.SAXResult" | "javax.xml.transform.sax.SAXSource" | "javax.xml.transform.sax.SAXTransformerFactory" | "java.util.Scanner" | "java.nio.channels.ScatteringByteChannel" | "java.util.concurrent.ScheduledExecutorService" | "java.util.concurrent.ScheduledFuture" | "java.util.concurrent.ScheduledThreadPoolExecutor" | "javax.xml.validation.Schema" | "javax.xml.validation.SchemaFactory" | "javax.xml.validation.SchemaFactoryConfigurationError" | "javax.xml.validation.SchemaFactoryLoader" | "javax.naming.directory.SchemaViolationException" | "com.sun.source.tree.Scope" | "java.awt.desktop.ScreenSleepEvent" | "java.awt.desktop.ScreenSleepListener" | "javax.script.ScriptContext" | "javax.script.ScriptEngine" | "javax.script.ScriptEngineFactory" | "javax.script.ScriptEngineManager" | "javax.script.ScriptException" | "javax.swing.Scrollable" | "java.awt.Scrollbar" | "javax.swing.plaf.ScrollBarUI" | "java.awt.ScrollPane" | "java.awt.ScrollPaneAdjustable" | "javax.swing.ScrollPaneConstants" | "javax.swing.ScrollPaneLayout" | "javax.swing.ScrollPaneLayout.UIResource" | "javax.swing.plaf.ScrollPaneUI" | "com.sun.nio.sctp.SctpChannel" | "com.sun.nio.sctp.SctpMultiChannel" | "com.sun.nio.sctp.SctpServerChannel" | "com.sun.nio.sctp.SctpSocketOption" | "com.sun.nio.sctp.SctpStandardSocketOptions" | "com.sun.nio.sctp.SctpStandardSocketOptions.InitMaxStreams" | "javax.crypto.SealedObject" | "javax.naming.directory.SearchControls" | "javax.naming.directory.SearchResult" | "java.awt.SecondaryLoop" | "javax.crypto.SecretKey" | "javax.crypto.SecretKeyFactory" | "javax.crypto.SecretKeyFactorySpi" | "javax.crypto.spec.SecretKeySpec" | "java.net.SecureCacheResponse" | "java.security.SecureClassLoader" | "java.nio.file.SecureDirectoryStream" | "jdk.dynalink.SecureLookupSupplier" | "java.security.SecureRandom" | "java.security.SecureRandomParameters" | "java.security.SecureRandomSpi" | "java.security.Security" | "java.lang.SecurityException" | "java.lang.SecurityManager" | "java.security.SecurityPermission" | "java.nio.channels.SeekableByteChannel" | "com.sun.source.doctree.SeeTree" | "javax.swing.text.Segment" | "java.nio.channels.SelectableChannel" | "java.nio.channels.SelectionKey" | "java.nio.channels.Selector" | "java.nio.channels.spi.SelectorProvider" | "java.util.concurrent.Semaphore" | "com.sun.nio.sctp.SendFailedNotification" | "javax.swing.plaf.SeparatorUI" | "javax.sound.midi.Sequence" | "java.io.SequenceInputStream" | "javax.sound.midi.Sequencer" | "javax.sound.midi.Sequencer.SyncMode" | "rowset.javax.sql.rowset.serial.SerialArray" | "rowset.javax.sql.rowset.serial.SerialBlob" | "rowset.javax.sql.rowset.serial.SerialClob" | "rowset.javax.sql.rowset.serial.SerialDatalink" | "com.sun.source.doctree.SerialDataTree" | "rowset.javax.sql.rowset.serial.SerialException" | "com.sun.source.doctree.SerialFieldTree" | "java.io.Serializable" | "java.io.SerializablePermission" | "java.lang.invoke.SerializedLambda" | "rowset.javax.sql.rowset.serial.SerialJavaObject" | "rowset.javax.sql.rowset.serial.SerialRef" | "rowset.javax.sql.rowset.serial.SerialStruct" | "com.sun.source.doctree.SerialTree" | "java.rmi.server.ServerCloneException" | "java.rmi.ServerError" | "java.rmi.ServerException" | "java.rmi.server.ServerNotActiveException" | "java.net.ServerSocket" | "java.nio.channels.ServerSocketChannel" | "javax.net.ServerSocketFactory" | "java.util.ServiceConfigurationError" | "java.util.ServiceLoader" | "java.util.ServiceLoader.Provider" | "javax.management.ServiceNotFoundException" | "jgss.javax.security.auth.kerberos.ServicePermission" | "javax.imageio.spi.ServiceRegistry" | "javax.imageio.spi.ServiceRegistry.Filter" | "javax.print.ServiceUI" | "javax.print.ServiceUIFactory" | "javax.naming.ServiceUnavailableException" | "java.util.Set" | "javax.print.attribute.SetOfIntegerSyntax" | "jdk.jfr.SettingControl" | "jdk.jfr.SettingDescriptor" | "jfr.jdk.management.jfr.SettingDescriptorInfo" | "javax.print.attribute.standard.Severity" | "java.awt.Shape" | "java.awt.font.ShapeGraphicAttribute" | "java.sql.ShardingKey" | "java.sql.ShardingKeyBuilder" | "javax.print.attribute.standard.SheetCollate" | "java.lang.Short" | "java.nio.ShortBuffer" | "javax.crypto.ShortBufferException" | "java.awt.image.ShortLookupTable" | "javax.sound.midi.ShortMessage" | "com.sun.jdi.ShortType" | "com.sun.jdi.ShortValue" | "java.nio.channels.ShutdownChannelGroupException" | "com.sun.nio.sctp.ShutdownNotification" | "javax.print.attribute.standard.Sides" | "java.security.Signature" | "java.security.SignatureException" | "crypto.javax.xml.crypto.dsig.SignatureMethod" | "crypto.javax.xml.crypto.dsig.spec.SignatureMethodParameterSpec" | "crypto.javax.xml.crypto.dsig.SignatureProperties" | "crypto.javax.xml.crypto.dsig.SignatureProperty" | "java.security.SignatureSpi" | "crypto.javax.xml.crypto.dsig.SignedInfo" | "java.security.SignedObject" | "java.time.format.SignStyle" | "javax.lang.model.util.SimpleAnnotationValueVisitor6" | "javax.lang.model.util.SimpleAnnotationValueVisitor7" | "javax.lang.model.util.SimpleAnnotationValueVisitor8" | "javax.lang.model.util.SimpleAnnotationValueVisitor9" | "javax.swing.text.SimpleAttributeSet" | "java.beans.SimpleBeanInfo" | "javax.script.SimpleBindings" | "java.text.SimpleDateFormat" | "javax.print.SimpleDoc" | "com.sun.source.util.SimpleDocTreeVisitor" | "javax.lang.model.util.SimpleElementVisitor6" | "javax.lang.model.util.SimpleElementVisitor7" | "javax.lang.model.util.SimpleElementVisitor8" | "javax.lang.model.util.SimpleElementVisitor9" | "java.nio.file.SimpleFileVisitor" | "java.util.logging.SimpleFormatter" | "javax.tools.SimpleJavaFileObject" | "jdk.dynalink.linker.support.SimpleLinkRequest" | "jdk.dynalink.support.SimpleRelinkableCallSite" | "javax.script.SimpleScriptContext" | "java.util.SimpleTimeZone" | "com.sun.source.util.SimpleTreeVisitor" | "javax.management.openmbean.SimpleType" | "javax.lang.model.util.SimpleTypeVisitor6" | "javax.lang.model.util.SimpleTypeVisitor7" | "javax.lang.model.util.SimpleTypeVisitor8" | "javax.lang.model.util.SimpleTypeVisitor9" | "com.sun.source.doctree.SinceTree" | "java.awt.image.SinglePixelPackedSampleModel" | "javax.swing.SingleSelectionModel" | "javax.print.attribute.Size2DSyntax" | "javax.naming.SizeLimitExceededException" | "javax.swing.SizeRequirements" | "javax.swing.SizeSequence" | "javax.swing.plaf.SliderUI" | "javax.net.ssl.SNIHostName" | "javax.net.ssl.SNIMatcher" | "jdk.jshell.Snippet" | "jdk.jshell.Snippet.Kind" | "jdk.jshell.Snippet.Status" | "jdk.jshell.Snippet.SubKind" | "jdk.jshell.SnippetEvent" | "javax.net.ssl.SNIServerName" | "java.net.Socket" | "java.net.SocketAddress" | "java.nio.channels.SocketChannel" | "java.net.SocketException" | "javax.net.SocketFactory" | "jdk.net.SocketFlow" | "jdk.net.SocketFlow.Status" | "java.util.logging.SocketHandler" | "java.net.SocketImpl" | "java.net.SocketImplFactory" | "java.net.SocketOption" | "java.net.SocketOptions" | "java.net.SocketPermission" | "jdk.net.Sockets" | "java.net.SocketTimeoutException" | "javax.swing.border.SoftBevelBorder" | "java.lang.ref.SoftReference" | "javax.naming.ldap.SortControl" | "java.util.SortedMap" | "java.util.SortedSet" | "javax.swing.SortingFocusTraversalPolicy" | "javax.naming.ldap.SortKey" | "javax.swing.SortOrder" | "javax.naming.ldap.SortResponseControl" | "javax.sound.midi.Soundbank" | "javax.sound.midi.spi.SoundbankReader" | "javax.sound.midi.SoundbankResource" | "javax.xml.transform.Source" | "jdk.jshell.SourceCodeAnalysis" | "jdk.jshell.SourceCodeAnalysis.Completeness" | "jdk.jshell.SourceCodeAnalysis.CompletionInfo" | "jdk.jshell.SourceCodeAnalysis.Documentation" | "jdk.jshell.SourceCodeAnalysis.QualifiedNames" | "jdk.jshell.SourceCodeAnalysis.SnippetWrapper" | "jdk.jshell.SourceCodeAnalysis.Suggestion" | "javax.sound.sampled.SourceDataLine" | "javax.xml.transform.SourceLocator" | "com.sun.source.util.SourcePositions" | "javax.lang.model.SourceVersion" | "javax.swing.SpinnerDateModel" | "javax.swing.SpinnerListModel" | "javax.swing.SpinnerModel" | "javax.swing.SpinnerNumberModel" | "javax.swing.plaf.SpinnerUI" | "jdk.jshell.spi.SPIResolutionException" | "java.awt.SplashScreen" | "java.util.Spliterator" | "java.util.Spliterator.OfDouble" | "java.util.Spliterator.OfInt" | "java.util.Spliterator.OfLong" | "java.util.Spliterator.OfPrimitive" | "java.util.Spliterators" | "java.util.Spliterators.AbstractDoubleSpliterator" | "java.util.Spliterators.AbstractIntSpliterator" | "java.util.Spliterators.AbstractLongSpliterator" | "java.util.Spliterators.AbstractSpliterator" | "javax.swing.plaf.SplitPaneUI" | "java.util.SplittableRandom" | "javax.swing.Spring" | "javax.swing.SpringLayout" | "javax.swing.SpringLayout.Constraints" | "java.sql.SQLClientInfoException" | "java.sql.SQLData" | "java.sql.SQLDataException" | "java.sql.SQLException" | "java.sql.SQLFeatureNotSupportedException" | "java.sql.SQLInput" | "rowset.javax.sql.rowset.serial.SQLInputImpl" | "java.sql.SQLIntegrityConstraintViolationException" | "java.sql.SQLInvalidAuthorizationSpecException" | "java.sql.SQLNonTransientConnectionException" | "java.sql.SQLNonTransientException" | "java.sql.SQLOutput" | "rowset.javax.sql.rowset.serial.SQLOutputImpl" | "java.sql.SQLPermission" | "java.sql.SQLRecoverableException" | "java.sql.SQLSyntaxErrorException" | "java.sql.SQLTimeoutException" | "java.sql.SQLTransactionRollbackException" | "java.sql.SQLTransientConnectionException" | "java.sql.SQLTransientException" | "java.sql.SQLType" | "java.sql.SQLWarning" | "java.sql.SQLXML" | "javax.net.ssl.SSLContext" | "javax.net.ssl.SSLContextSpi" | "javax.net.ssl.SSLEngine" | "javax.net.ssl.SSLEngineResult" | "javax.net.ssl.SSLEngineResult.HandshakeStatus" | "javax.net.ssl.SSLEngineResult.Status" | "javax.net.ssl.SSLException" | "javax.net.ssl.SSLHandshakeException" | "javax.net.ssl.SSLKeyException" | "javax.net.ssl.SSLParameters" | "javax.net.ssl.SSLPeerUnverifiedException" | "javax.net.ssl.SSLPermission" | "javax.net.ssl.SSLProtocolException" | "javax.rmi.ssl.SslRMIClientSocketFactory" | "javax.rmi.ssl.SslRMIServerSocketFactory" | "javax.net.ssl.SSLServerSocket" | "javax.net.ssl.SSLServerSocketFactory" | "javax.net.ssl.SSLSession" | "javax.net.ssl.SSLSessionBindingEvent" | "javax.net.ssl.SSLSessionBindingListener" | "javax.net.ssl.SSLSessionContext" | "javax.net.ssl.SSLSocket" | "javax.net.ssl.SSLSocketFactory" | "java.util.Stack" | "com.sun.jdi.StackFrame" | "java.lang.StackOverflowError" | "java.lang.StackTraceElement" | "java.lang.StackWalker" | "java.lang.StackWalker.Option" | "java.lang.StackWalker.StackFrame" | "java.util.concurrent.locks.StampedLock" | "java.nio.charset.StandardCharsets" | "javax.net.ssl.StandardConstants" | "java.nio.file.StandardCopyOption" | "jdk.javadoc.doclet.StandardDoclet" | "javax.management.StandardEmitterMBean" | "javax.tools.StandardJavaFileManager" | "javax.tools.StandardJavaFileManager.PathFactory" | "javax.tools.StandardLocation" | "javax.management.StandardMBean" | "jdk.dynalink.StandardNamespace" | "java.nio.file.StandardOpenOption" | "jdk.dynalink.StandardOperation" | "java.net.StandardProtocolFamily" | "java.net.StandardSocketOptions" | "java.nio.file.StandardWatchEventKinds" | "javax.xml.stream.events.StartDocument" | "javax.xml.stream.events.StartElement" | "com.sun.source.doctree.StartElementTree" | "javax.naming.ldap.StartTlsRequest" | "javax.naming.ldap.StartTlsResponse" | "javax.swing.plaf.nimbus.State" | "javax.swing.undo.StateEdit" | "javax.swing.undo.StateEditable" | "javax.naming.spi.StateFactory" | "java.beans.Statement" | "java.sql.Statement" | "javax.sql.StatementEvent" | "javax.sql.StatementEventListener" | "jdk.jshell.StatementSnippet" | "com.sun.source.tree.StatementTree" | "jdk.dynalink.beans.StaticClass" | "javax.xml.transform.stax.StAXResult" | "javax.xml.transform.stax.StAXSource" | "com.sun.jdi.event.StepEvent" | "com.sun.jdi.request.StepRequest" | "java.util.stream.Stream" | "java.util.stream.Stream.Builder" | "java.io.StreamCorruptedException" | "javax.xml.stream.StreamFilter" | "java.util.logging.StreamHandler" | "jdk.jshell.execution.StreamingExecutionControl" | "javax.print.StreamPrintService" | "javax.print.StreamPrintServiceFactory" | "javax.xml.stream.util.StreamReaderDelegate" | "javax.xml.transform.stream.StreamResult" | "javax.xml.transform.stream.StreamSource" | "java.util.stream.StreamSupport" | "java.io.StreamTokenizer" | "java.lang.StrictMath" | "java.lang.String" | "java.lang.StringBuffer" | "java.lang.StringBuilder" | "java.text.StringCharacterIterator" | "java.lang.invoke.StringConcatException" | "java.lang.invoke.StringConcatFactory" | "javax.swing.text.StringContent" | "java.lang.StringIndexOutOfBoundsException" | "java.util.StringJoiner" | "javax.management.monitor.StringMonitor" | "javax.management.monitor.StringMonitorMBean" | "java.io.StringReader" | "javax.naming.StringRefAddr" | "com.sun.jdi.StringReference" | "java.awt.datatransfer.StringSelection" | "java.util.StringTokenizer" | "javax.management.StringValueExp" | "java.io.StringWriter" | "java.awt.Stroke" | "javax.swing.border.StrokeBorder" | "java.sql.Struct" | "java.rmi.StubNotFoundException" | "javax.swing.text.Style" | "javax.swing.text.StyleConstants" | "javax.swing.text.StyleConstants.CharacterConstants" | "javax.swing.text.StyleConstants.ColorConstants" | "javax.swing.text.StyleConstants.FontConstants" | "javax.swing.text.StyleConstants.ParagraphConstants" | "javax.swing.text.StyleContext" | "javax.swing.text.StyledDocument" | "javax.swing.text.StyledEditorKit" | "javax.swing.text.StyledEditorKit.AlignmentAction" | "javax.swing.text.StyledEditorKit.BoldAction" | "javax.swing.text.StyledEditorKit.FontFamilyAction" | "javax.swing.text.StyledEditorKit.FontSizeAction" | "javax.swing.text.StyledEditorKit.ForegroundAction" | "javax.swing.text.StyledEditorKit.ItalicAction" | "javax.swing.text.StyledEditorKit.StyledTextAction" | "javax.swing.text.StyledEditorKit.UnderlineAction" | "javax.swing.text.html.StyleSheet" | "dom.org.w3c.dom.stylesheets.StyleSheet" | "javax.swing.text.html.StyleSheet.BoxPainter" | "javax.swing.text.html.StyleSheet.ListPainter" | "dom.org.w3c.dom.stylesheets.StyleSheetList" | "javax.security.auth.Subject" | "javax.management.remote.SubjectDelegationPermission" | "javax.security.auth.SubjectDomainCombiner" | "java.util.concurrent.SubmissionPublisher" | "com.sun.source.doctree.SummaryTree" | "java.util.function.Supplier" | "javax.print.attribute.SupportedValuesAttribute" | "javax.swing.SwingConstants" | "com.sun.java.accessibility.util.SwingEventMonitor" | "javax.swing.event.SwingPropertyChangeSupport" | "javax.swing.SwingUtilities" | "javax.swing.SwingWorker" | "javax.swing.SwingWorker.StateValue" | "java.lang.invoke.SwitchPoint" | "com.sun.source.tree.SwitchTree" | "rowset.javax.sql.rowset.spi.SyncFactory" | "rowset.javax.sql.rowset.spi.SyncFactoryException" | "java.io.SyncFailedException" | "com.sun.source.tree.SynchronizedTree" | "java.util.concurrent.SynchronousQueue" | "rowset.javax.sql.rowset.spi.SyncProvider" | "rowset.javax.sql.rowset.spi.SyncProviderException" | "rowset.javax.sql.rowset.spi.SyncResolver" | "javax.swing.plaf.synth.SynthButtonUI" | "javax.swing.plaf.synth.SynthCheckBoxMenuItemUI" | "javax.swing.plaf.synth.SynthCheckBoxUI" | "javax.swing.plaf.synth.SynthColorChooserUI" | "javax.swing.plaf.synth.SynthComboBoxUI" | "javax.swing.plaf.synth.SynthConstants" | "javax.swing.plaf.synth.SynthContext" | "javax.swing.plaf.synth.SynthDesktopIconUI" | "javax.swing.plaf.synth.SynthDesktopPaneUI" | "javax.swing.plaf.synth.SynthEditorPaneUI" | "javax.sound.midi.Synthesizer" | "javax.swing.plaf.synth.SynthFormattedTextFieldUI" | "javax.swing.plaf.synth.SynthGraphicsUtils" | "javax.swing.plaf.synth.SynthIcon" | "javax.swing.plaf.synth.SynthInternalFrameUI" | "javax.swing.plaf.synth.SynthLabelUI" | "javax.swing.plaf.synth.SynthListUI" | "javax.swing.plaf.synth.SynthLookAndFeel" | "javax.swing.plaf.synth.SynthMenuBarUI" | "javax.swing.plaf.synth.SynthMenuItemUI" | "javax.swing.plaf.synth.SynthMenuUI" | "javax.swing.plaf.synth.SynthOptionPaneUI" | "javax.swing.plaf.synth.SynthPainter" | "javax.swing.plaf.synth.SynthPanelUI" | "javax.swing.plaf.synth.SynthPasswordFieldUI" | "javax.swing.plaf.synth.SynthPopupMenuUI" | "javax.swing.plaf.synth.SynthProgressBarUI" | "javax.swing.plaf.synth.SynthRadioButtonMenuItemUI" | "javax.swing.plaf.synth.SynthRadioButtonUI" | "javax.swing.plaf.synth.SynthRootPaneUI" | "javax.swing.plaf.synth.SynthScrollBarUI" | "javax.swing.plaf.synth.SynthScrollPaneUI" | "javax.swing.plaf.synth.SynthSeparatorUI" | "javax.swing.plaf.synth.SynthSliderUI" | "javax.swing.plaf.synth.SynthSpinnerUI" | "javax.swing.plaf.synth.SynthSplitPaneUI" | "javax.swing.plaf.synth.SynthStyle" | "javax.swing.plaf.synth.SynthStyleFactory" | "javax.swing.plaf.synth.SynthTabbedPaneUI" | "javax.swing.plaf.synth.SynthTableHeaderUI" | "javax.swing.plaf.synth.SynthTableUI" | "javax.swing.plaf.synth.SynthTextAreaUI" | "javax.swing.plaf.synth.SynthTextFieldUI" | "javax.swing.plaf.synth.SynthTextPaneUI" | "javax.swing.plaf.synth.SynthToggleButtonUI" | "javax.swing.plaf.synth.SynthToolBarUI" | "javax.swing.plaf.synth.SynthToolTipUI" | "javax.swing.plaf.synth.SynthTreeUI" | "javax.swing.plaf.synth.SynthUI" | "javax.swing.plaf.synth.SynthViewportUI" | "javax.sound.midi.SysexMessage" | "java.lang.System" | "java.lang.System.Logger" | "java.lang.System.Logger.Level" | "java.lang.System.LoggerFinder" | "java.awt.SystemColor" | "java.awt.desktop.SystemEventListener" | "java.awt.datatransfer.SystemFlavorMap" | "java.awt.desktop.SystemSleepEvent" | "java.awt.desktop.SystemSleepListener" | "java.awt.SystemTray" | "javax.swing.text.TabableView" | "javax.swing.plaf.TabbedPaneUI" | "javax.swing.text.TabExpander" | "javax.swing.table.TableCellEditor" | "javax.swing.table.TableCellRenderer" | "javax.swing.table.TableColumn" | "javax.swing.table.TableColumnModel" | "javax.swing.event.TableColumnModelEvent" | "javax.swing.event.TableColumnModelListener" | "javax.swing.plaf.TableHeaderUI" | "javax.swing.table.TableModel" | "javax.swing.event.TableModelEvent" | "javax.swing.event.TableModelListener" | "javax.swing.table.TableRowSorter" | "javax.swing.table.TableStringConverter" | "javax.swing.plaf.TableUI" | "javax.swing.text.TableView" | "javax.swing.text.TabSet" | "javax.swing.text.TabStop" | "javax.management.openmbean.TabularData" | "javax.management.openmbean.TabularDataSupport" | "javax.management.openmbean.TabularType" | "javax.swing.text.html.parser.TagElement" | "jdk.javadoc.doclet.Taglet" | "jdk.javadoc.doclet.Taglet.Location" | "javax.sound.sampled.TargetDataLine" | "javax.management.remote.TargetedNotification" | "java.awt.Taskbar" | "java.awt.Taskbar.Feature" | "java.awt.Taskbar.State" | "com.sun.source.util.TaskEvent" | "com.sun.source.util.TaskEvent.Kind" | "com.sun.source.util.TaskListener" | "javax.xml.transform.Templates" | "javax.xml.transform.sax.TemplatesHandler" | "java.time.temporal.Temporal" | "java.time.temporal.TemporalAccessor" | "java.time.temporal.TemporalAdjuster" | "java.time.temporal.TemporalAdjusters" | "java.time.temporal.TemporalAmount" | "java.time.temporal.TemporalField" | "java.time.temporal.TemporalQueries" | "java.time.temporal.TemporalQuery" | "java.time.temporal.TemporalUnit" | "javax.smartcardio.TerminalFactory" | "javax.smartcardio.TerminalFactorySpi" | "org.w3c.dom.Text" | "javax.swing.text.TextAction" | "java.awt.TextArea" | "java.awt.font.TextAttribute" | "auth.com.sun.security.auth.callback.TextCallbackHandler" | "java.awt.TextComponent" | "java.awt.event.TextEvent" | "java.awt.TextField" | "java.awt.font.TextHitInfo" | "javax.security.auth.callback.TextInputCallback" | "java.awt.font.TextLayout" | "java.awt.font.TextLayout.CaretPolicy" | "java.awt.event.TextListener" | "java.awt.font.TextMeasurer" | "javax.security.auth.callback.TextOutputCallback" | "java.time.format.TextStyle" | "javax.print.attribute.TextSyntax" | "com.sun.source.doctree.TextTree" | "javax.swing.plaf.TextUI" | "java.awt.TexturePaint" | "java.time.chrono.ThaiBuddhistChronology" | "java.time.chrono.ThaiBuddhistDate" | "java.time.chrono.ThaiBuddhistEra" | "java.lang.Thread" | "java.lang.Thread.State" | "java.lang.Thread.UncaughtExceptionHandler" | "java.lang.ThreadDeath" | "com.sun.jdi.event.ThreadDeathEvent" | "com.sun.jdi.request.ThreadDeathRequest" | "java.util.concurrent.ThreadFactory" | "java.lang.ThreadGroup" | "com.sun.jdi.ThreadGroupReference" | "java.lang.management.ThreadInfo" | "java.lang.ThreadLocal" | "java.util.concurrent.ThreadLocalRandom" | "com.sun.management.ThreadMXBean" | "java.lang.management.ThreadMXBean" | "java.util.concurrent.ThreadPoolExecutor" | "java.util.concurrent.ThreadPoolExecutor.AbortPolicy" | "java.util.concurrent.ThreadPoolExecutor.CallerRunsPolicy" | "java.util.concurrent.ThreadPoolExecutor.DiscardOldestPolicy" | "java.util.concurrent.ThreadPoolExecutor.DiscardPolicy" | "com.sun.jdi.ThreadReference" | "com.sun.jdi.event.ThreadStartEvent" | "com.sun.jdi.request.ThreadStartRequest" | "java.lang.Throwable" | "com.sun.source.doctree.ThrowsTree" | "com.sun.source.tree.ThrowTree" | "javax.imageio.plugins.tiff.TIFFDirectory" | "javax.imageio.plugins.tiff.TIFFField" | "javax.imageio.plugins.tiff.TIFFImageReadParam" | "javax.imageio.plugins.tiff.TIFFTag" | "javax.imageio.plugins.tiff.TIFFTagSet" | "java.awt.image.TileObserver" | "java.sql.Time" | "javax.naming.TimeLimitExceededException" | "java.util.concurrent.TimeoutException" | "java.util.Timer" | "javax.management.timer.Timer" | "javax.swing.Timer" | "javax.management.timer.TimerMBean" | "javax.management.timer.TimerNotification" | "java.util.TimerTask" | "java.security.Timestamp" | "java.sql.Timestamp" | "java.util.concurrent.TimeUnit" | "java.util.TimeZone" | "java.util.spi.TimeZoneNameProvider" | "javax.swing.border.TitledBorder" | "java.util.function.ToDoubleBiFunction" | "java.util.function.ToDoubleFunction" | "java.util.function.ToIntBiFunction" | "java.util.function.ToIntFunction" | "java.util.function.ToLongBiFunction" | "java.util.function.ToLongFunction" | "javax.tools.Tool" | "javax.swing.plaf.ToolBarUI" | "java.awt.Toolkit" | "java.util.spi.ToolProvider" | "javax.tools.ToolProvider" | "javax.swing.ToolTipManager" | "javax.swing.plaf.ToolTipUI" | "java.util.TooManyListenersException" | "com.sun.java.accessibility.util.TopLevelWindowListener" | "javax.sound.midi.Track" | "rowset.javax.sql.rowset.spi.TransactionalWriter" | "java.awt.datatransfer.Transferable" | "javax.swing.TransferHandler" | "javax.swing.TransferHandler.DropLocation" | "javax.swing.TransferHandler.TransferSupport" | "java.util.concurrent.TransferQueue" | "crypto.javax.xml.crypto.dsig.Transform" | "java.awt.font.TransformAttribute" | "javax.xml.transform.Transformer" | "javax.xml.transform.TransformerConfigurationException" | "javax.xml.transform.TransformerException" | "javax.xml.transform.TransformerFactory" | "javax.xml.transform.TransformerFactoryConfigurationError" | "javax.xml.transform.sax.TransformerHandler" | "crypto.javax.xml.crypto.dsig.TransformException" | "crypto.javax.xml.crypto.dsig.spec.TransformParameterSpec" | "crypto.javax.xml.crypto.dsig.TransformService" | "com.sun.java.accessibility.util.Translator" | "javax.sound.midi.Transmitter" | "java.awt.Transparency" | "com.sun.jdi.connect.Transport" | "com.sun.jdi.connect.spi.TransportService" | "com.sun.jdi.connect.spi.TransportService.Capabilities" | "com.sun.jdi.connect.spi.TransportService.ListenKey" | "com.sun.jdi.connect.TransportTimeoutException" | "java.awt.TrayIcon" | "java.awt.TrayIcon.MessageType" | "com.sun.source.tree.Tree" | "com.sun.source.tree.Tree.Kind" | "javax.swing.tree.TreeCellEditor" | "javax.swing.tree.TreeCellRenderer" | "javax.swing.event.TreeExpansionEvent" | "javax.swing.event.TreeExpansionListener" | "java.util.TreeMap" | "javax.swing.tree.TreeModel" | "javax.swing.event.TreeModelEvent" | "javax.swing.event.TreeModelListener" | "javax.swing.tree.TreeNode" | "com.sun.source.util.TreePath" | "javax.swing.tree.TreePath" | "com.sun.source.util.TreePathScanner" | "com.sun.source.util.Trees" | "com.sun.source.util.TreeScanner" | "javax.swing.event.TreeSelectionEvent" | "javax.swing.event.TreeSelectionListener" | "javax.swing.tree.TreeSelectionModel" | "java.util.TreeSet" | "javax.swing.plaf.TreeUI" | "com.sun.source.tree.TreeVisitor" | "org.w3c.dom.traversal.TreeWalker" | "javax.swing.event.TreeWillExpandListener" | "java.security.cert.TrustAnchor" | "javax.net.ssl.TrustManager" | "javax.net.ssl.TrustManagerFactory" | "javax.net.ssl.TrustManagerFactorySpi" | "com.sun.source.tree.TryTree" | "com.sun.jdi.Type" | "java.lang.reflect.Type" | "jdk.dynalink.linker.TypeBasedGuardingDynamicLinker" | "com.sun.source.tree.TypeCastTree" | "com.sun.jdi.TypeComponent" | "jdk.jshell.TypeDeclSnippet" | "javax.lang.model.element.TypeElement" | "org.w3c.dom.TypeInfo" | "javax.xml.validation.TypeInfoProvider" | "javax.lang.model.type.TypeKind" | "javax.lang.model.util.TypeKindVisitor6" | "javax.lang.model.util.TypeKindVisitor7" | "javax.lang.model.util.TypeKindVisitor8" | "javax.lang.model.util.TypeKindVisitor9" | "javax.lang.model.type.TypeMirror" | "java.lang.TypeNotPresentException" | "javax.lang.model.element.TypeParameterElement" | "com.sun.source.tree.TypeParameterTree" | "java.sql.Types" | "javax.lang.model.util.Types" | "jdk.dynalink.linker.support.TypeUtilities" | "java.lang.reflect.TypeVariable" | "javax.lang.model.type.TypeVariable" | "javax.lang.model.type.TypeVisitor" | "javax.swing.UIClientPropertyKey" | "java.rmi.server.UID" | "javax.swing.UIDefaults" | "javax.swing.UIDefaults.ActiveValue" | "javax.swing.UIDefaults.LazyInputMap" | "javax.swing.UIDefaults.LazyValue" | "javax.swing.UIDefaults.ProxyLazyValue" | "org.w3c.dom.events.UIEvent" | "javax.swing.UIManager" | "javax.swing.UIManager.LookAndFeelInfo" | "javax.swing.plaf.UIResource" | "java.util.function.UnaryOperator" | "com.sun.source.tree.UnaryTree" | "java.io.UncheckedIOException" | "java.lang.reflect.UndeclaredThrowableException" | "javax.swing.undo.UndoableEdit" | "javax.swing.event.UndoableEditEvent" | "javax.swing.event.UndoableEditListener" | "javax.swing.undo.UndoableEditSupport" | "javax.swing.undo.UndoManager" | "java.rmi.UnexpectedException" | "java.rmi.server.UnicastRemoteObject" | "javax.lang.model.type.UnionType" | "com.sun.source.tree.UnionTypeTree" | "auth.com.sun.security.auth.module.UnixLoginModule" | "auth.com.sun.security.auth.UnixNumericGroupPrincipal" | "auth.com.sun.security.auth.UnixNumericUserPrincipal" | "com.sun.management.UnixOperatingSystemMXBean" | "auth.com.sun.security.auth.UnixPrincipal" | "auth.com.sun.security.auth.module.UnixSystem" | "javax.lang.model.element.UnknownAnnotationValueException" | "com.sun.source.doctree.UnknownBlockTagTree" | "javax.lang.model.element.UnknownDirectiveException" | "javax.lang.model.element.UnknownElementException" | "javax.lang.model.UnknownEntityException" | "java.lang.UnknownError" | "java.util.UnknownFormatConversionException" | "java.util.UnknownFormatFlagsException" | "java.rmi.activation.UnknownGroupException" | "java.net.UnknownHostException" | "java.rmi.UnknownHostException" | "com.sun.source.doctree.UnknownInlineTagTree" | "java.rmi.activation.UnknownObjectException" | "java.net.UnknownServiceException" | "javax.lang.model.type.UnknownTypeException" | "java.nio.charset.UnmappableCharacterException" | "java.rmi.UnmarshalException" | "java.lang.instrument.UnmodifiableClassException" | "java.lang.instrument.UnmodifiableModuleException" | "javax.print.attribute.UnmodifiableSetException" | "java.security.UnrecoverableEntryException" | "java.security.UnrecoverableKeyException" | "java.rmi.server.Unreferenced" | "java.nio.channels.UnresolvedAddressException" | "java.security.UnresolvedPermission" | "jdk.jshell.UnresolvedReferenceException" | "java.lang.UnsatisfiedLinkError" | "javax.naming.ldap.UnsolicitedNotification" | "javax.naming.ldap.UnsolicitedNotificationEvent" | "javax.naming.ldap.UnsolicitedNotificationListener" | "java.nio.channels.UnsupportedAddressTypeException" | "javax.sound.sampled.UnsupportedAudioFileException" | "javax.security.auth.callback.UnsupportedCallbackException" | "java.nio.charset.UnsupportedCharsetException" | "java.lang.UnsupportedClassVersionError" | "java.io.UnsupportedEncodingException" | "java.awt.datatransfer.UnsupportedFlavorException" | "javax.swing.UnsupportedLookAndFeelException" | "java.lang.UnsupportedOperationException" | "java.time.temporal.UnsupportedTemporalTypeException" | "java.net.URI" | "java.security.cert.URICertStoreParameters" | "crypto.javax.xml.crypto.URIDereferencer" | "javax.print.URIException" | "java.security.URIParameter" | "crypto.javax.xml.crypto.URIReference" | "crypto.javax.xml.crypto.URIReferenceException" | "javax.xml.transform.URIResolver" | "javax.print.attribute.URISyntax" | "java.net.URISyntaxException" | "java.net.URL" | "java.net.URLClassLoader" | "java.net.URLConnection" | "java.net.URLDecoder" | "java.net.URLEncoder" | "java.net.URLPermission" | "java.net.URLStreamHandler" | "java.net.URLStreamHandlerFactory" | "java.net.spi.URLStreamHandlerProvider" | "org.w3c.dom.UserDataHandler" | "java.nio.file.attribute.UserDefinedFileAttributeView" | "auth.com.sun.security.auth.UserPrincipal" | "java.nio.file.attribute.UserPrincipal" | "java.nio.file.attribute.UserPrincipalLookupService" | "java.nio.file.attribute.UserPrincipalNotFoundException" | "java.awt.desktop.UserSessionEvent" | "java.awt.desktop.UserSessionEvent.Reason" | "java.awt.desktop.UserSessionListener" | "com.sun.source.doctree.UsesTree" | "com.sun.source.tree.UsesTree" | "java.io.UTFDataFormatException" | "jdk.jshell.execution.Util" | "javax.swing.text.Utilities" | "java.util.UUID" | "javax.xml.validation.Validator" | "javax.xml.validation.ValidatorHandler" | "com.sun.jdi.Value" | "jdk.jfr.ValueDescriptor" | "javax.management.ValueExp" | "java.time.temporal.ValueRange" | "com.sun.source.doctree.ValueTree" | "java.lang.invoke.VarHandle" | "java.lang.invoke.VarHandle.AccessMode" | "javax.lang.model.element.VariableElement" | "javax.swing.tree.VariableHeightLayoutCache" | "com.sun.source.tree.VariableTree" | "jdk.jshell.VarSnippet" | "java.util.Vector" | "java.lang.VerifyError" | "com.sun.source.doctree.VersionTree" | "java.beans.VetoableChangeListener" | "java.beans.VetoableChangeListenerProxy" | "java.beans.VetoableChangeSupport" | "javax.swing.text.View" | "dom.org.w3c.dom.css.ViewCSS" | "javax.swing.text.ViewFactory" | "javax.swing.ViewportLayout" | "javax.swing.plaf.ViewportUI" | "com.sun.jdi.VirtualMachine" | "com.sun.tools.attach.VirtualMachine" | "com.sun.tools.attach.VirtualMachineDescriptor" | "java.lang.VirtualMachineError" | "com.sun.jdi.VirtualMachineManager" | "java.beans.Visibility" | "com.sun.jdi.VMCannotBeModifiedException" | "com.sun.jdi.event.VMDeathEvent" | "com.sun.jdi.request.VMDeathRequest" | "com.sun.jdi.VMDisconnectedException" | "com.sun.jdi.event.VMDisconnectEvent" | "java.rmi.dgc.VMID" | "com.sun.jdi.VMMismatchException" | "com.sun.management.VMOption" | "com.sun.management.VMOption.Origin" | "com.sun.jdi.VMOutOfMemoryException" | "com.sun.jdi.event.VMStartEvent" | "com.sun.jdi.connect.VMStartException" | "javax.sound.midi.VoiceStatus" | "java.lang.Void" | "com.sun.jdi.VoidType" | "com.sun.jdi.VoidValue" | "java.lang.invoke.VolatileCallSite" | "java.awt.image.VolatileImage" | "java.nio.file.Watchable" | "java.nio.file.WatchEvent" | "java.nio.file.WatchEvent.Kind" | "java.nio.file.WatchEvent.Modifier" | "java.nio.file.WatchKey" | "com.sun.jdi.event.WatchpointEvent" | "com.sun.jdi.request.WatchpointRequest" | "java.nio.file.WatchService" | "java.util.WeakHashMap" | "java.lang.ref.WeakReference" | "rowset.javax.sql.rowset.WebRowSet" | "http.java.net.http.WebSocket" | "http.java.net.http.WebSocket.Builder" | "http.java.net.http.WebSocket.Listener" | "http.java.net.http.WebSocketHandshakeException" | "java.time.temporal.WeekFields" | "com.sun.source.tree.WhileLoopTree" | "com.sun.source.tree.WildcardTree" | "java.lang.reflect.WildcardType" | "javax.lang.model.type.WildcardType" | "java.awt.Window" | "java.awt.Window.Type" | "java.awt.event.WindowAdapter" | "javax.swing.WindowConstants" | "java.awt.event.WindowEvent" | "java.awt.event.WindowFocusListener" | "java.awt.event.WindowListener" | "java.awt.event.WindowStateListener" | "javax.swing.text.WrappedPlainView" | "java.sql.Wrapper" | "java.nio.channels.WritableByteChannel" | "java.awt.image.WritableRaster" | "java.awt.image.WritableRenderedImage" | "java.io.WriteAbortedException" | "java.nio.channels.WritePendingException" | "java.io.Writer" | "java.lang.invoke.WrongMethodTypeException" | "javax.security.auth.x500.X500Principal" | "javax.security.auth.x500.X500PrivateCredential" | "java.security.cert.X509Certificate" | "java.security.cert.X509CertSelector" | "java.security.cert.X509CRL" | "java.security.cert.X509CRLEntry" | "java.security.cert.X509CRLSelector" | "crypto.javax.xml.crypto.dsig.keyinfo.X509Data" | "java.security.spec.X509EncodedKeySpec" | "javax.net.ssl.X509ExtendedKeyManager" | "javax.net.ssl.X509ExtendedTrustManager" | "java.security.cert.X509Extension" | "crypto.javax.xml.crypto.dsig.keyinfo.X509IssuerSerial" | "javax.net.ssl.X509KeyManager" | "javax.net.ssl.X509TrustManager" | "javax.sql.XAConnection" | "javax.sql.XAConnectionBuilder" | "javax.sql.XADataSource" | "xa.javax.transaction.xa.XAException" | "xa.javax.transaction.xa.XAResource" | "java.security.interfaces.XECKey" | "java.security.interfaces.XECPrivateKey" | "java.security.spec.XECPrivateKeySpec" | "java.security.interfaces.XECPublicKey" | "java.security.spec.XECPublicKeySpec" | "xa.javax.transaction.xa.Xid" | "javax.xml.XMLConstants" | "crypto.javax.xml.crypto.XMLCryptoContext" | "java.beans.XMLDecoder" | "java.beans.XMLEncoder" | "javax.xml.stream.events.XMLEvent" | "javax.xml.stream.util.XMLEventAllocator" | "javax.xml.stream.util.XMLEventConsumer" | "javax.xml.stream.XMLEventFactory" | "javax.xml.stream.XMLEventReader" | "javax.xml.stream.XMLEventWriter" | "org.xml.sax.XMLFilter" | "org.xml.sax.helpers.XMLFilterImpl" | "java.util.logging.XMLFormatter" | "javax.xml.datatype.XMLGregorianCalendar" | "javax.xml.stream.XMLInputFactory" | "crypto.javax.xml.crypto.dsig.XMLObject" | "javax.xml.stream.XMLOutputFactory" | "javax.management.modelmbean.XMLParseException" | "rowset.javax.sql.rowset.spi.XmlReader" | "org.xml.sax.XMLReader" | "org.xml.sax.helpers.XMLReaderAdapter" | "javax.xml.stream.XMLReporter" | "javax.xml.stream.XMLResolver" | "crypto.javax.xml.crypto.dsig.XMLSignature" | "crypto.javax.xml.crypto.dsig.XMLSignature.SignatureValue" | "crypto.javax.xml.crypto.dsig.XMLSignatureException" | "crypto.javax.xml.crypto.dsig.XMLSignatureFactory" | "crypto.javax.xml.crypto.dsig.XMLSignContext" | "javax.xml.stream.XMLStreamConstants" | "javax.xml.stream.XMLStreamException" | "javax.xml.stream.XMLStreamReader" | "javax.xml.stream.XMLStreamWriter" | "crypto.javax.xml.crypto.XMLStructure" | "crypto.javax.xml.crypto.dsig.XMLValidateContext" | "rowset.javax.sql.rowset.spi.XmlWriter" | "javax.xml.xpath.XPath" | "javax.xml.xpath.XPathConstants" | "javax.xml.xpath.XPathEvaluationResult" | "javax.xml.xpath.XPathEvaluationResult.XPathResultType" | "dom.org.w3c.dom.xpath.XPathEvaluator" | "javax.xml.xpath.XPathException" | "dom.org.w3c.dom.xpath.XPathException" | "javax.xml.xpath.XPathExpression" | "dom.org.w3c.dom.xpath.XPathExpression" | "javax.xml.xpath.XPathExpressionException" | "javax.xml.xpath.XPathFactory" | "javax.xml.xpath.XPathFactoryConfigurationException" | "crypto.javax.xml.crypto.dsig.spec.XPathFilter2ParameterSpec" | "crypto.javax.xml.crypto.dsig.spec.XPathFilterParameterSpec" | "javax.xml.xpath.XPathFunction" | "javax.xml.xpath.XPathFunctionException" | "javax.xml.xpath.XPathFunctionResolver" | "dom.org.w3c.dom.xpath.XPathNamespace" | "javax.xml.xpath.XPathNodes" | "dom.org.w3c.dom.xpath.XPathNSResolver" | "dom.org.w3c.dom.xpath.XPathResult" | "crypto.javax.xml.crypto.dsig.spec.XPathType" | "crypto.javax.xml.crypto.dsig.spec.XPathType.Filter" | "javax.xml.xpath.XPathVariableResolver" | "crypto.javax.xml.crypto.dsig.spec.XSLTTransformParameterSpec" | "java.time.Year" | "java.time.YearMonth" | "java.util.zip.ZipEntry" | "java.util.zip.ZipError" | "java.util.zip.ZipException" | "java.util.zip.ZipFile" | "java.util.zip.ZipInputStream" | "java.util.zip.ZipOutputStream" | "java.time.ZonedDateTime" | "java.time.ZoneId" | "java.time.ZoneOffset" | "java.time.zone.ZoneOffsetTransition" | "java.time.zone.ZoneOffsetTransitionRule" | "java.time.zone.ZoneOffsetTransitionRule.TimeDefinition" | "java.time.zone.ZoneRules" | "java.time.zone.ZoneRulesException" | "java.time.zone.ZoneRulesProvider" | "javax.swing.text.ZoneView" | "org.graalvm.polyglot.io.ByteSequence" | "org.graalvm.nativeimage.c.type.CCharPointer" | "org.graalvm.nativeimage.c.type.CCharPointerPointer" | "org.graalvm.nativeimage.c.constant.CConstant.ValueAccess" | "org.graalvm.nativeimage.c.CContext.Directives" | "org.graalvm.nativeimage.c.type.CDoublePointer" | "org.graalvm.nativeimage.c.function.CEntryPoint.Builtin" | "org.graalvm.nativeimage.c.function.CEntryPoint.FatalExceptionHandler" | "org.graalvm.nativeimage.c.function.CEntryPointLiteral" | "org.graalvm.nativeimage.c.type.CFloatPointer" | "org.graalvm.nativeimage.c.function.CFunction.Transition" | "org.graalvm.nativeimage.c.function.CFunctionPointer" | "org.graalvm.nativeimage.c.type.CIntPointer" | "org.graalvm.nativeimage.c.type.CIntPointerPointer" | "org.graalvm.nativeimage.c.type.CLongPointer" | "org.graalvm.nativeimage.c.function.CodePointer" | "org.graalvm.word.ComparableWord" | "org.graalvm.polyglot.Context" | "org.graalvm.nativeimage.c.type.CShortPointer" | "org.graalvm.nativeimage.c.type.CTypeConversion" | "org.graalvm.nativeimage.c.type.CTypeConversion.CCharPointerHolder" | "org.graalvm.nativeimage.c.type.CTypeConversion.CCharPointerPointerHolder" | "org.graalvm.nativeimage.CurrentIsolate" | "org.graalvm.collections.EconomicMap" | "org.graalvm.collections.EconomicSet" | "org.graalvm.polyglot.Engine" | "org.graalvm.polyglot.EnvironmentAccess" | "org.graalvm.collections.Equivalence" | "org.graalvm.polyglot.management.ExecutionEvent" | "org.graalvm.polyglot.management.ExecutionListener" | "org.graalvm.nativeimage.hosted.Feature" | "org.graalvm.nativeimage.hosted.Feature.AfterAnalysisAccess" | "org.graalvm.nativeimage.hosted.Feature.AfterCompilationAccess" | "org.graalvm.nativeimage.hosted.Feature.AfterHeapLayoutAccess" | "org.graalvm.nativeimage.hosted.Feature.AfterImageWriteAccess" | "org.graalvm.nativeimage.hosted.Feature.AfterRegistrationAccess" | "org.graalvm.nativeimage.hosted.Feature.BeforeAnalysisAccess" | "org.graalvm.nativeimage.hosted.Feature.BeforeCompilationAccess" | "org.graalvm.nativeimage.hosted.Feature.BeforeImageWriteAccess" | "org.graalvm.nativeimage.hosted.Feature.BeforeUniverseBuildingAccess" | "org.graalvm.nativeimage.hosted.Feature.CompilationAccess" | "org.graalvm.nativeimage.hosted.Feature.DuringAnalysisAccess" | "org.graalvm.nativeimage.hosted.Feature.DuringSetupAccess" | "org.graalvm.nativeimage.hosted.Feature.FeatureAccess" | "org.graalvm.nativeimage.hosted.Feature.IsInConfigurationAccess" | "org.graalvm.nativeimage.hosted.Feature.OnAnalysisExitAccess" | "org.graalvm.nativeimage.hosted.Feature.QueryReachabilityAccess" | "org.graalvm.polyglot.io.FileSystem" | "org.graalvm.home.HomeFinder" | "org.graalvm.polyglot.HostAccess" | "org.graalvm.polyglot.HostAccess.TargetMappingPrecedence" | "org.graalvm.nativeimage.ImageInfo" | "org.graalvm.nativeimage.ImageSingletons" | "org.graalvm.polyglot.Instrument" | "org.graalvm.nativeimage.Isolate" | "org.graalvm.nativeimage.Isolates" | "org.graalvm.nativeimage.Isolates.CreateIsolateParameters" | "org.graalvm.nativeimage.Isolates.CreateIsolateParameters.Builder" | "org.graalvm.nativeimage.Isolates.IsolateException" | "org.graalvm.nativeimage.IsolateThread" | "org.graalvm.polyglot.Language" | "org.graalvm.word.LocationIdentity" | "org.graalvm.nativeimage.LogHandler" | "org.graalvm.collections.MapCursor" | "org.graalvm.polyglot.io.MessageEndpoint" | "org.graalvm.polyglot.io.MessageTransport" | "org.graalvm.polyglot.io.MessageTransport.VetoException" | "org.graalvm.nativeimage.ObjectHandle" | "org.graalvm.nativeimage.ObjectHandles" | "org.graalvm.options.OptionCategory" | "org.graalvm.options.OptionDescriptor" | "org.graalvm.options.OptionDescriptors" | "org.graalvm.options.OptionKey" | "org.graalvm.options.OptionMap" | "org.graalvm.options.OptionStability" | "org.graalvm.options.OptionType" | "org.graalvm.options.OptionValues" | "org.graalvm.collections.Pair" | "org.graalvm.nativeimage.PinnedObject" | "org.graalvm.nativeimage.Platform" | "org.graalvm.nativeimage.Platform.AARCH64" | "org.graalvm.nativeimage.Platform.AMD64" | "org.graalvm.nativeimage.Platform.ANDROID" | "org.graalvm.nativeimage.Platform.ANDROID_AARCH64" | "org.graalvm.nativeimage.Platform.DARWIN" | "org.graalvm.nativeimage.Platform.DARWIN_AARCH64" | "org.graalvm.nativeimage.Platform.DARWIN_AMD64" | "org.graalvm.nativeimage.Platform.HOSTED_ONLY" | "org.graalvm.nativeimage.Platform.IOS" | "org.graalvm.nativeimage.Platform.IOS_AARCH64" | "org.graalvm.nativeimage.Platform.LINUX" | "org.graalvm.nativeimage.Platform.LINUX_AARCH64" | "org.graalvm.nativeimage.Platform.LINUX_AMD64" | "org.graalvm.nativeimage.Platform.WINDOWS" | "org.graalvm.nativeimage.Platform.WINDOWS_AMD64" | "org.graalvm.word.Pointer" | "org.graalvm.word.PointerBase" | "org.graalvm.polyglot.PolyglotAccess" | "org.graalvm.polyglot.PolyglotException" | "org.graalvm.polyglot.io.ProcessHandler" | "org.graalvm.polyglot.io.ProcessHandler.ProcessCommand" | "org.graalvm.polyglot.io.ProcessHandler.Redirect" | "org.graalvm.nativeimage.ProcessProperties" | "org.graalvm.polyglot.proxy.Proxy" | "org.graalvm.polyglot.proxy.ProxyArray" | "org.graalvm.polyglot.proxy.ProxyDate" | "org.graalvm.polyglot.proxy.ProxyDuration" | "org.graalvm.polyglot.proxy.ProxyExecutable" | "org.graalvm.polyglot.proxy.ProxyInstant" | "org.graalvm.polyglot.proxy.ProxyInstantiable" | "org.graalvm.polyglot.proxy.ProxyNativeObject" | "org.graalvm.polyglot.proxy.ProxyObject" | "org.graalvm.polyglot.proxy.ProxyTime" | "org.graalvm.polyglot.proxy.ProxyTimeZone" | "org.graalvm.nativeimage.c.function.RelocatedPointer" | "org.graalvm.polyglot.ResourceLimitEvent" | "org.graalvm.polyglot.ResourceLimits" | "org.graalvm.nativeimage.hosted.RuntimeClassInitialization" | "org.graalvm.nativeimage.RuntimeOptions" | "org.graalvm.nativeimage.RuntimeOptions.OptionClass" | "org.graalvm.nativeimage.hosted.RuntimeReflection" | "org.graalvm.word.SignedWord" | "org.graalvm.nativeimage.c.struct.SizeOf" | "org.graalvm.polyglot.Source" | "org.graalvm.polyglot.SourceSection" | "org.graalvm.nativeimage.StackValue" | "org.graalvm.nativeimage.Threading" | "org.graalvm.nativeimage.Threading.RecurringCallback" | "org.graalvm.nativeimage.Threading.RecurringCallbackAccess" | "org.graalvm.polyglot.TypeLiteral" | "org.graalvm.nativeimage.UnmanagedMemory" | "org.graalvm.collections.UnmodifiableEconomicMap" | "org.graalvm.collections.UnmodifiableEconomicSet" | "org.graalvm.collections.UnmodifiableMapCursor" | "org.graalvm.word.UnsignedWord" | "org.graalvm.polyglot.Value" | "org.graalvm.home.Version" | "org.graalvm.nativeimage.VMRuntime" | "org.graalvm.nativeimage.c.type.VoidPointer" | "org.graalvm.word.WordBase" | "org.graalvm.word.WordFactory" | "org.graalvm.nativeimage.c.type.WordPointer", any>;
    };
    sync: typeof base.sync;
    task: {
        cancel(handle: base.future): void;
        interval(script: Function, period?: number, ...args: any[]): {
            tick: number;
            args: any[];
            script: Function;
        };
        timeout(script: Function, period?: number, ...args: any[]): {
            tick: number;
            args: any[];
            script: Function;
        };
    };
    transfer: typeof base.transfer;
    type: typeof base.type;
    unzip: typeof base.unzip;
} & {
    command: typeof command;
    event: typeof event;
    manager: import("@grakkit/server-classes").obpPluginManager;
    plugin: main;
    server: import("@grakkit/server-classes").obServer;
    type: typeof type;
};
